(function(){"use strict";function QT(n,e){for(var t=0;t<e.length;t++){const r=e[t];if(typeof r!="string"&&!Array.isArray(r)){for(const s in r)if(s!=="default"&&!(s in n)){const o=Object.getOwnPropertyDescriptor(r,s);o&&Object.defineProperty(n,s,o.get?o:{enumerable:!0,get:()=>r[s]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}const JT="https://cdn.jsdelivr.net/gh/Eonarchy/p2025/filter.json";let ho=[],xi=[];const ep=async()=>{try{const n=await fetch(JT);if(!n.ok){console.error(`Failed to fetch filter data: ${n.statusText}`);return}const e=await n.json();ho=e.keywords||[],xi=e.usernames||[]}catch(n){console.error("Error fetching filter data:",n)}},tp=()=>{if(ho.length===0&&xi.length===0){console.warn("No data to store in local storage.");return}const n={keywords:ho,usernames:xi};localStorage.setItem("filterData",JSON.stringify(n))},ZT=()=>{const n=localStorage.getItem("filterData");if(n){const e=JSON.parse(n);if(!e.keywords||!e.usernames){console.warn("No keywords or usernames found in local storage. Fetching from external file..."),ep().then(()=>{tp()});return}ho=e.keywords||[],xi=e.usernames||[]}else{console.warn("No local storage found. Fetching from external file..."),ep().then(()=>{tp()});return}};ep(),tp(),ZT();const eE={"@":["a","u"],4:["a"],1:["i","l"],"!":["i","l","!"],3:["e"],0:["o"],7:["t"],9:["g"],6:["b","g"],2:["z"],5:["s"],$:["s","$"]};function tE(n){if(/^\d+$/.test(n))return[n];const t=n.toLowerCase().split("").map(r=>eE[r]||[r]);return nE(t)}function nE(n){return n.reduce((e,t)=>e.flatMap(r=>t.map(s=>r+s)),[""])}function rE(n){const r=n.split(/\b/).flatMap(s=>/\w+/.test(s)?tE(s):[s]).join("").toLowerCase();return ho.some(s=>r.includes(s))}const sE={strict:3,medium:2,low:1};function oE(n,e){const t=[],r=n.length,s=e.length;if(r===0)return s;if(s===0)return r;for(let o=0;o<=r;o++)t[o]=[o];for(let o=0;o<=s;o++)t[0][o]=o;for(let o=1;o<=r;o++)for(let a=1;a<=s;a++)n[o-1]===e[a-1]?t[o][a]=t[o-1][a-1]:t[o][a]=Math.min(t[o-1][a-1]+1,t[o][a-1]+1,t[o-1][a]+1);return t[r][s]}function aE(n,e,t="medium"){const s=n.toLowerCase().split(/\s+/),o=sE[t];for(const a of s)for(const i of e)if(a===i.toLowerCase()||oE(a,i)<=o)return!0;return!1}function iE(n,e,t="medium"){return aE(n,e,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Oy=function(n,e){return(Oy=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var s in r)r.hasOwnProperty(s)&&(t[s]=r[s])})(n,e)};function xr(n,e){function t(){this.constructor=n}Oy(n,e),n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}function Ie(n,e,t,r){return new(t||(t=Promise))(function(s,o){function a(c){try{u(r.next(c))}catch(l){o(l)}}function i(c){try{u(r.throw(c))}catch(l){o(l)}}function u(c){c.done?s(c.value):new t(function(l){l(c.value)}).then(a,i)}u((r=r.apply(n,[])).next())})}function ke(n,e){var t,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function i(u){return function(c){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(s=2&l[0]?r.return:l[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,l[1])).done)return s;switch(r=0,s&&(l=[2&l[0],s.value]),l[0]){case 0:case 1:s=l;break;case 4:return a.label++,{value:l[1],done:!1};case 5:a.label++,r=l[1],l=[0];continue;case 7:l=a.ops.pop(),a.trys.pop();continue;default:if(!(s=(s=a.trys).length>0&&s[s.length-1])&&(l[0]===6||l[0]===2)){a=0;continue}if(l[0]===3&&(!s||l[1]>s[0]&&l[1]<s[3])){a.label=l[1];break}if(l[0]===6&&a.label<s[1]){a.label=s[1],s=l;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(l);break}s[2]&&a.ops.pop(),a.trys.pop();continue}l=e.call(n,a)}catch(h){l=[6,h],r=0}finally{t=s=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}var uE=function(){function n(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}return n.prototype.setPlatform=function(e,t){this.platform!=null&&console.warn("Platform "+this.platformName+" has already been set. Overwriting the platform with "+t+"."),this.platformName=e,this.platform=t},n.prototype.registerFlag=function(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){var s=this.urlFlags[e];console.warn("Setting feature override from URL "+e+": "+s+"."),this.set(e,s)}},n.prototype.get=function(e){return e in this.flags?this.flags[e]:(this.flags[e]=this.evaluateFlag(e),this.flags[e])},n.prototype.getNumber=function(e){return this.get(e)},n.prototype.getBool=function(e){return this.get(e)},n.prototype.getFlags=function(){return this.flags},Object.defineProperty(n.prototype,"features",{get:function(){return this.flags},enumerable:!0,configurable:!0}),n.prototype.set=function(e,t){if(this.flagRegistry[e]==null)throw new Error("Cannot set flag "+e+" as it has not been registered.");this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)},n.prototype.evaluateFlag=function(e){if(this.flagRegistry[e]==null)throw new Error("Cannot evaluate flag '"+e+"': no evaluation function found.");return this.flagRegistry[e].evaluationFn()},n.prototype.setFlags=function(e){this.flags=Object.assign({},e)},n.prototype.reset=function(){this.flags={},this.urlFlags={},this.populateURLFlags()},n.prototype.populateURLFlags=function(){var e=this;if(this.global!==void 0&&this.global.location!==void 0&&this.global.location.search!==void 0){var t,r,s=(t=this.global.location.search,r={},t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,function(o){for(var a=[],i=1;i<arguments.length;i++)a[i-1]=arguments[i];return cE(r,a[0],a[1]),a.join("=")}),r);"tfjsflags"in s&&s.tfjsflags.split(",").forEach(function(o){var a=o.split(":"),i=a[0],u=a[1];e.urlFlags[i]=function(c,l){if((l=l.toLowerCase())==="true"||l==="false")return l==="true";if(""+ +l===l)return+l;throw new Error("Could not parse value flag value "+l+" for flag "+c+".")}(i,u)})}},n}();function cE(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function se(){return _y}var _y=null,Oc=new Map,np=new Map;function My(n,e){var t=zy(n,e);return Oc.get(t)}function Ly(n){return np.get(n)}function Py(n){for(var e=Oc.entries(),t=[];;){var r=e.next(),s=r.done,o=r.value;if(s)break;var a=o[0],i=o[1];a.split("_")[0]===n&&t.push(i)}return t}function By(n){var e=n.kernelName,t=n.backendName,r=zy(e,t);if(Oc.has(r))throw new Error("The kernel '"+e+"' for backend '"+t+"' is already registered");Oc.set(r,n)}function lE(n){var e=n.kernelName;np.has(e)&&console.warn("Overriding the gradient for '"+e+"'"),np.set(e,n)}function zy(n,e){return e+"_"+n}function Vy(n){for(var e=n.length,t=0,r=0;e>0;)r=Math.random()*e|0,t=n[--e],n[e]=n[r],n[r]=t}function _c(n,e,t){return Math.max(n,Math.min(e,t))}function rp(n){return n%2==0?n:n+1}function Wy(n){for(var e=0,t=0;t<n.length;t++)e+=n[t];return e}function _(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function rt(n,e,t){t===void 0&&(t=""),_(Wt(n,e),function(){return t+" Shapes "+n+" and "+e+" must match"})}function po(n){_(n!=null,function(){return"The input to the tensor constructor must be a non-null value."})}function fo(n,e,t){if(e===void 0&&(e=[]),t===void 0&&(t=!1),e==null&&(e=[]),Array.isArray(n)||yr(n)&&!t)for(var r=0;r<n.length;++r)fo(n[r],e,t);else e.push(n);return e}function ve(n){if(n.length===0)return 1;for(var e=n[0],t=1;t<n.length;t++)e*=n[t];return e}function Wt(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(var t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Ct(n){return n%1==0}function Uy(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;var e=Math.exp(2*n);return(e-1)/(e+1)}function Mc(n){var e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function mo(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function sp(n,e,t){return e===void 0&&(e=function(r){return 0}),new Promise(function(r,s){var o=0,a=function(){if(n())r();else{o++;var i=e(o);t!=null&&o>=t?s():setTimeout(a,i)}};a()})}function Gy(n,e){for(var t=1,r=-1,s=0;s<n.length;++s)if(n[s]>=0)t*=n[s];else if(n[s]===-1){if(r!==-1)throw Error("Shapes can only have 1 implicit size. Found -1 at dim "+r+" and dim "+s);r=s}else if(n[s]<0)throw Error("Shapes can not be < 0. Found "+n[s]+" at dim "+s);if(r===-1){if(e>0&&e!==t)throw Error("Size("+e+") must match the product of shape "+n);return n}if(t===0)throw Error("Cannot infer the missing size in ["+n+"] when there are 0 elements");if(e%t!=0)throw Error("The implicit shape can't be a fractional number. Got "+e+" / "+t);var o=n.slice();return o[r]=e/t,o}function Ot(n,e){var t=e.length;return _((n=n==null?e.map(function(r,s){return s}):[].concat(n)).every(function(r){return r>=-t&&r<t}),function(){return"All values in axis param must be in range [-"+t+", "+t+") but got axis "+n}),_(n.every(function(r){return Ct(r)}),function(){return"All values in axis param must be integers but got axis "+n}),n.map(function(r){return r<0?t+r:r})}function Rs(n,e){for(var t=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||s?null:Ot(e,n).sort(),a=0,i=0;i<n.length;++i){if(o!=null){if(o[a]===i&&n[i]!==1)throw new Error("Can't squeeze axis "+i+" since its dim '"+n[i]+"' is not 1");(o[a]==null||o[a]>i)&&n[i]===1&&(t.push(n[i]),r.push(i)),o[a]<=i&&a++}n[i]!==1&&(t.push(n[i]),r.push(i))}return{newShape:t,keptDims:r}}function go(n,e){var t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else{if(n!=="bool")throw new Error("Unknown data type "+n);t=new Uint8Array(e)}return t}function yi(n,e){var t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else{if(n!=="string")throw new Error("Unknown data type "+n);t=new Array(e)}return t}function Hy(n,e){for(var t=0;t<n.length;t++){var r=n[t];if(isNaN(r)||!isFinite(r))throw Error("A tensor of type "+e+" being uploaded contains "+r+".")}}function qy(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function jy(n,e){return e!=="complex64"&&(e!=="float32"||n==="complex64")&&(e!=="int32"||n==="float32"||n==="complex64")&&(e!=="bool"||n!=="bool")}function yr(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array}function op(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error("Unknown dtype "+n)}function Ky(n){if(n==null)return 0;var e=0;return n.forEach(function(t){return e+=t.length}),e}function Lc(n){return typeof n=="string"||n instanceof String}function Xy(n){return typeof n=="boolean"}function Yy(n){return typeof n=="number"}function da(n){return Array.isArray(n)?da(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array?"int32":Yy(n)?"float32":Lc(n)?"string":Xy(n)?"bool":"float32"}function Pc(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Bc(n,e){for(var t=e;t<n;++t)if(n%t==0)return t;return n}function On(n){var e=n.length;if(e<2)return[];var t=new Array(e-1);t[e-2]=n[e-1];for(var r=e-3;r>=0;--r)t[r]=t[r+1]*n[r+1];return t}function ap(n,e,t){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=fo(n)),t&&Hy(n,e),function(o,a){return o instanceof Float32Array&&a==="float32"||o instanceof Int32Array&&a==="int32"||o instanceof Uint8Array&&a==="bool"}(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){for(var r=new Uint8Array(n.length),s=0;s<r.length;++s)Math.round(n[s])!==0&&(r[s]=1);return r}throw new Error("Unknown data type "+e)}function ip(n,e){if(n.length===0)return e[0];var t=n.reduce(function(r,s){return r*s});if(t===0)return[];if(t!==e.length)throw new Error("["+n+"] does not match the input size.");return function r(s,o,a){var i=new Array;if(o.length===1)for(var u=o[0],c=0;c<u;c++)i[c]=a[s+c];else{u=o[0];var l=o.slice(1),h=l.reduce(function(d,p){return d*p});for(c=0;c<u;c++)i[c]=r(s+c*h,l,a)}return i}(0,n,e)}function up(n,e){for(var t=pa(n,e),r=0;r<t.length;r++)t[r]=1;return t}function pa(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error("Unknown data type "+e)}function vr(){return se().platform.now()}function cp(n){n.forEach(function(e){_(Number.isInteger(e)&&e>=0,function(){return"Tensor must have a shape comprised of positive integers but got shape ["+n+"]."})})}function Qy(n,e){return e===void 0&&(e="utf-8"),e=e||"utf-8",se().platform.encode(n,e)}function vi(n,e){return e===void 0&&(e="utf-8"),e=e||"utf-8",se().platform.decode(n,e)}function zc(n,e,t){if(e===0)return 0;if(e===1)return n[0];for(var r=n[n.length-1],s=0;s<n.length-1;++s)r+=t[s]*n[s];return r}function lp(n,e,t){if(e===0)return[];if(e===1)return[n];for(var r=new Array(e),s=0;s<r.length-1;++s)r[s]=Math.floor(n/t[s]),n-=r[s]*t[s];return r[r.length-1]=n,r}var As=Object.freeze({shuffle:Vy,clamp:_c,nearestLargerEven:rp,sum:Wy,randUniform:function(n,e){var t=Math.random();return e*t+(1-t)*n},distSquared:function(n,e){for(var t=0,r=0;r<n.length;r++){var s=Number(n[r])-Number(e[r]);t+=s*s}return t},assert:_,assertShapesMatch:rt,assertNonNull:po,flatten:fo,sizeFromShape:ve,isScalarShape:function(n){return n.length===0},arraysEqual:Wt,isInt:Ct,tanh:Uy,sizeToSquarishShape:Mc,createShuffledIndices:function(n){for(var e=new Uint32Array(n),t=0;t<n;++t)e[t]=t;return Vy(e),e},rightPad:mo,repeatedTry:sp,inferFromImplicitShape:Gy,parseAxisParam:Ot,squeezeShape:Rs,getTypedArrayFromDType:go,getArrayFromDType:yi,checkConversionForErrors:Hy,isValidDtype:qy,hasEncodingLoss:jy,isTypedArray:yr,bytesPerElement:op,bytesFromStringArray:Ky,isString:Lc,isBoolean:Xy,isNumber:Yy,inferDtype:da,isFunction:Pc,nearestDivisor:Bc,computeStrides:On,toTypedArray:ap,toNestedArray:ip,makeOnesTypedArray:up,makeZerosTypedArray:pa,now:vr,assertNonNegativeIntegerDimensions:cp,fetch:function(n,e){return se().platform.fetch(n,e)},encodeString:Qy,decodeString:vi,locToIndex:zc,indexToLoc:lp}),hE=function(){function n(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new dE)}return n.prototype.profileKernel=function(e,t,r){var s,o=this,a=this.backendTimer.time(function(){s=r()});return s.forEach(function(i){i.data().then(function(u){(function(c,l,h){if(l!=="float32")return!1;for(var d=0;d<c.length;d++){var p=c[d];if(isNaN(p)||!isFinite(p))return console.warn("Found "+p+" in the result of '"+h+"'"),!0}})(u,i.dtype,e),a.then(function(c){var l="";c.getExtraProfileInfo!=null&&(l=c.getExtraProfileInfo()),o.logger.logKernelProfile(e,i,u,c.kernelMs,t,l)})})}),s},n}(),dE=function(){function n(){}return n.prototype.logKernelProfile=function(e,t,r,s,o,a){var i=typeof s=="number"?mo(s+"ms",9):s.error,u=mo(e,25),c=t.rank,l=t.size,h=mo(t.shape.toString(),14),d="";for(var p in o){var f=o[p].shape||t.shape,m=f.length;d+=p+": "+m+"D "+(m>0?f:"")+" "}console.log("%c"+u+"	%c"+i+"	%c"+c+"D "+h+"	%c"+l+"	%c"+d+"	%c"+a,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")},n}(),Jy=20,bi=3,hp=7;function pE(n,e,t,r){var s=On(e),o=function(c,l,h,d){var p=ve(l),f=d[d.length-1],m=new Array(f).fill(0),g=l.length,x=h==="complex64"?Ci(c):c;if(g>1)for(var y=0;y<p/f;y++)for(var b=y*f,v=0;v<f;v++)m[v]=Math.max(m[v],wi(x[b+v],0,h).length);return m}(n,e,t,s),a=e.length,i=function c(l,h,d,p,f,m){m===void 0&&(m=!0);var g=d==="complex64"?2:1,x=h[0],y=h.length;if(y===0)return d==="complex64"?[wi(Ci(l)[0],0,d)]:d==="bool"?[Zy(l[0])]:[l[0].toString()];if(y===1){if(x>Jy){var b=bi*g,v=Array.from(l.slice(0,b)),w=Array.from(l.slice((x-bi)*g,x*g));return d==="complex64"&&(v=Ci(v),w=Ci(w)),["["+v.map(function(D,M){return wi(D,f[M],d)}).join(", ")+", ..., "+w.map(function(D,M){return wi(D,f[x-bi+M],d)}).join(", ")+"]"]}return["["+(d==="complex64"?Ci(l):Array.from(l)).map(function(D,M){return wi(D,f[M],d)}).join(", ")+"]"]}var C=h.slice(1),T=p.slice(1),S=p[0]*g,k=[];if(x>Jy){for(var N=0;N<bi;N++){var I=(E=N*S)+S;k.push.apply(k,c(l.slice(E,I),C,d,T,f,!1))}for(k.push("..."),N=x-bi;N<x;N++)I=(E=N*S)+S,k.push.apply(k,c(l.slice(E,I),C,d,T,f,N===x-1))}else for(N=0;N<x;N++){var E;I=(E=N*S)+S,k.push.apply(k,c(l.slice(E,I),C,d,T,f,N===x-1))}var F=y===2?",":"";for(k[0]="["+k[0]+F,N=1;N<k.length-1;N++)k[N]=" "+k[N]+F;var O=`,
`;for(N=2;N<y;N++)O+=`
`;return k[k.length-1]=" "+k[k.length-1]+"]"+(m?"":O),k}(n,e,t,s,o),u=["Tensor"];return r&&(u.push("  dtype: "+t),u.push("  rank: "+a),u.push("  shape: ["+e+"]"),u.push("  values:")),u.push(i.map(function(c){return"    "+c}).join(`
`)),u.join(`
`)}function wi(n,e,t){return mo(Array.isArray(n)?parseFloat(n[0].toFixed(hp))+" + "+parseFloat(n[1].toFixed(hp))+"j":Lc(n)?"'"+n+"'":t==="bool"?Zy(n):parseFloat(n.toFixed(hp)).toString(),e)}function Zy(n){return n===0?"false":"true"}function Ci(n){for(var e=[],t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}var Ii=function(){function n(e,t,r){var s=this;if(this.dtype=t,this.shape=e.slice(),this.size=ve(e),r!=null){var o=r.length;_(o===this.size,function(){return"Length of values '"+o+"' does not match the size inferred by the shape '"+s.size+"'."})}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||yi(t,this.size),this.strides=On(e)}return n.prototype.set=function(e){for(var t=this,r=[],s=1;s<arguments.length;s++)r[s-1]=arguments[s];r.length===0&&(r=[0]),_(r.length===this.rank,function(){return"The number of provided coordinates ("+r.length+") must match the rank ("+t.rank+")"});var o=this.locToIndex(r);this.values[o]=e},n.prototype.get=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];e.length===0&&(e=[0]);for(var r=0,s=0,o=e;s<o.length;s++){var a=o[s];if(a<0||a>=this.shape[r]){var i="Requested out of range element at "+e+".   Buffer shape="+this.shape;throw new Error(i)}r++}for(var u=e[e.length-1],c=0;c<e.length-1;++c)u+=this.strides[c]*e[c];return this.values[u]},n.prototype.locToIndex=function(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];for(var t=e[e.length-1],r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t},n.prototype.indexToLoc=function(e){if(this.rank===0)return[];if(this.rank===1)return[e];for(var t=new Array(this.shape.length),r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t},Object.defineProperty(n.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),n.prototype.toTensor=function(){return _r().makeTensor(this.values,this.shape,this.dtype)},n}(),_r=null,re=null,ev=null,yt=function(){function n(e,t,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ve(e),this.strides=On(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}return n.prototype.flatten=function(){return this.throwIfDisposed(),this.as1D()},n.prototype.asScalar=function(){return this.throwIfDisposed(),_(this.size===1,function(){return"The array must have only 1 element."}),this.reshape([])},n.prototype.as1D=function(){return this.throwIfDisposed(),this.reshape([this.size])},n.prototype.as2D=function(e,t){return this.throwIfDisposed(),this.reshape([e,t])},n.prototype.as3D=function(e,t,r){return this.throwIfDisposed(),this.reshape([e,t,r])},n.prototype.as4D=function(e,t,r,s){return this.throwIfDisposed(),this.reshape([e,t,r,s])},n.prototype.as5D=function(e,t,r,s,o){return this.throwIfDisposed(),this.reshape([e,t,r,s,o])},n.prototype.asType=function(e){return this.throwIfDisposed(),re.cast(this,e)},Object.defineProperty(n.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),n.prototype.buffer=function(){return Ie(this,void 0,void 0,function(){var e;return ke(this,function(t){switch(t.label){case 0:return[4,this.data()];case 1:return e=t.sent(),[2,re.buffer(this.shape,this.dtype,e)]}})})},n.prototype.bufferSync=function(){return re.buffer(this.shape,this.dtype,this.dataSync())},n.prototype.array=function(){return Ie(this,void 0,void 0,function(){var e;return ke(this,function(t){switch(t.label){case 0:return[4,this.data()];case 1:return e=t.sent(),[2,ip(this.shape,e)]}})})},n.prototype.arraySync=function(){return ip(this.shape,this.dataSync())},n.prototype.data=function(){return Ie(this,void 0,void 0,function(){var e,t;return ke(this,function(r){switch(r.label){case 0:return this.throwIfDisposed(),e=_r().read(this.dataId),this.dtype!=="string"?[3,2]:[4,e];case 1:t=r.sent();try{return[2,t.map(function(s){return vi(s)})]}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}r.label=2;case 2:return[2,e]}})})},n.prototype.dataSync=function(){this.throwIfDisposed();var e=_r().readSync(this.dataId);if(this.dtype==="string")try{return e.map(function(t){return vi(t)})}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e},n.prototype.bytes=function(){return Ie(this,void 0,void 0,function(){var e;return ke(this,function(t){switch(t.label){case 0:return this.throwIfDisposed(),[4,_r().read(this.dataId)];case 1:return e=t.sent(),this.dtype==="string"?[2,e]:[2,new Uint8Array(e.buffer)]}})})},n.prototype.dispose=function(){this.isDisposed||(_r().disposeTensor(this),this.isDisposedInternal=!0)},Object.defineProperty(n.prototype,"isDisposed",{get:function(){return this.isDisposedInternal},enumerable:!0,configurable:!0}),n.prototype.throwIfDisposed=function(){if(this.isDisposed)throw new Error("Tensor is disposed.")},n.prototype.toFloat=function(){return this.asType("float32")},n.prototype.toInt=function(){return this.asType("int32")},n.prototype.toBool=function(){return this.asType("bool")},n.prototype.print=function(e){return e===void 0&&(e=!1),re.print(this,e)},n.prototype.reshape=function(e){return this.throwIfDisposed(),re.reshape(this,e)},n.prototype.reshapeAs=function(e){return this.throwIfDisposed(),this.reshape(e.shape)},n.prototype.expandDims=function(e){return e===void 0&&(e=0),re.expandDims(this,e)},n.prototype.cumsum=function(e,t,r){return e===void 0&&(e=0),t===void 0&&(t=!1),r===void 0&&(r=!1),re.cumsum(this,e,t,r)},n.prototype.squeeze=function(e){return this.throwIfDisposed(),re.squeeze(this,e)},n.prototype.clone=function(){return this.throwIfDisposed(),re.clone(this)},n.prototype.toString=function(e){return e===void 0&&(e=!1),pE(this.dataSync(),this.shape,this.dtype,e)},n.prototype.gather=function(e,t){return t===void 0&&(t=0),this.throwIfDisposed(),re.gather(this,e,t)},n.prototype.matMul=function(e,t,r){return t===void 0&&(t=!1),r===void 0&&(r=!1),this.throwIfDisposed(),re.matMul(this,e,t,r)},n.prototype.dot=function(e){return this.throwIfDisposed(),re.dot(this,e)},n.prototype.norm=function(e,t,r){return e===void 0&&(e="euclidean"),t===void 0&&(t=null),r===void 0&&(r=!1),this.throwIfDisposed(),re.norm(this,e,t,r)},n.prototype.slice=function(e,t){return this.throwIfDisposed(),re.slice(this,e,t)},n.prototype.reverse=function(e){return this.throwIfDisposed(),re.reverse(this,e)},n.prototype.concat=function(e,t){return t===void 0&&(t=0),this.throwIfDisposed(),e instanceof n&&(e=[e]),re.concat([this].concat(e),t)},n.prototype.split=function(e,t){return t===void 0&&(t=0),this.throwIfDisposed(),re.split(this,e,t)},n.prototype.stack=function(e,t){return t===void 0&&(t=0),re.stack([this,e],t)},n.prototype.unstack=function(e){return e===void 0&&(e=0),re.unstack(this,e)},n.prototype.batchNormalization=function(e,t,r,s,o){return r===void 0&&(r=.001),ev("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon"),this.batchNorm(e,t,o,s,r)},n.prototype.all=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.all(this,e,t)},n.prototype.any=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.any(this,e,t)},n.prototype.logSumExp=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.logSumExp(this,e,t)},n.prototype.sum=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.sum(this,e,t)},n.prototype.prod=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.prod(this,e,t)},n.prototype.mean=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.mean(this,e,t)},n.prototype.min=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.min(this,e,t)},n.prototype.max=function(e,t){return e===void 0&&(e=null),t===void 0&&(t=!1),this.throwIfDisposed(),re.max(this,e,t)},n.prototype.argMin=function(e){return e===void 0&&(e=null),this.throwIfDisposed(),re.argMin(this,e)},n.prototype.argMax=function(e){return e===void 0&&(e=null),this.throwIfDisposed(),re.argMax(this,e)},n.prototype.cast=function(e){return this.throwIfDisposed(),re.cast(this,e)},n.prototype.addStrict=function(e){return this.throwIfDisposed(),re.addStrict(this,e)},n.prototype.atan2=function(e){return this.throwIfDisposed(),re.atan2(this,e)},n.prototype.sub=function(e){return this.throwIfDisposed(),re.sub(this,e)},n.prototype.subStrict=function(e){return this.throwIfDisposed(),re.subStrict(this,e)},n.prototype.pow=function(e){return this.throwIfDisposed(),re.pow(this,e)},n.prototype.powStrict=function(e){return this.throwIfDisposed(),re.powStrict(this,e)},n.prototype.mul=function(e){return this.throwIfDisposed(),re.mul(this,e)},n.prototype.mulStrict=function(e){return this.throwIfDisposed(),re.mulStrict(this,e)},n.prototype.floorDiv=function(e){return this.throwIfDisposed(),re.floorDiv(this,e)},n.prototype.divStrict=function(e){return this.throwIfDisposed(),re.divStrict(this,e)},n.prototype.minimum=function(e){return this.throwIfDisposed(),re.minimum(this,e)},n.prototype.minimumStrict=function(e){return this.throwIfDisposed(),re.minimumStrict(this,e)},n.prototype.maximum=function(e){return this.throwIfDisposed(),re.maximum(this,e)},n.prototype.maximumStrict=function(e){return this.throwIfDisposed(),re.maximumStrict(this,e)},n.prototype.mod=function(e){return this.throwIfDisposed(),re.mod(this,e)},n.prototype.modStrict=function(e){return this.throwIfDisposed(),re.modStrict(this,e)},n.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),re.squaredDifferenceStrict(this,e)},n.prototype.notEqual=function(e){return this.throwIfDisposed(),re.notEqual(this,e)},n.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),re.notEqualStrict(this,e)},n.prototype.less=function(e){return this.throwIfDisposed(),re.less(this,e)},n.prototype.lessStrict=function(e){return this.throwIfDisposed(),re.lessStrict(this,e)},n.prototype.equal=function(e){return this.throwIfDisposed(),re.equal(this,e)},n.prototype.equalStrict=function(e){return this.throwIfDisposed(),re.equalStrict(this,e)},n.prototype.lessEqual=function(e){return this.throwIfDisposed(),re.lessEqual(this,e)},n.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),re.lessEqualStrict(this,e)},n.prototype.greater=function(e){return this.throwIfDisposed(),re.greater(this,e)},n.prototype.greaterStrict=function(e){return this.throwIfDisposed(),re.greaterStrict(this,e)},n.prototype.greaterEqual=function(e){return this.throwIfDisposed(),re.greaterEqual(this,e)},n.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),re.greaterEqualStrict(this,e)},n.prototype.logicalAnd=function(e){return this.throwIfDisposed(),re.logicalAnd(this,e)},n.prototype.logicalOr=function(e){return this.throwIfDisposed(),re.logicalOr(this,e)},n.prototype.logicalNot=function(){return this.throwIfDisposed(),re.logicalNot(this)},n.prototype.logicalXor=function(e){return this.throwIfDisposed(),re.logicalXor(this,e)},n.prototype.where=function(e,t){return this.throwIfDisposed(),re.where(e,this,t)},n.prototype.neg=function(){return this.throwIfDisposed(),re.neg(this)},n.prototype.ceil=function(){return this.throwIfDisposed(),re.ceil(this)},n.prototype.floor=function(){return this.throwIfDisposed(),re.floor(this)},n.prototype.sign=function(){return this.throwIfDisposed(),re.sign(this)},n.prototype.isNaN=function(){return this.throwIfDisposed(),re.isNaN(this)},n.prototype.isInf=function(){return this.throwIfDisposed(),re.isInf(this)},n.prototype.isFinite=function(){return this.throwIfDisposed(),re.isFinite(this)},n.prototype.exp=function(){return this.throwIfDisposed(),re.exp(this)},n.prototype.expm1=function(){return this.throwIfDisposed(),re.expm1(this)},n.prototype.log=function(){return this.throwIfDisposed(),re.log(this)},n.prototype.log1p=function(){return this.throwIfDisposed(),re.log1p(this)},n.prototype.sqrt=function(){return this.throwIfDisposed(),re.sqrt(this)},n.prototype.rsqrt=function(){return this.throwIfDisposed(),re.rsqrt(this)},n.prototype.square=function(){return this.throwIfDisposed(),re.square(this)},n.prototype.reciprocal=function(){return this.throwIfDisposed(),re.reciprocal(this)},n.prototype.abs=function(){return this.throwIfDisposed(),re.abs(this)},n.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),re.clipByValue(this,e,t)},n.prototype.relu=function(){return this.throwIfDisposed(),re.relu(this)},n.prototype.relu6=function(){return this.throwIfDisposed(),re.relu6(this)},n.prototype.elu=function(){return this.throwIfDisposed(),re.elu(this)},n.prototype.selu=function(){return this.throwIfDisposed(),re.selu(this)},n.prototype.leakyRelu=function(e){return e===void 0&&(e=.2),this.throwIfDisposed(),re.leakyRelu(this,e)},n.prototype.prelu=function(e){return this.throwIfDisposed(),re.prelu(this,e)},n.prototype.sigmoid=function(){return this.throwIfDisposed(),re.sigmoid(this)},n.prototype.logSigmoid=function(){return this.throwIfDisposed(),re.logSigmoid(this)},n.prototype.softplus=function(){return this.throwIfDisposed(),re.softplus(this)},n.prototype.zerosLike=function(){return this.throwIfDisposed(),re.zerosLike(this)},n.prototype.onesLike=function(){return this.throwIfDisposed(),re.onesLike(this)},n.prototype.sin=function(){return this.throwIfDisposed(),re.sin(this)},n.prototype.cos=function(){return this.throwIfDisposed(),re.cos(this)},n.prototype.tan=function(){return this.throwIfDisposed(),re.tan(this)},n.prototype.asin=function(){return this.throwIfDisposed(),re.asin(this)},n.prototype.acos=function(){return this.throwIfDisposed(),re.acos(this)},n.prototype.atan=function(){return this.throwIfDisposed(),re.atan(this)},n.prototype.sinh=function(){return this.throwIfDisposed(),re.sinh(this)},n.prototype.cosh=function(){return this.throwIfDisposed(),re.cosh(this)},n.prototype.tanh=function(){return this.throwIfDisposed(),re.tanh(this)},n.prototype.asinh=function(){return this.throwIfDisposed(),re.asinh(this)},n.prototype.acosh=function(){return this.throwIfDisposed(),re.acosh(this)},n.prototype.atanh=function(){return this.throwIfDisposed(),re.atanh(this)},n.prototype.erf=function(){return this.throwIfDisposed(),re.erf(this)},n.prototype.round=function(){return this.throwIfDisposed(),re.round(this)},n.prototype.step=function(e){return e===void 0&&(e=0),this.throwIfDisposed(),re.step(this,e)},n.prototype.softmax=function(e){return e===void 0&&(e=-1),this.throwIfDisposed(),re.softmax(this,e)},n.prototype.logSoftmax=function(e){return e===void 0&&(e=-1),this.throwIfDisposed(),re.logSoftmax(this,e)},n.prototype.resizeBilinear=function(e,t){return t===void 0&&(t=!1),this.throwIfDisposed(),re.image.resizeBilinear(this,e,t)},n.prototype.resizeNearestNeighbor=function(e,t){return t===void 0&&(t=!1),this.throwIfDisposed(),re.image.resizeNearestNeighbor(this,e,t)},n.prototype.conv1d=function(e,t,r,s,o,a){return s===void 0&&(s="NWC"),o===void 0&&(o=1),this.throwIfDisposed(),re.conv1d(this,e,t,r,s,o,a)},n.prototype.conv2d=function(e,t,r,s,o,a){return s===void 0&&(s="NHWC"),o===void 0&&(o=[1,1]),this.throwIfDisposed(),re.conv2d(this,e,t,r,s,o,a)},n.prototype.conv2dTranspose=function(e,t,r,s,o){return this.throwIfDisposed(),re.conv2dTranspose(this,e,t,r,s,o)},n.prototype.depthwiseConv2D=function(e,t,r,s,o,a){return s===void 0&&(s="NHWC"),o===void 0&&(o=[1,1]),this.throwIfDisposed(),re.depthwiseConv2d(this,e,t,r,s,o,a)},n.prototype.separableConv2d=function(e,t,r,s,o,a){return o===void 0&&(o=[1,1]),a===void 0&&(a="NHWC"),this.throwIfDisposed(),re.separableConv2d(this,e,t,r,s,o,a)},n.prototype.avgPool=function(e,t,r,s){return this.throwIfDisposed(),re.avgPool(this,e,t,r,s)},n.prototype.maxPool=function(e,t,r,s){return this.throwIfDisposed(),re.maxPool(this,e,t,r,s)},n.prototype.localResponseNormalization=function(e,t,r,s){return e===void 0&&(e=5),t===void 0&&(t=1),r===void 0&&(r=1),s===void 0&&(s=.5),re.localResponseNormalization(this,e,t,r,s)},n.prototype.pool=function(e,t,r,s,o){return this.throwIfDisposed(),re.pool(this,e,t,r,s,o)},n.prototype.variable=function(e,t,r){return e===void 0&&(e=!0),this.throwIfDisposed(),_r().makeVariable(this,e,t,r)},n.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),re.unsortedSegmentSum(this,e,t)},n.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),re.batchToSpaceND(this,e,t)},n.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),re.spaceToBatchND(this,e,t)},n.prototype.topk=function(e,t){return e===void 0&&(e=1),t===void 0&&(t=!0),this.throwIfDisposed(),re.topk(this,e,t)},n.prototype.stridedSlice=function(e,t,r,s,o,a,i,u){return s===void 0&&(s=0),o===void 0&&(o=0),a===void 0&&(a=0),i===void 0&&(i=0),u===void 0&&(u=0),this.throwIfDisposed(),re.stridedSlice(this,e,t,r,s,o,a,i,u)},n.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),re.depthToSpace(this,e,t)},n.prototype.fft=function(){return this.throwIfDisposed(),re.spectral.fft(this)},n.prototype.ifft=function(){return this.throwIfDisposed(),re.spectral.ifft(this)},n.prototype.rfft=function(){return this.throwIfDisposed(),re.spectral.rfft(this)},n.prototype.irfft=function(){return this.throwIfDisposed(),re.spectral.irfft(this)},n}();Object.defineProperty(yt,Symbol.hasInstance,{value:function(n){return!!n&&n.dataId!=null&&n.shape!=null&&n.dtype!=null}});var tv,dp,pp,fp,mp,Vc=function(n){function e(t,r,s,o){var a=n.call(this,t.shape,t.dtype,t.dataId,o)||this;return a.trainable=r,a.name=s,a}return xr(e,n),e.prototype.assign=function(t){if(t.dtype!==this.dtype)throw new Error("dtype of the new value ("+t.dtype+") and previous value ("+this.dtype+") must match");if(!Wt(t.shape,this.shape))throw new Error("shape of the new value ("+t.shape+") and previous value ("+this.shape+") must match");_r().disposeTensor(this),this.dataId=t.dataId,_r().incRef(this,null)},e.prototype.dispose=function(){_r().disposeVariable(this),this.isDisposedInternal=!0},e}(yt);Object.defineProperty(Vc,Symbol.hasInstance,{value:function(n){return n instanceof yt&&n.assign!=null&&n.assign instanceof Function}}),function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"}(tv||(tv={})),function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"}(dp||(dp={})),function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"}(pp||(pp={})),function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"}(fp||(fp={})),function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"}(mp||(mp={}));var fE={float32:fp,int32:dp,bool:pp,complex64:mp};function on(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error("Can not upcast "+n+" with "+e)}return fE[n][e]}function gp(n){return on(n,"int32")}function vt(n,e){if(n.dtype===e.dtype)return[n,e];var t=on(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function mE(n,e){_(n.dtype===e.dtype,function(){return"The dtypes of the first("+n.dtype+") and second("+e.dtype+") input must match"})}function nv(n){var e=[];return function t(r,s,o){if(r!=null){if(r instanceof yt)return void s.push(r);if(a=r,!(!Array.isArray(a)&&typeof a!="object")){var a,i=r;for(var u in i){var c=i[u];o.has(c)||(o.add(c),t(c,s,o))}}}}(n,e,new Set),e}var xp,rv=function(){function n(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}return n.prototype.dispose=function(){for(var e in this.registeredVariables)this.registeredVariables[e].dispose()},n}(),gE=function(){function n(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new rv}return n.prototype.ready=function(){return Ie(this,void 0,void 0,function(){var e,t,r;return ke(this,function(s){switch(s.label){case 0:if(this.pendingBackendInit!=null)return[2,this.pendingBackendInit.then(function(){})];if(this.backendInstance!=null)return[2];e=this.getSortedBackends(),t=0,s.label=1;case 1:return t<e.length?(r=e[t],[4,this.initializeBackend(r).success]):[3,5];case 2:return s.sent()?[4,this.setBackend(r)]:[3,4];case 3:return s.sent(),[2];case 4:return t++,[3,1];case 5:throw new Error("Could not initialize any backends, all backend initializations failed.")}})})},Object.defineProperty(n.prototype,"backend",{get:function(){if(this.pendingBackendInit!=null)throw new Error("Backend '"+this.backendName+"' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");if(this.backendInstance==null){var e=this.initializeBackendsAndReturnBest(),t=e.name;if(e.asyncInit)throw new Error("The highest priority backend '"+t+"' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance},enumerable:!0,configurable:!0}),n.prototype.backendNames=function(){return Object.keys(this.registryFactory)},n.prototype.findBackend=function(e){return!(e in this.registry)&&(!(e in this.registryFactory)||this.initializeBackend(e).asyncInit)?null:this.registry[e]},n.prototype.findBackendFactory=function(e){return e in this.registryFactory?this.registryFactory[e].factory:null},n.prototype.registerBackend=function(e,t,r){return r===void 0&&(r=1),e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:r},!0)},n.prototype.setBackend=function(e){return Ie(this,void 0,void 0,function(){var t,r,s;return ke(this,function(o){switch(o.label){case 0:if(this.registryFactory[e]==null)throw new Error("Backend name '"+e+"' not found in registry");return this.backendName=e,this.registry[e]!=null?[3,4]:(this.backendInstance=null,t=this.initializeBackend(e),r=t.success,t.asyncInit?[4,r]:[3,2]);case 1:return s=o.sent(),[3,3];case 2:s=r,o.label=3;case 3:if(!s)return[2,!1];o.label=4;case 4:return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new hE(this.backendInstance),[2,!0]}})})},n.prototype.setupRegisteredKernels=function(){var e=this;Py(this.backendName).forEach(function(t){t.setupFunc!=null&&t.setupFunc(e.backendInstance)})},n.prototype.disposeRegisteredKernels=function(e){var t=this;Py(e).forEach(function(r){r.disposeFunc!=null&&r.disposeFunc(t.registry[e])})},n.prototype.initializeBackend=function(e){var t=this,r=this.registryFactory[e];if(r==null)throw new Error("Cannot initialize backend "+e+", no registration found.");try{var s=r.factory();if(Promise.resolve(s)===s){var o=++this.pendingBackendInitId,a=s.then(function(i){return!(o<t.pendingBackendInitId)&&(t.registry[e]=i,t.pendingBackendInit=null,!0)}).catch(function(i){return!(o<t.pendingBackendInitId)&&(t.pendingBackendInit=null,console.warn("Initialization of backend "+e+" failed"),console.warn(i.stack||i.message),!1)});return this.pendingBackendInit=a,{success:a,asyncInit:!0}}return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(i){return console.warn("Initialization of backend "+e+" failed"),console.warn(i.stack||i.message),{success:!1,asyncInit:!1}}},n.prototype.removeBackend=function(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)},n.prototype.getSortedBackends=function(){var e=this;if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(function(t,r){return e.registryFactory[r].priority-e.registryFactory[t].priority})},n.prototype.initializeBackendsAndReturnBest=function(){for(var e=this.getSortedBackends(),t=0;t<e.length;t++){var r=e[t],s=this.initializeBackend(r),o=s.success,a=s.asyncInit;if(a||o)return{name:r,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")},n.prototype.moveData=function(e,t){var r=this.state.tensorInfo.get(t),s=r.backend,o=this.readSync(t);s.disposeData(t),r.backend=e,e.move(t,o,r.shape,r.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++},n.prototype.tidy=function(e,t){var r,s=this,o=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");o=e}return this.scopedRun(function(){return s.startScope(o)},function(){return s.endScope(r)},function(){return(r=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r})},n.prototype.scopedRun=function(e,t,r){e();try{var s=r();return t(),s}catch(o){throw t(),o}},n.prototype.nextTensorId=function(){return n.nextTensorId++},n.prototype.nextVariableId=function(){return n.nextVariableId++},n.prototype.clone=function(e){var t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),r={x:e};return this.addTapeNode(this.state.activeScope.name,r,[t],function(s){return{x:function(){return s.toFloat()}}},[],{}),t},n.prototype.runKernel=function(e,t,r,s,o){return this.runKernelFunc(null,t,null,e,r,s,o)},n.prototype.shouldCheckForMemLeaks=function(){return this.ENV.getBool("IS_TEST")},n.prototype.checkKernelForMemLeak=function(e,t,r){var s=this.backend.numDataIds(),o=0;r.forEach(function(u){o+=u.dtype==="complex64"?3:1});var a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-o-a;if(i>0)throw new Error("Backend '"+this.backendName+"' has an internal memory leak ("+i+" data ids) after running '"+e+"'")},n.prototype.runKernelFunc=function(e,t,r,s,o,a,i){var u,c=this,l=[],h=this.isTapeOn();s==null&&(s=this.state.activeScope!=null?this.state.activeScope.name:"");var d,p=this.state.numBytes,f=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);var m,g=My(s,this.backendName);if(g!=null)d=function(){var y=c.backend.numDataIds();m=g.kernelFunc({inputs:t,attrs:o,backend:c.backend});var b=Array.isArray(m)?m:[m];c.shouldCheckForMemLeaks()&&c.checkKernelForMemLeak(s,y,b);var v=b.map(function(T){var S=T.dataId,k=T.shape,N=T.dtype;return c.makeTensorFromDataId(S,k,N)});if(h){var w=c.getTensorsForGradient(s,t,v);if(w==null){i==null&&(i=[]);var C=v.filter(function(T,S){return i[S]});w=(a||[]).slice().concat(C)}l=c.saveTensorsForBackwardMode(w)}return v};else{var x=function(y){h&&(l=y.map(function(b){return c.keep(c.clone(b))}))};d=function(){var y=c.backend.numDataIds();m=c.tidy(function(){return e(c.backend,x)});var b=Array.isArray(m)?m:[m];return c.shouldCheckForMemLeaks()&&c.checkKernelForMemLeak(s,y,b),b}}return this.scopedRun(function(){return c.state.kernelDepth++},function(){return c.state.kernelDepth--},function(){u=c.ENV.getBool("DEBUG")?c.profiler.profileKernel(s,t,function(){return d()}):d()}),h&&this.addTapeNode(s,t,u,r,l,o),this.state.profiling&&this.state.activeProfile.kernels.push({name:s,bytesAdded:this.state.numBytes-p,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-f,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map(function(y){return t[y].shape}),outputShapes:u.map(function(y){return y.shape})}),Array.isArray(m)?u:u[0]},n.prototype.saveTensorsForBackwardMode=function(e){var t=this;return e.map(function(r){return t.keep(t.clone(r))})},n.prototype.getTensorsForGradient=function(e,t,r){var s=Ly(e);if(s!=null){var o=s.inputsToSave||[],a=s.outputsToSave||[],i=void 0;s.saveAllInputs?(_(Array.isArray(t),function(){return"saveAllInputs is true, expected inputs to be an array."}),i=Object.keys(t).map(function(c){return t[c]})):i=o.map(function(c){return t[c]});var u=r.filter(function(c,l){return a[l]});return i.concat(u)}return null},n.prototype.makeTensor=function(e,t,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;var o=e;r==="string"&&Lc(e[0])&&(o=e.map(function(l){return Qy(l)}));var a=s.write(o,t,r),i=new yt(t,r,a,this.nextTensorId());if(this.incRef(i,s),r==="string"){var u=this.state.tensorInfo.get(a),c=Ky(o);this.state.numBytes+=c-u.bytes,u.bytes=c}return i},n.prototype.makeTensorFromDataId=function(e,t,r,s){var o=new yt(t,r=r||"float32",e,this.nextTensorId());return this.incRef(o,s),o},n.prototype.makeVariable=function(e,t,r,s){t===void 0&&(t=!0),r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.asType(s));var o=new Vc(e,t,r,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error("Variable with name "+o.name+" was already registered");return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o},n.prototype.incRef=function(e,t){var r=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++,r===0){this.state.numDataBuffers++;var s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*op(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s,refCount:0}),this.state.numBytes+=s}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof Vc||this.track(e)},n.prototype.disposeTensor=function(e){if(this.state.tensorInfo.has(e.dataId)){this.state.numTensors--,e.dtype==="string"&&this.state.numStringTensors--;var t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?(e.dtype!=="complex64"&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}},n.prototype.disposeVariables=function(){for(var e in this.state.registeredVariables){var t=this.state.registeredVariables[e];this.disposeVariable(t)}},n.prototype.disposeVariable=function(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]},n.prototype.memory=function(){var e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e},n.prototype.profile=function(e){return Ie(this,void 0,void 0,function(){var t,r;return ke(this,function(s){return this.state.profiling=!0,t=this.state.numBytes,r=this.state.numTensors,this.state.activeProfile.kernels=[],this.state.activeProfile.result=e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max.apply(Math,this.state.activeProfile.kernels.map(function(o){return o.totalBytesSnapshot})),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r,[2,this.state.activeProfile]})})},n.prototype.isTapeOn=function(){return this.state.gradientDepth>0&&this.state.kernelDepth===0},n.prototype.addTapeNode=function(e,t,r,s,o,a){var i=this,u={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:o},c=Ly(e);c!=null&&(s=c.gradFunc),s!=null&&(u.gradient=function(l){return l=l.map(function(h,d){if(h==null){var p=r[d],f=pa(p.size,p.dtype);return i.makeTensor(f,p.shape,p.dtype)}return h}),s(l.length>1?l:l[0],o,a)}),this.state.activeTape.push(u)},n.prototype.keep=function(e){return e.kept=!0,e},n.prototype.startTape=function(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++},n.prototype.endTape=function(){this.state.gradientDepth--},n.prototype.startScope=function(e){var t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t},n.prototype.endScope=function(e){for(var t=this,r=nv(e),s=new Set(r.map(function(u){return u.id})),o=0;o<this.state.activeScope.track.length;o++){var a=this.state.activeScope.track[o];a.kept||s.has(a.id)||a.dispose()}var i=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],r.forEach(function(u){u.kept||u.scopeId!==i.id||t.track(u)})},n.prototype.gradients=function(e,t,r,s){var o=this;if(s===void 0&&(s=!1),_(t.length>0,function(){return"gradients() received an empty list of xs."}),r!=null&&r.dtype!=="float32")throw new Error("dy must have 'float32' dtype, but has '"+r.dtype+"'");var a=this.scopedRun(function(){return o.startTape()},function(){return o.endTape()},function(){return o.tidy("forward",e)});_(a instanceof yt,function(){return"The result y returned by f() must be a tensor."});var i=function(u,c,l){for(var h={},d={},p=0;p<c.length;p++)h[c[p].id]=!0;for(p=0;p<u.length;p++){var f=(C=u[p]).inputs;for(var m in f){for(var g=f[m],x=!1,y=0;y<c.length;y++)if(h[g.id]){C.outputs.forEach(function(N){return h[N.id]=!0}),x=!0,d[C.id]=!0;break}if(x)break}}var b={};b[l.id]=!0;var v={};for(p=u.length-1;p>=0;p--)for(f=(C=u[p]).inputs,y=0;y<C.outputs.length;y++)if(b[C.outputs[y].id]){for(var m in f)b[f[m].id]=!0,v[C.id]=!0;break}var w=[];for(p=0;p<u.length;p++){var C;if(d[(C=u[p]).id]&&v[C.id]){var T={};for(var m in C.inputs){var S=C.inputs[m];h[S.id]&&(T[m]=S)}var k=Object.assign({},C);k.inputs=T,k.outputs=C.outputs,w.push(k)}}return w}(this.state.activeTape,t,a);if(!s&&i.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",function(){var u,c,l={};l[a.id]=r??(u=a.shape,c=up(ve(u),"float32"),H.makeTensor(c,u,"float32")),function(d,p,f){for(var m=function(x){var y=p[x],b=[];if(y.outputs.forEach(function(T){var S=d[T.id];S!=null?b.push(S):b.push(null)}),y.gradient==null)throw new Error("Cannot compute gradient: gradient function not found for "+y.kernelName+".");var v=y.gradient(b),w=function(T){if(!(T in v))throw new Error("Cannot backprop through input "+T+". Available gradients found: "+Object.keys(v)+".");var S=f(function(){return v[T]()});if(S.dtype!=="float32")throw new Error("Error in gradient for op "+y.kernelName+". The gradient of input "+T+" must have 'float32' dtype, but has '"+S.dtype+"'");var k=y.inputs[T];if(!Wt(S.shape,k.shape))throw new Error("Error in gradient for op "+y.kernelName+". The gradient of input '"+T+"' has shape '"+S.shape+"', which does not match the shape of the input '"+k.shape+"'");if(d[k.id]==null)d[k.id]=S;else{var N=d[k.id];d[k.id]=N.add(S),N.dispose()}};for(var C in y.inputs)w(C)},g=p.length-1;g>=0;g--)m(g)}(l,i,function(d){return o.tidy(d)});var h=t.map(function(d){return l[d.id]});return o.state.gradientDepth===0&&(o.state.activeTape.forEach(function(d){for(var p=0,f=d.saved;p<f.length;p++)f[p].dispose()}),o.state.activeTape=null),{value:a,grads:h}})},n.prototype.customGrad=function(e){var t=this;return _(Pc(e),function(){return"The f passed in customGrad(f) must be a function."}),function(){for(var r,s=[],o=0;o<arguments.length;o++)s[o]=arguments[o];_(s.every(function(i){return i instanceof yt}),function(){return"The args passed in customGrad(f)(x1, x2,...) must all be tensors"});var a={};return s.forEach(function(i,u){a[u]=i}),t.runKernelFunc(function(i,u){return _((r=e.apply(void 0,s.concat([u]))).value instanceof yt,function(){return"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"}),_(Pc(r.gradFunc),function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."}),r.value},a,function(i,u){var c=r.gradFunc(i,u),l=Array.isArray(c)?c:[c];_(l.length===s.length,function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."}),_(l.every(function(d){return d instanceof yt}),function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."});var h={};return l.forEach(function(d,p){h[p]=function(){return d}}),h})}},n.prototype.readSync=function(e){return this.state.tensorInfo.get(e).backend.readSync(e)},n.prototype.read=function(e){return this.state.tensorInfo.get(e).backend.read(e)},n.prototype.time=function(e){return Ie(this,void 0,void 0,function(){var t,r;return ke(this,function(s){switch(s.label){case 0:return t=vr(),[4,this.backend.time(e)];case 1:return(r=s.sent()).wallMs=vr()-t,[2,r]}})})},n.prototype.track=function(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e},Object.defineProperty(n.prototype,"registeredVariables",{get:function(){return this.state.registeredVariables},enumerable:!0,configurable:!0}),n.prototype.reset=function(){for(var e in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new rv,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null},n.nextTensorId=0,n.nextVariableId=0,n}(),H=function(){var n=function(){if(xp==null){var t=void 0;if(typeof window<"u")t=window;else if(typeof global<"u")t=global;else if(typeof process<"u")t=process;else{if(typeof self>"u")throw new Error("Could not find a global object");t=self}xp=t}return xp}();if(n._tfengine==null){var e=new uE(n);n._tfengine=new gE(e)}return function(t){_y=t}(n._tfengine.ENV),_r=function(){return n._tfengine},n._tfengine}();function sv(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var os=se();os.registerFlag("DEBUG",function(){return!1},function(n){n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),os.registerFlag("IS_BROWSER",function(){return sv()}),os.registerFlag("IS_NODE",function(){return typeof process<"u"&&process.versions!==void 0&&process.versions.node!==void 0}),os.registerFlag("IS_CHROME",function(){return typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)}),os.registerFlag("PROD",function(){return!1}),os.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",function(){return os.getBool("DEBUG")}),os.registerFlag("DEPRECATION_WARNINGS_ENABLED",function(){return!0}),os.registerFlag("IS_TEST",function(){return!1});var ki,Gn,Hn,xo={},yp={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function xE(n,e){xo[n]=e}function Mr(n){n in xo||(xo[n]=function(t){if(t!==1&&t!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");var r=function(s){if(typeof OffscreenCanvas<"u"&&s===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return r.addEventListener("webglcontextlost",function(s){s.preventDefault(),delete xo[t]},!1),t===1?r.getContext("webgl",yp)||r.getContext("experimental-webgl",yp):r.getContext("webgl2",yp)}(n));var e=xo[n];return e.isContextLost()?(delete xo[n],Mr(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),xo[n])}function Wc(n,e){return[e,n]}function Si(n){var e=ve(n);return Mc(Math.ceil(e/4))}function Ni(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function vp(n,e){var t,r,s,o,a,i,u,c,l,h=n;return se().getNumber("WEBGL_VERSION")===2?(t=h.R32F,r=h.R16F,s=h.RGBA16F,o=h.RGBA32F,a=h.RED,i=4,u=1,c=h.HALF_FLOAT,l=h.FLOAT):(t=n.RGBA,r=n.RGBA,s=n.RGBA,o=h.RGBA,a=n.RGBA,i=4,u=4,c=e!=null?e.HALF_FLOAT_OES:null,l=n.FLOAT),{internalFormatFloat:t,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:n.RGBA,downloadUnpackNumChannels:i,defaultNumChannels:u,textureTypeHalfFloat:c,textureTypeFloat:l}}function Se(n,e,t){var r=t();return e&&function(s){var o=s.getError();if(o!==s.NO_ERROR)throw new Error("WebGL Error: "+wE(s,o))}(n),r}(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(ki||(ki={})),function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"}(Gn||(Gn={})),function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Hn||(Hn={}));var yE=596e-10,vE=65504;function bE(n){return!!(se().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||yE<Math.abs(n)&&Math.abs(n)<vE)}function wE(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+e}}function Uc(n,e,t){return as(n,e,function(){return n.getExtension(t)},'Extension "'+t+'" not supported on this browser.')}function CE(n,e,t){var r=as(n,e,function(){return n.createShader(n.VERTEX_SHADER)},"Unable to create vertex WebGLShader.");if(Se(n,e,function(){return n.shaderSource(r,t)}),Se(n,e,function(){return n.compileShader(r)}),n.getShaderParameter(r,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(r)),new Error("Failed to compile vertex shader.");return r}function IE(n,e,t){var r=as(n,e,function(){return n.createShader(n.FRAGMENT_SHADER)},"Unable to create fragment WebGLShader.");if(Se(n,e,function(){return n.shaderSource(r,t)}),Se(n,e,function(){return n.compileShader(r)}),n.getShaderParameter(r,n.COMPILE_STATUS)===!1)throw function(s,o){var a=kE.exec(o);if(a==null)return console.log("Couldn't parse line number in error: "+o),void console.log(s);for(var i=+a[1],u=s.split(`
`),c=u.length.toString().length+2,l=u.map(function(g,x){return mo((x+1).toString(),c)+g}),h=0,d=0;d<l.length;d++)h=Math.max(l[d].length,h);var p=l.slice(0,i-1),f=l.slice(i-1,i),m=l.slice(i);console.log(p.join(`
`)),console.log(o.split(`
`)[0]),console.log("%c "+mo(f[0],h),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(m.join(`
`))}(t,n.getShaderInfoLog(r)),new Error("Failed to compile fragment shader.");return r}var bp,wp,kE=/ERROR: [0-9]+:([0-9]+):/g;function SE(n,e){return as(n,e,function(){return n.createProgram()},"Unable to create WebGLProgram.")}function NE(n,e,t){if(Se(n,e,function(){return n.linkProgram(t)}),n.getProgramParameter(t,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Cp(n,e,t){if(Se(n,e,function(){return n.validateProgram(t)}),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function TE(n,e,t){var r=as(n,e,function(){return n.createBuffer()},"Unable to create WebGLBuffer");return Se(n,e,function(){return n.bindBuffer(n.ARRAY_BUFFER,r)}),Se(n,e,function(){return n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)}),r}function EE(n,e,t){var r=as(n,e,function(){return n.createBuffer()},"Unable to create WebGLBuffer");return Se(n,e,function(){return n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,r)}),Se(n,e,function(){return n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)}),r}function RE(n,e){return as(n,e,function(){return n.createTexture()},"Unable to create WebGLTexture.")}function AE(n,e){var t=se().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){var r="["+n+"x"+e+"]";throw new Error("Requested texture size "+r+" is invalid.")}if(n>t||e>t)throw r="["+n+"x"+e+"]",new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+("["+t+"x"+t+"]")+".")}function $E(n,e){return as(n,e,function(){return n.createFramebuffer()},"Unable to create WebGLFramebuffer.")}function ov(n,e,t,r,s,o,a,i){var u=n.getAttribLocation(t,r);return u!==-1&&(Se(n,e,function(){return n.bindBuffer(n.ARRAY_BUFFER,s)}),Se(n,e,function(){return n.vertexAttribPointer(u,o,n.FLOAT,!1,a,i)}),Se(n,e,function(){return n.enableVertexAttribArray(u)}),!0)}function DE(n,e,t,r){LE(n,r),Se(n,e,function(){return n.activeTexture(n.TEXTURE0+r)}),Se(n,e,function(){return n.bindTexture(n.TEXTURE_2D,t)})}function FE(n,e,t,r){return as(n,e,function(){return n.getUniformLocation(t,r)},'uniform "'+r+'" not present in program.')}function OE(n,e,t){return n.getUniformLocation(e,t)}function _E(n,e,t,r,s,o){Se(n,e,function(){return DE(n,e,r,o)}),Se(n,e,function(){return n.uniform1i(s,o)})}function Ip(n,e,t,r){Se(n,e,function(){return n.bindFramebuffer(n.FRAMEBUFFER,r)}),Se(n,e,function(){return n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0)})}function av(n,e,t){Se(n,e,function(){return n.bindFramebuffer(n.FRAMEBUFFER,t)}),Se(n,e,function(){return n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0)})}function Gc(n){var e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+ME(n,e))}function ME(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+e}}function as(n,e,t,r){var s=Se(n,e,function(){return t()});if(s==null)throw new Error(r);return s}function LE(n,e){var t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+n.TEXTURE0;if(r<n.TEXTURE0||r>t)throw new Error("textureUnit must be in "+("[gl.TEXTURE0, gl.TEXTURE"+t+"]")+".")}function Hc(n,e){return e===void 0&&(e=2),ve(n.slice(0,n.length-e))}function qc(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function kp(n){var e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Hc(n)].concat(qc(n))),e}function PE(n,e){var t;e===void 0&&(e=!1);var r=se().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(r*=2,(n=n.map(function(c,l){return l>=n.length-2?rp(n[l]):n[l]})).length===1&&(n=[2,n[0]])),n.length!==2){var s=Rs(n);n=s.newShape}var o=ve(n);if(n.length<=1&&o<=r)return[1,o];if(n.length===2&&n[0]<=r&&n[1]<=r)return n;if(n.length===3&&n[0]*n[1]<=r&&n[2]<=r)return[n[0]*n[1],n[2]];if(n.length===3&&n[0]<=r&&n[1]*n[2]<=r)return[n[0],n[1]*n[2]];if(n.length===4&&n[0]*n[1]*n[2]<=r&&n[3]<=r)return[n[0]*n[1]*n[2],n[3]];if(n.length===4&&n[0]<=r&&n[1]*n[2]*n[3]<=r)return[n[0],n[1]*n[2]*n[3]];if(e){var a=Hc(n),i=2,u=2;return n.length&&(i=(t=qc(n))[0],u=t[1]),Mc(o=a*(i/2)*(u/2)).map(function(c){return 2*c})}return Mc(o)}function jc(n){return n%2==0}function Kc(n,e){if(Wt(n=n.slice(-2),e=e.slice(-2))||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){var t=n.slice(-1)[0],r=e.slice(-1)[0];if(t===r||jc(t)&&jc(r)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&jc(n[0])&&jc(e[0])}function BE(n){if(bp==null){var e=Mr(n);bp=e.getParameter(e.MAX_TEXTURE_SIZE)}return bp}function zE(n){if(wp==null){var e=Mr(n);wp=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,wp)}function VE(n){if(n===0)return 0;var e=Mr(n);return nr(e,"EXT_disjoint_timer_query_webgl2")&&n===2?2:nr(e,"EXT_disjoint_timer_query")?1:0}function nr(n,e){return n.getExtension(e)!=null}function iv(n){try{if(Mr(n)!=null)return!0}catch{return!1}return!1}function WE(n){if(n===0)return!1;var e=Mr(n);if(n===1){if(!nr(e,"OES_texture_float"))return!1}else if(!nr(e,"EXT_color_buffer_float"))return!1;return Sp(e)}function UE(n){if(n===0)return!1;var e=Mr(n);if(n!==1){if(nr(e,"EXT_color_buffer_float"))return Sp(e);if(nr(e,"EXT_color_buffer_half_float")){var t=e.getExtension("EXT_color_buffer_half_float");return function(r,s){var o=vp(r,s),a=r.createTexture();r.bindTexture(r.TEXTURE_2D,a),r.texImage2D(r.TEXTURE_2D,0,o.internalFormatHalfFloat,1,1,0,o.textureFormatFloat,o.textureTypeHalfFloat,null);var i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,a,0);var u=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(a),r.deleteFramebuffer(i),u}(e,t)}return!1}return!!nr(e,"OES_texture_float")&&!!nr(e,"WEBGL_color_buffer_float")&&Sp(e)}function Sp(n){var e=vp(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);var r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);var s=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(r),s}function GE(n){return n===2&&Mr(n).fenceSync!=null}var _e=se();function uv(n){se().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function He(n,e){return H.tidy(n,e)}function _n(n){nv(n).forEach(function(e){return e.dispose()})}function HE(n){return H.keep(n)}function Xc(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];se().getBool("IS_TEST")||console.warn.apply(console,n)}function $s(n,e){var t=n;if(yr(n))return e==="string"?[]:[n.length];if(!Array.isArray(n))return[];for(var r=[];Array.isArray(t)||yr(t)&&e!=="string";)r.push(t.length),t=t[0];return Array.isArray(n)&&se().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function s(o,a,i){if(i=i||[],!Array.isArray(o)&&!yr(o))return void _(a.length===0,function(){return"Element arr["+i.join("][")+"] is a primitive, but should be an array/TypedArray of "+a[0]+" elements"});_(a.length>0,function(){return"Element arr["+i.join("][")+"] should be a primitive, but is an array of "+o.length+" elements"}),_(o.length===a[0],function(){return"Element arr["+i.join("][")+"] should have "+a[0]+" elements, but has "+o.length+" elements"});for(var u=a.slice(1),c=0;c<o.length;++c)s(o[c],u,i.concat(c))}(n,r,[]),r}function cv(n,e,t,r){if(n!=null&&(n!=="numeric"&&n!==e||n==="numeric"&&e==="string"))throw new Error("Argument '"+t+"' passed to '"+r+"' must be "+n+" tensor, but got "+e+" tensor")}function $(n,e,t,r){if(r===void 0&&(r="numeric"),n instanceof yt)return cv(r,n.dtype,e,t),n;var s=da(n);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),cv(r,s,e,t),n==null||!yr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){var o=n==null?"null":n.constructor.name;throw new Error("Argument '"+e+"' passed to '"+t+"' must be a Tensor or TensorLike, but got '"+o+"'")}var a=$s(n,s);yr(n)||Array.isArray(n)||(n=[n]);var i=s!=="string"?ap(n,s,se().getBool("DEBUG")):fo(n,[],!0);return H.makeTensor(i,a,s)}function Yc(n,e,t,r){if(r===void 0&&(r="numeric"),!Array.isArray(n))throw new Error("Argument "+e+" passed to "+t+" must be a `Tensor[]` or `TensorLike[]`");return n.map(function(s,o){return $(s,e+"["+o+"]",t)},r)}function lv(n,e){for(var t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function qE(n,e,t){for(var r=n.length+e.length,s=[],o=0,a=0,i=0;i<r;i++)t.indexOf(i)===-1?s.push(n[o++]):s.push(e[a++]);return s}function fn(n,e){for(var t=[],r=n.length,s=0;s<r;s++)e.indexOf(s)===-1&&t.push(n[s]);return[t,e.map(function(o){return n[o]})]}function Mn(n,e){return qE(n,e.map(function(t){return 1}),e)}function qn(n,e,t){_(lv(e,t),function(){return n+" supports only inner-most axes for now. Got axes "+e+" and rank-"+t+" input."})}function Lr(n,e){if(lv(n,e))return null;for(var t=[],r=0;r<e;++r)n.indexOf(r)===-1&&t.push(r);return n.forEach(function(s){return t.push(s)}),t}function Np(n){return n.map(function(e,t){return[t,e]}).sort(function(e,t){return e[1]-t[1]}).map(function(e){return e[0]})}function Pr(n,e){for(var t=[],r=e-n;r<e;++r)t.push(r);return t}function jE(n,e){var t=n[0].length;n.forEach(function(s,o){_(s.length===t,function(){return"Error in concat"+t+"D: rank of tensors["+o+"] must be the same as the rank of the rest ("+t+")"})}),_(e>=0&&e<t,function(){return"Error in concat"+t+"D: axis must be between 0 and "+(t-1)+"."});var r=n[0];n.forEach(function(s,o){for(var a=0;a<t;a++)_(a===e||s[a]===r[a],function(){return"Error in concat"+t+"D: Shape of tensors["+o+"] ("+s+") does not match the shape of the rest ("+r+") along the non-concatenated axis "+o+"."})})}function fa(n,e){for(var t=n[0].slice(),r=1;r<n.length;r++)t[e]+=n[r][e];return t}function V(n){var e=Object.keys(n);if(e.length!==1)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+e.length+" keys.");var t=e[0],r=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1));var s=function(){for(var o=[],a=0;a<arguments.length;a++)o[a]=arguments[a];H.startScope(t);try{var i=r.apply(void 0,o);return i instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),H.endScope(i),i}catch(u){throw H.endScope(null),u}};return Object.defineProperty(s,"name",{value:t,configurable:!0}),s}_e.registerFlag("HAS_WEBGL",function(){return _e.getNumber("WEBGL_VERSION")>0}),_e.registerFlag("WEBGL_VERSION",function(){return iv(2)?2:iv(1)?1:0}),_e.registerFlag("WEBGL_BUFFER_SUPPORTED",function(){return _e.get("WEBGL_VERSION")===2}),_e.registerFlag("WEBGL_CPU_FORWARD",function(){return!0}),_e.registerFlag("WEBGL_FORCE_F16_TEXTURES",function(){return!1}),_e.registerFlag("WEBGL_PACK",function(){return _e.getBool("HAS_WEBGL")}),_e.registerFlag("WEBGL_PACK_NORMALIZATION",function(){return _e.getBool("WEBGL_PACK")}),_e.registerFlag("WEBGL_PACK_CLIP",function(){return _e.getBool("WEBGL_PACK")}),_e.registerFlag("WEBGL_PACK_DEPTHWISECONV",function(){return!1}),_e.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",function(){return _e.getBool("WEBGL_PACK")}),_e.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",function(){return _e.getBool("WEBGL_PACK")}),_e.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",function(){return _e.getBool("WEBGL_PACK")}),_e.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",function(){return _e.getBool("WEBGL_PACK")}),_e.registerFlag("WEBGL_PACK_REDUCE",function(){return _e.getBool("WEBGL_PACK")}),_e.registerFlag("WEBGL_LAZILY_UNPACK",function(){return _e.getBool("WEBGL_PACK")}),_e.registerFlag("WEBGL_CONV_IM2COL",function(){return _e.getBool("WEBGL_PACK")}),_e.registerFlag("WEBGL_MAX_TEXTURE_SIZE",function(){return BE(_e.getNumber("WEBGL_VERSION"))}),_e.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",function(){return zE(_e.getNumber("WEBGL_VERSION"))}),_e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",function(){var n=_e.getNumber("WEBGL_VERSION");return n===0?0:VE(n)}),_e.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",function(){return _e.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&(n=navigator.userAgent||navigator.vendor||window.opera,!(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(n)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(n.substr(0,4))));var n}),_e.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",function(){return WE(_e.getNumber("WEBGL_VERSION"))}),_e.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",function(){return!_e.getBool("WEBGL_FORCE_F16_TEXTURES")&&_e.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")}),_e.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",function(){return UE(_e.getNumber("WEBGL_VERSION"))}),_e.registerFlag("WEBGL_FENCE_API_ENABLED",function(){return GE(_e.getNumber("WEBGL_VERSION"))}),_e.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",function(){return _e.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0}),ev=uv;var Yt=V({complex_:function(n,e){var t=$(n,"real","complex"),r=$(e,"imag","complex");return rt(t.shape,r.shape,"real and imag shapes, "+t.shape+" and "+r.shape+", must match in call to tf.complex()."),H.runKernelFunc(function(s){return s.complex(t,r)},{$real:t,$imag:r})}}),jn=V({real_:function(n){var e=$(n,"input","real");return H.runKernelFunc(function(t){return t.real(e)},{$input:e})}}),br=V({imag_:function(n){var e=$(n,"input","imag");return H.runKernelFunc(function(t){return t.imag(e)},{$input:e})}});function Qt(n,e,t){return Ds(n,e,$s(n,t),t)}function Ds(n,e,t,r){if(r==null&&(r=da(n)),r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!yr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){cp(e);var s=ve(e),o=ve(t);_(s===o,function(){return"Based on the provided shape, ["+e+"], the tensor should have "+s+" values but has "+o});for(var a=0;a<t.length;++a){var i=t[a],u=a!==t.length-1||i!==ve(e.slice(a));_(t[a]===e[a]||!u,function(){return"Error creating a new Tensor. Inferred shape ("+t+") does not match the provided shape ("+e+"). "})}}return yr(n)||Array.isArray(n)||(n=[n]),e=e||t,n=r!=="string"?ap(n,r,se().getBool("DEBUG")):fo(n,[],!0),H.makeTensor(n,e,r)}function ye(n,e){if((yr(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&yr(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ds(n,[],[],e)}function is(n,e){po(n);var t=$s(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ds(n,null,t,e)}function yo(n,e,t){if(po(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");var r=$s(n,t);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ds(n,e,r,t)}function hv(n,e,t){if(po(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");var r=$s(n,t);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ds(n,e,r,t)}function vo(n,e,t){if(po(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");var r=$s(n,t);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ds(n,e,r,t)}function KE(n,e,t){if(po(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");var r=$s(n,t);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ds(n,e,r,t)}function XE(n,e,t){if(po(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");var r=$s(n,t);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ds(n,e=e||r,r,t)}function YE(n,e,t,r){return e===void 0&&(e=!0),H.makeVariable(n,e,t,r)}function bo(n,e){if(e===void 0&&(e="float32"),e==="complex64"){var t=bo(n,"float32"),r=bt(n,"float32");return Yt(t,r)}var s=up(ve(n),e);return H.makeTensor(s,n,e)}function bt(n,e){if(e===void 0&&(e="float32"),e==="complex64"){var t=bt(n,"float32"),r=bt(n,"float32");return Yt(t,r)}var s=pa(ve(n),e);return H.makeTensor(s,n,e)}function Qc(n,e,t){return H.runKernelFunc(function(r){return r.fill(n,e,t)},{})}function dv(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");return H.runKernelFunc(function(r){return r.linspace(n,e,t)},{})}function Ti(n,e,t,r){if(t===void 0&&(t=1),r===void 0&&(r="float32"),t===0)throw new Error("Cannot have a step of zero");if(n===e||n<e&&t<0||e<n&&t>1)return bt([0],r);var s=pa(Math.abs(Math.ceil((e-n)/t)),r);e<n&&t===1&&(t=-1),s[0]=n;for(var o=1;o<s.length;o++)s[o]=s[o-1]+t;return is(s,r)}var Tp=V({onesLike_:function(n){var e=$(n,"x","onesLike");if(e.dtype==="complex64"){var t=Tp(jn(e)),r=Ke(br(e));return Yt(t,r)}return H.runKernelFunc(function(s){return s.onesLike(e)},{x:e},function(s,o){return{x:function(){return Ke(s)}}},"OnesLike")}}),Ke=V({zerosLike_:function(n){var e=$(n,"x","zerosLike");return H.runKernelFunc(function(t){return t.zerosLike(e)},{x:e},function(t,r){return{x:function(){return Ke(t)}}},"ZerosLike")}}),rr=V({concat_:function(n,e){e===void 0&&(e=0),_(n.length>=1,function(){return"Pass at least one tensor to concat"});var t=Yc(n,"tensors","concat");t[0].dtype==="complex64"&&t.forEach(function(i){if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype `+i.dtype+". ")}),e=Ot(e,t[0].shape)[0];var r=fa(t.map(function(i){return i.shape}),e);if(ve(r)===0)return Qt([],r);if((t=t.filter(function(i){return i.size>0})).length===1)return t[0];var s=t.map(function(i){return i.shape});jE(s,e);var o=t,a={axis:e};return H.runKernelFunc(function(i){return i.concat(t,e)},o,function(i){var u=s.map(function(c){return c[e]});return Jc(i,u,e).map(function(c){return function(){return c}})},"Concat",a)}}),QE=V({concat1d_:function(n){return rr(n,0)}}),JE=V({concat2d_:function(n,e){return rr(n,e)}}),ZE=V({concat3d_:function(n,e){return rr(n,e)}}),eR=V({concat4d_:function(n,e){return rr(n,e)}}),Jc=V({split_:function(n,e,t){t===void 0&&(t=0);var r,s=$(n,"x","split");return t=Ot(t,s.shape)[0],typeof e=="number"?(_(s.shape[t]%e==0,function(){return"Number of splits must evenly divide the axis."}),r=new Array(e).fill(s.shape[t]/e)):(_(s.shape[t]===e.reduce(function(o,a){return o+a}),function(){return"The sum of sizes must match the size of the axis dimension."}),r=e),H.runKernelFunc(function(o){return o.split(s,r,t)},{$x:s},function(o){return{$x:function(){return rr(o,t)}}})}});function Le(n,e,t){return e===void 0&&(e="float32"),e=e||"float32",cp(n),new Ii(n,e,t)}function tR(n,e){e===void 0&&(e=!1),console.log(n.toString(e))}var Ep=V({batchToSpaceND_:function(n,e,t){var r=$(n,"x","batchToSpaceND"),s=e.reduce(function(o,a){return o*a});return _(r.rank>=1+e.length,function(){return"input rank is "+r.rank+" but should be > than blockShape.length "+e.length}),_(t.length===e.length,function(){return"crops.length is "+t.length+" but should be equal to blockShape.length  "+e.length}),_(r.shape[0]%s==0,function(){return"input tensor batch is "+r.shape[0]+" but is not divisible by the product of the elements of blockShape "+e.join(" * ")+" === "+s}),H.runKernelFunc(function(o){return o.batchToSpaceND(r,e,t)},{$x:r},function(o){return{$x:function(){return o.spaceToBatchND(e,t)}}})}}),pv=V({cast_:function(n,e){var t=$(n,"x","cast");if(!qy(e))throw new Error("Failed to cast to unknown dtype "+e);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");var r={dtype:e};return H.runKernelFunc(function(s){return s.cast(t,e)},{x:t},function(s){return{x:function(){return s.clone()}}},"Cast",r)}}),nR=V({cumsum_:function(n,e,t,r){e===void 0&&(e=0),t===void 0&&(t=!1),r===void 0&&(r=!1);var s=$(n,"x","cumsum"),o=Lr([e|=0],s.rank),a=s;o!=null&&(a=s.transpose(o));var i=Pr(1,s.rank)[0],u=H.runKernelFunc(function(c){return c.cumsum(a,i,t,r)},{permutedX:a},function(c){return{permutedX:function(){return c.cumsum(e,t,!r)}}});return o!=null&&(u=u.transpose(o)),u}}),fv=V({depthToSpace_:function(n,e,t){t===void 0&&(t="NHWC");var r=$(n,"x","depthToSpace"),s=t==="NHWC"?r.shape[1]:r.shape[2],o=t==="NHWC"?r.shape[2]:r.shape[3],a=t==="NHWC"?r.shape[3]:r.shape[1];return _(s*e>=0,function(){return`Negative dimension size caused by overflow when multiplying
      `+s+" and "+e+`  for depthToSpace with input shape
      `+r.shape}),_(o*e>=0,function(){return`Negative dimension size caused by overflow when multiplying
      `+o+" and "+e+` for depthToSpace with input shape
          `+r.shape}),_(a%(e*e)==0,function(){return"Dimension size must be evenly divisible by "+e*e+" but is "+a+" for depthToSpace with input shape "+r.shape}),H.runKernelFunc(function(i){return i.depthToSpace(r,e,t)},{$x:r})}}),us=V({expandDims_:function(n,e){e===void 0&&(e=0);var t=$(n,"x","expandDims",null);_(e<=t.rank,function(){return"Axis must be <= rank of the tensor"});var r=t.shape.slice();return e<0&&(_(-(t.rank+1)<=e,function(){return"Axis must be in the interval ["+-(t.rank+1)+", "+t.rank+"]"}),e=t.rank+e+1),r.splice(e,0,1),Br(t,r)}}),Br=V({reshape_:function(n,e){var t=$(n,"x","reshape",null);e=Gy(e,t.size),_(t.size===ve(e),function(){return"new shape and old shape must have the same number of elements."});var r={shape:e};return H.runKernelFunc(function(s){return s.reshape(t,e)},{x:t},function(s){return{x:function(){return s.reshape(t.shape)}}},"Reshape",r)}}),Rp=V({spaceToBatchND_:function(n,e,t){var r=$(n,"x","spaceToBatchND");return _(r.rank>=1+e.length,function(){return"input rank "+r.rank+" should be > than [blockShape] "+e.length}),_(t.length===e.length,function(){return"paddings.shape[0] "+t.length+" must be equal to [blockShape] "+e.length}),_(r.shape.reduce(function(s,o,a){return a>0&&a<=e.length?s&&(o+t[a-1][0]+t[a-1][1])%e[a-1]==0:s},!0),function(){return"input spatial dimensions "+r.shape.slice(1)+" with paddings "+t.toString()+" must be divisible by blockShapes "+e.toString()}),H.runKernelFunc(function(s){return s.spaceToBatchND(r,e,t)},{$x:r},function(s){return{$x:function(){return s.batchToSpaceND(e,t)}}})}}),Ap=V({squeeze_:function(n,e){var t=$(n,"x","squeeze");return Br(t,Rs(t.shape,e).newShape)}}),cs=V({stack_:function(n,e){e===void 0&&(e=0);var t=Yc(n,"tensors","stack");if(_(t.length>=1,function(){return"Pass at least one tensor to tf.stack"}),t.length===1)return t[0].expandDims(e);var r=t[0].rank,s=t[0].shape,o=t[0].dtype;_(e<=r,function(){return"Axis must be <= rank of the tensor"}),t.forEach(function(i){rt(s,i.shape,"All tensors passed to stack must have matching shapes")}),t.forEach(function(i){_(o===i.dtype,function(){return"All tensors passed to stack must have matching dtypes"})});var a=t.map(function(i){return i.expandDims(e)});return rr(a,e)}}),Ei=V({unstack_:function(n,e){e===void 0&&(e=0),e=e||0;var t=$(n,"x","unstack");_(e>=-t.shape.length&&e<t.shape.length,function(){return"Axis = "+e+" is not in [-"+t.shape.length+", "+t.shape.length+")"}),e<0&&(e+=t.shape.length);var r={axis:e};return H.runKernelFunc(function(s){return s.unstack(t,e)},{x:t},function(s){return{x:function(){return cs(s,e)}}},"Unpack",r)}}),mv=function(n,e){return Ie(this,void 0,void 0,function(){var t,r,s,o,a,i,u,c,l,h;return ke(this,function(d){switch(d.label){case 0:return t=$(n,"x","setdiff1d"),r=$(e,"y","setdiff1d"),_(t.dtype===r.dtype,function(){return"x and y should have the same dtype, but got x ("+t.dtype+") and y ("+r.dtype+")."}),_(t.rank===1,function(){return"x should be 1D tensor, but got x ("+t.shape+")."}),_(r.rank===1,function(){return"y should be 1D tensor, but got y ("+r.shape+")."}),[4,t.data()];case 1:return s=d.sent(),[4,r.data()];case 2:for(o=d.sent(),a=new Set(o),i=0,l=0;l<s.length;l++)a.has(s[l])||i++;for(u=new Ii([i],t.dtype),c=new Ii([i],"int32"),l=0,h=0;l<s.length;l++)a.has(s[l])||(u.values[h]=s[l],c.values[h]=l,h++);return[2,[u.toTensor(),c.toTensor()]]}})})};function Zc(n,e,t,r){r===void 0&&(r=!0);var s=[];if(r)(s=s.concat(e.slice(0))).push(n[0]/t),s=s.concat(n.slice(1));else{s=s.concat(n[0]);for(var o=e.length,a=0;a<o;++a)s=s.concat([n[a+1]/e[a],e[a]]);s=s.concat(n.slice(o+1))}return s}function el(n,e,t){t===void 0&&(t=!0);var r=[];if(t){r.push(e);for(var s=e+1;s<n;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{var o=[],a=[];for(s=1;s<n;++s)s>=2*e+1||s%2==1?a.push(s):o.push(s);r.push.apply(r,o),r.push(0),r.push.apply(r,a)}return r}function tl(n,e,t,r){r===void 0&&(r=!0);var s=[];r?s.push(n[0]/t):s.push(n[0]*t);for(var o=1;o<n.length;++o)o<=e.length?r?s.push(e[o-1]*n[o]):s.push(n[o]/e[o-1]):s.push(n[o]);return s}function gv(n,e){for(var t=[0],r=0;r<e;++r)t.push(n[r][0]);return t}function xv(n,e,t){for(var r=n.slice(0,1),s=0;s<t;++s)r.push(n[s+1]-e[s][0]-e[s][1]);return r}var yv="Add",nl="Div",rl="SquaredDifference",vv="BroadcastTo",bv="OneHot",wv="Identity",Cv="Tile",Iv="PadV2",ls=V({add_:function(n,e){var t,r=$(n,"a","add"),s=$(e,"b","add");t=vt(r,s),r=t[0],s=t[1];var o={a:r,b:s};return H.runKernelFunc(function(a,i){var u=a.add(r,s);return i([r,s]),u},o,null,yv)}});function Fs(n,e){for(var t=n.length,r=[],s=0;s<t;s++){var o=t-1-s,a=n[o]||1;(e[e.length-1-s]||1)>1&&a===1&&r.unshift(o)}return r}function Ut(n,e){for(var t=[],r=0;r<e.length;r++){var s=n[n.length-r-1],o=e.length-r-1,a=e[o];(s==null||s===1&&a>1)&&t.unshift(o)}return t}function qe(n,e){for(var t=[],r=Math.max(n.length,e.length),s=0;s<r;s++){var o=n[n.length-s-1];o==null&&(o=1);var a=e[e.length-s-1];if(a==null&&(a=1),o===1)t.unshift(a);else if(a===1)t.unshift(o);else{if(o!==a)throw Error("Operands could not be broadcast together with shapes "+n+" and "+e+".");t.unshift(o)}}return t}var kv=V({abs_:function(n){var e=$(n,"x","abs");return e.dtype==="complex64"?H.runKernelFunc(function(t){return t.complexAbs(e)},{$x:e}):H.runKernelFunc(function(t,r){var s=t.abs(e);return r([e]),s},{x:e},function(t,r){var s=r[0];return{x:function(){return t.mul(s.toFloat().step(-1))}}},"Abs")}}),Sv=V({acos_:function(n){var e=$(n,"x","acos");return H.runKernelFunc(function(t,r){var s=t.acos(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.divStrict(ye(1).sub(s.toFloat().square()).sqrt()).neg()}}})}}),Nv=V({acosh_:function(n){var e=$(n,"x","acosh");return H.runKernelFunc(function(t,r){var s=t.acosh(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.divStrict(s.toFloat().square().sub(1).sqrt())}}})}}),Tv=V({asin_:function(n){var e=$(n,"x","asin");return H.runKernelFunc(function(t,r){var s=t.asin(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.divStrict(ye(1).sub(s.toFloat().square()).sqrt())}}})}}),Ev=V({asinh_:function(n){var e=$(n,"x","asinh");return H.runKernelFunc(function(t,r){var s=t.asinh(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.divStrict(ye(1).add(s.toFloat().square()).sqrt())}}})}}),Rv=V({atan_:function(n){var e=$(n,"x","atan");return H.runKernelFunc(function(t,r){var s=t.atan(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.div(s.toFloat().square().add(1))}}})}}),Av=V({atanh_:function(n){var e=$(n,"x","atanh");return H.runKernelFunc(function(t,r){var s=t.atanh(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.div(ye(1).sub(s.toFloat().square()))}}})}}),$v=V({ceil_:function(n){var e=$(n,"x","ceil");return H.runKernelFunc(function(t){return t.ceil(e)},{$x:e},function(t){return{$x:function(){return Ke(t)}}})}}),Dv=V({clipByValue_:function(n,e,t){var r=$(n,"x","clipByValue");_(e<=t,function(){return"Error in clip: min ("+e+") must be less than or equal to max ("+t+")."});var s=[r],o={min:e,max:t};return H.runKernelFunc(function(a,i){var u=a.clip(r,e,t);return i([r]),u},{x:r},function(a,i){var u=i[0];return{x:function(){return a.where(u.greaterEqual(e).logicalAnd(u.lessEqual(t)),Ke(a))}}},"ClipByValue",o,s)}}),Fv=V({cos_:function(n){var e=$(n,"x","cos"),t=[e];return H.runKernelFunc(function(r,s){var o=r.cos(e);return s([e]),o},{x:e},function(r,s){var o=s[0];return{x:function(){return o.toFloat().sin().neg().mul(r)}}},"Cos",{},t)}}),Ov=V({cosh_:function(n){var e=$(n,"x","cosh");return H.runKernelFunc(function(t,r){var s=t.cosh(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return s.toFloat().sinh().mulStrict(t)}}})}}),_v=V({erf_:function(n){var e=$(n,"x","erf");return _(e.dtype==="int32"||e.dtype==="float32",function(){return"Input dtype must be `int32` or `float32`."}),e.dtype==="int32"&&(e=e.toFloat()),H.runKernelFunc(function(t,r){var s=t.erf(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.mul(s.square().neg().exp().mul(2/Math.sqrt(Math.PI)))}}})}}),Mv=V({exp_:function(n){var e=$(n,"x","exp");return H.runKernelFunc(function(t,r){var s=t.exp(e);return r([s]),s},{x:e},function(t,r){return{x:function(){return t.mulStrict(r[0])}}},"Exp",{},[],[!0])}}),Lv=V({expm1_:function(n){var e=$(n,"x","expm1");return H.runKernelFunc(function(t,r){var s=t.expm1(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.mul(s.exp())}}})}}),Pv=V({floor_:function(n){var e=$(n,"x","floor");return H.runKernelFunc(function(t){return t.floor(e)},{$x:e},function(t){return{$x:function(){return Ke(t)}}})}}),Bv=V({log_:function(n){var e=$(n,"x","log"),t=[e];return H.runKernelFunc(function(r,s){var o=r.log(e);return s([e]),o},{x:e},function(r,s){var o=s[0];return{x:function(){return r.div(o.toFloat())}}},"Log",{},t)}}),zv=V({log1p_:function(n){var e=$(n,"x","log1p");return H.runKernelFunc(function(t,r){var s=t.log1p(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.div(s.add(1))}}})}}),rR=V({logSigmoid_:function(n){var e=$(n,"x","logSigmoid");return H.runKernelFunc(function(t,r){var s=t.softplus(e.neg()).neg();return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.mul(s.neg().sigmoid())}}})}}),sl=V({neg_:function(n){var e=$(n,"x","neg"),t=[e];return H.runKernelFunc(function(r){return r.neg(e)},{x:e},function(r){return{x:function(){return r.neg()}}},"Neg",{},t)}}),Vv=V({reciprocal_:function(n){var e=$(n,"x","reciprocal");return H.runKernelFunc(function(t,r){var s=t.reciprocal(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.div(s.square().neg())}}})}}),Wv=V({round_:function(n){var e=$(n,"x","round");return H.runKernelFunc(function(t){return t.round(e)},{$x:e},function(t){return{$x:function(){return Ke(t)}}})}}),$p=V({rsqrt_:function(n){var e=$(n,"x","rsqrt"),t=[e];return H.runKernelFunc(function(r,s){var o=r.rsqrt(e);return s([e]),o},{x:e},function(r,s){var o=s[0];return{x:function(){return r.div(o.pow(1.5).mul(2)).neg()}}},"Rsqrt",{},t)}}),Uv=V({sigmoid_:function(n){var e=$(n,"x","sigmoid");return H.runKernelFunc(function(t,r){var s=t.sigmoid(e);return r([s]),s},{x:e},function(t,r){var s=r[0];return{x:function(){return t.mul(s.mul(ye(1).sub(s)))}}},"Sigmoid")}}),Gv=V({sign_:function(n){var e=$(n,"x","sign");return H.runKernelFunc(function(t){return t.sign(e)},{$x:e},function(t){return{$x:function(){return Ke(t)}}})}}),sR=V({isNaN_:function(n){var e=$(n,"x","isNaN");return H.runKernelFunc(function(t){return t.isNaN(e)},{$x:e},function(t){return{$x:function(){return Ke(t)}}})}}),oR=V({isInf_:function(n){var e=$(n,"x","isInf");return H.runKernelFunc(function(t){return t.isInf(e)},{$x:e},function(t){return{$x:function(){return Ke(t)}}})}}),aR=V({isFinite_:function(n){var e=$(n,"x","isFinite");return H.runKernelFunc(function(t){return t.isFinite(e)},{$x:e},function(t){return{$x:function(){return Ke(t)}}})}}),Hv=V({sin_:function(n){var e=$(n,"x","sin"),t=[e];return H.runKernelFunc(function(r,s){var o=r.sin(e);return s([e]),o},{x:e},function(r,s){var o=s[0];return{x:function(){return o.toFloat().cos().mul(r)}}},"Sin",{},t)}}),qv=V({sinh_:function(n){var e=$(n,"x","sinh");return H.runKernelFunc(function(t,r){var s=t.sinh(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return s.toFloat().cosh().mulStrict(t)}}})}}),jv=V({softplus_:function(n){var e=$(n,"x","softplus");return H.runKernelFunc(function(t,r){var s=t.softplus(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.mul(s.sigmoid())}}})}}),Kv=V({sqrt_:function(n){var e=$(n,"x","sqrt");return H.runKernelFunc(function(t,r){var s=t.sqrt(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.div(s.toFloat().sqrt().mul(2))}}})}}),iR=V({step_:function(n,e){e===void 0&&(e=0);var t=$(n,"x","step");return H.runKernelFunc(function(r){return r.step(t,e)},{$x:t},function(r){return{$x:function(){return Ke(r)}}})}}),Xv=V({tan_:function(n){var e=$(n,"x","tan");return H.runKernelFunc(function(t,r){var s=t.tan(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return t.div(s.cos().square())}}})}}),Yv=V({tanh_:function(n){var e=$(n,"x","tanh");return H.runKernelFunc(function(t,r){var s=t.tanh(e);return r([s]),s},{x:e},function(t,r){var s=r[0];return{x:function(){return ye(1).sub(s.square()).mulStrict(t)}}},"Tanh",{},null,[!0])}}),uR=V({addStrict_:function(n,e){var t=$(n,"a","addStrict"),r=$(e,"b","addStrict");return rt(t.shape,r.shape,"Error in addStrict: "),t.add(r)}}),Qv=V({atan2_:function(n,e){var t,r=$(n,"a","atan2"),s=$(e,"b","atan2");t=vt(r,s),r=t[0],s=t[1];var o=qe(r.shape,s.shape);return H.runKernelFunc(function(a,i){var u=a.atan2(r,s);return i([r,s]),u},{$a:r,$b:s},function(a,i){var u=i[0],c=i[1];return{$a:function(){var l=ls(u.square(),c.square()),h=a.mul(c.div(l)),d=Ut(u.shape,o);return d.length>0&&(h=h.sum(d)),h.reshape(u.shape)},$b:function(){var l=ls(u.square(),c.square()),h=sl(a.mul(u.div(l))),d=Ut(c.shape,o);return d.length>0&&(h=h.sum(d)),h.reshape(c.shape)}}})}}),cR=V({divStrict_:function(n,e){var t=$(n,"a","div"),r=$(e,"b","div");return rt(t.shape,r.shape,"Error in divideStrict: "),t.div(r)}}),Dp=V({floorDiv_:function(n,e){var t,r=$(n,"a","floorDiv"),s=$(e,"b","floorDiv");t=vt(r,s),r=t[0],s=t[1];var o=qe(r.shape,s.shape);return H.runKernelFunc(function(a,i){var u=a.floorDiv(r,s);return i([r,s]),u},{a:r,b:s},function(a,i){var u=i[0],c=i[1];return{a:function(){var l=a.div(c.toFloat()),h=Ut(u.shape,o);return h.length>0?l.sum(h).reshape(u.shape):l},b:function(){var l=a.mul(u.toFloat()),h=Ut(c.shape,o);h.length>0&&(l=l.sum(h).reshape(c.shape));var d=c.square();return l.div(d.toFloat()).neg()}}},"FloorDiv")}}),ol=V({maximum_:function(n,e){var t,r=$(n,"a","maximum"),s=$(e,"b","maximum");return t=vt(r,s),r=t[0],s=t[1],r.dtype==="bool"&&(r=r.toInt(),s=s.toInt()),qe(r.shape,s.shape),H.runKernelFunc(function(o,a){var i=o.maximum(r,s);return a([r,s]),i},{a:r,b:s},function(o,a){var i=a[0],u=a[1];return{a:function(){return o.mul(i.greaterEqual(u).toFloat())},b:function(){return o.mul(i.less(u).toFloat())}}},"Maximum")}}),lR=V({maximumStrict_:function(n,e){var t=$(n,"a","maximumStrict"),r=$(e,"b","maximumStrict");return rt(t.shape,r.shape,"Error in maximumStrict: "),t.maximum(r)}}),Fp=V({minimum_:function(n,e){var t,r=$(n,"a","minimum"),s=$(e,"b","minimum");return t=vt(r,s),r=t[0],s=t[1],r.dtype==="bool"&&(r=r.toInt(),s=s.toInt()),qe(r.shape,s.shape),H.runKernelFunc(function(o,a){var i=o.minimum(r,s);return a([r,s]),i},{a:r,b:s},function(o,a){var i=a[0],u=a[1];return{a:function(){return o.mul(i.lessEqual(u).toFloat())},b:function(){return o.mul(i.greater(u).toFloat())}}},"Minimum")}}),hR=V({minimumStrict_:function(n,e){var t=$(n,"a","minimumStrict"),r=$(e,"b","minimumStrict");return rt(t.shape,r.shape,"Error in minimumStrict: "),t.minimum(r)}}),Jv=V({mod_:function(n,e){var t,r=$(n,"a","mod"),s=$(e,"b","mod");t=vt(r,s),r=t[0],s=t[1];var o=qe(r.shape,s.shape);return H.runKernelFunc(function(a,i){var u=a.mod(r,s);return i([r,s]),u},{$a:r,$b:s},function(a,i){var u=i[0],c=i[1];return{$a:function(){var l=Ut(u.shape,o);return l.length>0?a.sum(l).reshape(u.shape):a},$b:function(){var l=a.mul(u.div(c).floor().neg()),h=Ut(c.shape,o);return h.length>0?l.sum(h).reshape(c.shape):l}}})}}),dR=V({modStrict_:function(n,e){var t=$(n,"a","modStrict"),r=$(e,"b","modStrict");return rt(t.shape,r.shape,"Error in modStrict: "),t.mod(r)}}),$t=V({mul_:function(n,e){var t,r=$(n,"a","mul"),s=$(e,"b","mul");t=vt(r,s),r=t[0],s=t[1];var o=qe(r.shape,s.shape);return H.runKernelFunc(function(a,i){var u=a.multiply(r,s);return i([r,s]),u},{a:r,b:s},function(a,i){var u=i[0],c=i[1];return{a:function(){var l=a.mul(c.toFloat()),h=Ut(u.shape,o);return h.length>0?l.sum(h).reshape(u.shape):l},b:function(){var l=a.mul(u.toFloat()),h=Ut(c.shape,o);return h.length>0?l.sum(h).reshape(c.shape):l}}},"Mul")}}),pR=V({mulStrict_:function(n,e){var t=$(n,"a","mul"),r=$(e,"b","mul");return rt(t.shape,r.shape,"Error in multiplyStrict: "),t.mul(r)}}),Ri=V({pow_:function(n,e){var t,r=$(n,"base","pow"),s=$(e,"exp","pow");t=vt(r,s),r=t[0],s=t[1];var o=qe(r.shape,s.shape),a=[r,s];return H.runKernelFunc(function(i,u){var c=i.pow(r,s);return u([r,s,c]),c},{a:r,b:s},function(i,u){var c=u[0],l=u[1],h=u[2];return{a:function(){var d=l.toFloat(),p=i.mul(d.mul(c.pow(d.sub(ye(1))))),f=Ut(c.shape,o);return f.length>0&&(p=p.sum(f)),p.reshape(c.shape)},b:function(){var d=c.greater(0),p=c.log().where(d,Ke(c)),f=i.mul(h.mul(p)),m=Ut(l.shape,o);return m.length>0&&(f=f.sum(m)),f.reshape(l.shape)}}},"Pow",{},a,[!0])}}),fR=V({powStrict_:function(n,e){return rt(n.shape,e.shape,"Error in powStrict: "),n.pow(e)}}),mR=V({squaredDifferenceStrict_:function(n,e){var t=$(n,"a","squaredDifferenceStrict"),r=$(e,"b","squaredDifferenceStrict");return rt(t.shape,r.shape,"Error in squaredDifferenceStrict: "),t.squaredDifference(r)}}),hs=V({sub_:function(n,e){var t,r=$(n,"a","sub"),s=$(e,"b","sub");t=vt(r,s),r=t[0],s=t[1];var o=qe(r.shape,s.shape);return H.runKernelFunc(function(a){return a.subtract(r,s)},{a:r,b:s},function(a){return{a:function(){var i=a,u=Ut(r.shape,o);return u.length>0&&(i=i.sum(u)),i.reshape(r.shape)},b:function(){var i=a,u=Ut(s.shape,o);return u.length>0&&(i=i.sum(u)),i.neg().reshape(s.shape)}}},"Sub")}}),gR=V({subStrict_:function(n,e){var t=$(n,"a","subStrict"),r=$(e,"b","subStrict");return rt(t.shape,r.shape,"Error in subStrict: "),t.sub(r)}}),ds=V({div_:function(n,e){var t,r=$(n,"a","div"),s=$(e,"b","div");if(t=vt(r,s),r=t[0],s=t[1],r.dtype==="int32"&&s.dtype==="int32")return Dp(r,s);var o={a:r,b:s};return H.runKernelFunc(function(a,i){var u=a.realDivide(r,s);return i([r,s]),u},o,null,nl,{})}});function Zv(n,e){if(n.rank<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher, but the rank was "+n.rank+".");if(e.rank<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher, but the rank was "+e.rank+".");if(e.dtype!=="int32")throw new Error("tf.gatherND() expects the indices to be int32 type, but the dtype was "+e.dtype+".");if(e.shape[e.rank-1]>n.rank)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+e.shape[e.rank-1]+" vs. "+n.rank);if(n.size===0)throw new Error("Requested more than 0 entries, but input is empty. Input shape: "+n.shape+".");for(var t=e.shape,r=t[t.length-1],s=1,o=0;o<t.length-1;++o)s*=t[o];var a=n.shape,i=t.slice();i.pop();var u=1;for(o=r;o<n.rank;++o)u*=a[o],i.push(a[o]);var c=On(n.shape).map(function(l){return l/u}).concat([1]).slice(0,r);return[i,s,u,c]}var e0=30;function Op(n){return n<=e0?n:Bc(n,Math.floor(Math.sqrt(n)))}function xR(n,e,t){var r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,o="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+t.shape+", indices.shape: "+e.shape+", shape: "+n+", sliceDim: "+r+", and batchDim: "+s+".";if(t.rank<s)throw new Error(o+" update.rank < "+s+". ");if(n.length<r+(t.rank-s))throw new Error(o+" Output shape length < "+(r+(t.rank-s)));if(t.rank!==s+n.length-r)throw new Error(o+" update.rank != "+(s+n.length-r));for(var a=0;a<s;++a)if(t.shape[a]!==e.shape[a])throw new Error(o+" updates.shape["+a+"] ("+t.shape[a]+") != indices.shape["+a+"] ("+e.shape[a]+").");for(a=0;a<t.rank-s;++a)if(t.shape[a+s]!==n[a+r])throw new Error(o+" updates.shape["+(a+s)+"] ("+t.shape[a+s]+") != shape["+(a+s)+"] ("+n[a+s]+")")}function yR(n,e,t){if(e.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher, but the rank was "+e.rank+".");if(n.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher, but the rank was "+n.rank+".");if(e.dtype!=="int32")throw new Error("The dtype of 'indices' should be int32, but got dtype: "+e.dtype);if(t.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+t);if(t.length===0){if(e.size===0)throw new Error("Indices specified for empty output. indices shape: "+e.shape);if(n.size===0)throw new Error("Updates specified for empty output. updates shape: "+n.shape)}xR(t,e,n)}function al(n,e,t){for(var r=e.shape.length,s=r>1?e.shape[r-1]:1,o=t.length,a=1,i=s;i<o;++i)a*=t[i];var u=s<1?1:s;return{sliceRank:s,numUpdates:ve(e.shape)/u,sliceSize:a,strides:On(t.slice(0,s)).concat([1]),outputSize:ve(t)}}function vR(n,e,t){_(n.rank===e.length,function(){return"Error in slice"+n.rank+"D: Length of begin "+e+" must match the rank of the array ("+n.rank+")."}),_(n.rank===t.length,function(){return"Error in slice"+n.rank+"D: Length of size "+t+" must match the rank of the array ("+n.rank+")."});for(var r=function(o){_(e[o]+t[o]<=n.shape[o],function(){return"Error in slice"+n.rank+"D: begin["+o+"] + size["+o+"] ("+(e[o]+t[o])+") would overflow input.shape["+o+"] ("+n.shape[o]+")"})},s=0;s<n.rank;++s)r(s)}function t0(n){for(var e=[],t=0;n>0;)1&n&&e.push(t),n/=2,t++;return e}function _p(n,e,t){for(var r=[],s=0;s<n.length;s++)r[s]=Math.ceil((e[s]-n[s])/t[s]);return r}function bR(n,e,t,r,s){var o=e[s],a=t[s]||1;(n&1<<s||o==null)&&(o=a>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);var i=r[s];return o<0&&(o+=i),o=_c(0,o,i-1)}function wR(n,e,t,r,s){var o=e[s],a=t[s]||1;(n&1<<s||o==null)&&(o=a>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);var i=r[s];return o<0&&(o+=i),o=a>0?_c(0,o,i):_c(-1,o,i-1)}function n0(n,e,t){for(var r=t.length,s=0;s<t.length;s++)if(t[s]>1){r=s;break}for(s=r+1;s<t.length;s++)if(e[s]>0||t[s]!==n[s])return!1;return!0}function r0(n,e){for(var t=n.length>0?n[n.length-1]:1,r=0;r<n.length-1;r++)t+=n[r]*e[r];return t}function CR(n,e){_(Pc(n),function(){return"The f passed in variableGrads(f) must be a function"}),_(e==null||Array.isArray(e)&&e.every(function(l){return l instanceof Vc}),function(){return"The varList passed in variableGrads(f, varList) must be an array of variables"});var t=e!=null;if(!t)for(var r in e=[],H.registeredVariables)e.push(H.registeredVariables[r]);var s=t?e.filter(function(l){return!l.trainable}):null,o=e.length;_((e=e.filter(function(l){return l.trainable})).length>0,function(){return"variableGrads() expects at least one of the input variables to be trainable, but none of the "+o+" variables is trainable."});var a=H.gradients(n,e,null,!0),i=a.value,u=a.grads;_(u.some(function(l){return l!=null}),function(){return"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."}),_(i.rank===0,function(){return"The f passed in variableGrads(f) must return a scalar, but it returned a rank-"+i.rank+" tensor"});var c={};return e.forEach(function(l,h){u[h]!=null&&(c[l.name]=u[h])}),s!=null&&s.forEach(function(l){return c[l.name]=null}),{value:i,grads:c}}function il(n){return H.customGrad(n)}var ul=V({softmax_:function(n,e){e===void 0&&(e=-1);var t=$(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. Logits was rank "+t.rank+" and dim was "+e);return H.runKernelFunc(function(r,s){var o=r.softmax(t,e);return s([o]),o},{logits:t},function(r,s){var o=s[0],a=r.mul(o);return{logits:function(){return a.sub(a.sum([e],!0).mul(o))}}},"Softmax",{dim:e},[],[!0])}}),s0=V({logSoftmax_:function(n,e){e===void 0&&(e=-1);var t=$(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. Logits was rank "+t.rank+" and axis was "+e);return il(function(r,s){var o=r.max(e,!0),a=r.sub(o),i=a.toFloat().sub(a.exp().sum(e,!0).log());return s([i]),{value:i,gradFunc:function(u,c){var l=c[0].exp();return u.sub(u.sum(e,!0).mul(l))}}})(t)}}),sr=V({transpose_:function(n,e){var t=$(n,"x","transpose");if(e==null&&(e=t.shape.map(function(s,o){return o}).reverse()),_(t.rank===e.length,function(){return"Error in transpose: rank of input "+t.rank+" must match length of perm "+e+"."}),e.forEach(function(s){_(s>=0&&s<t.rank,function(){return"All entries in 'perm' must be between 0 and "+(t.rank-1)+" but got "+e})}),t.rank<=1)return t.clone();var r={perm:e};return H.runKernelFunc(function(s){return s.transpose(t,e)},{x:t},null,"Transpose",r)}}),o0=function(){function n(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}return n.prototype.get=function(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)},n.prototype.set=function(e,t){this.dataIdsCount++,this.data.set(e,t)},n.prototype.has=function(e){return this.data.has(e)},n.prototype.delete=function(e){return this.dataIdsCount--,this.data.delete(e)},n.prototype.numDataIds=function(){return this.dataIdsCount},n}(),a0=function(){function n(){}return n.prototype.time=function(e){return ee("time")},n.prototype.read=function(e){return ee("read")},n.prototype.readSync=function(e){return ee("readSync")},n.prototype.numDataIds=function(){return ee("numDataIds")},n.prototype.disposeData=function(e){return ee("disposeData")},n.prototype.write=function(e,t,r){return ee("write")},n.prototype.move=function(e,t,r,s){return ee("move")},n.prototype.memory=function(){return ee("memory")},n.prototype.floatPrecision=function(){return ee("floatPrecision")},n.prototype.epsilon=function(){return this.floatPrecision()===32?1e-7:1e-4},n.prototype.batchMatMul=function(e,t,r,s){return ee("batchMatMul")},n.prototype.fusedBatchMatMul=function(e){return e.a,e.b,e.transposeA,e.transposeB,e.bias,e.activation,e.preluActivationWeights,ee("fusedBatchMatMul")},n.prototype.slice=function(e,t,r){return ee("slice")},n.prototype.stridedSlice=function(e,t,r,s){return ee("stridedSlice")},n.prototype.unstack=function(e,t){return ee("unstack")},n.prototype.reverse=function(e,t){return ee("reverse")},n.prototype.concat=function(e,t){return ee("concat")},n.prototype.neg=function(e){return ee("neg")},n.prototype.add=function(e,t){return ee("add")},n.prototype.addN=function(e){return ee("addN")},n.prototype.subtract=function(e,t){return ee("subtract")},n.prototype.multiply=function(e,t){return ee("multiply")},n.prototype.realDivide=function(e,t){return ee("realDivide")},n.prototype.floorDiv=function(e,t){return ee("floorDiv")},n.prototype.sum=function(e,t){return ee("sum")},n.prototype.prod=function(e,t){return ee("prod")},n.prototype.unsortedSegmentSum=function(e,t,r){return ee("unsortedSegmentSum")},n.prototype.argMin=function(e,t){return ee("argMin")},n.prototype.argMax=function(e,t){return ee("argMax")},n.prototype.equal=function(e,t){return ee("equal")},n.prototype.notEqual=function(e,t){return ee("notEqual")},n.prototype.less=function(e,t){return ee("less")},n.prototype.lessEqual=function(e,t){return ee("lessEqual")},n.prototype.greater=function(e,t){return ee("greater")},n.prototype.greaterEqual=function(e,t){return ee("greaterEqual")},n.prototype.logicalNot=function(e){return ee("logicalNot")},n.prototype.logicalAnd=function(e,t){return ee("logicalAnd")},n.prototype.logicalOr=function(e,t){return ee("logicalOr")},n.prototype.where=function(e){return ee("where")},n.prototype.select=function(e,t,r){return ee("select")},n.prototype.topk=function(e,t,r){return ee("topk")},n.prototype.min=function(e,t){return ee("min")},n.prototype.minimum=function(e,t){return ee("minimum")},n.prototype.mod=function(e,t){return ee("mod")},n.prototype.max=function(e,t){return ee("max")},n.prototype.maximum=function(e,t){return ee("maximum")},n.prototype.all=function(e,t){return ee("all")},n.prototype.any=function(e,t){return ee("any")},n.prototype.squaredDifference=function(e,t){return ee("squaredDifference")},n.prototype.ceil=function(e){return ee("ceil")},n.prototype.floor=function(e){return ee("floor")},n.prototype.round=function(e){return ee("round")},n.prototype.sign=function(e){return ee("sign")},n.prototype.isNaN=function(e){return ee("isNaN")},n.prototype.isInf=function(e){return ee("isInf")},n.prototype.isFinite=function(e){return ee("isFinite")},n.prototype.pow=function(e,t){return ee("pow")},n.prototype.exp=function(e){return ee("exp")},n.prototype.expm1=function(e){return ee("expm1")},n.prototype.softmax=function(e,t){return ee("softmax")},n.prototype.log=function(e){return ee("log")},n.prototype.log1p=function(e){return ee("log1p")},n.prototype.sqrt=function(e){return ee("sqrt")},n.prototype.rsqrt=function(e){return ee("rsqrt")},n.prototype.square=function(e){return ee("square")},n.prototype.reciprocal=function(e){return ee("reciprocal")},n.prototype.relu=function(e){return ee("relu")},n.prototype.relu6=function(e){return ee("relu6")},n.prototype.prelu=function(e,t){return ee("prelu")},n.prototype.elu=function(e){return ee("elu")},n.prototype.eluDer=function(e,t){return ee("eluDer")},n.prototype.selu=function(e){return ee("selu")},n.prototype.int=function(e){return ee("int")},n.prototype.clip=function(e,t,r){return ee("clip")},n.prototype.abs=function(e){return ee("abs")},n.prototype.complexAbs=function(e){return ee("complexAbs")},n.prototype.sigmoid=function(e){return ee("sigmoid")},n.prototype.softplus=function(e){return ee("softplus")},n.prototype.sin=function(e){return ee("sin")},n.prototype.cos=function(e){return ee("cos")},n.prototype.tan=function(e){return ee("tan")},n.prototype.asin=function(e){return ee("asin")},n.prototype.acos=function(e){return ee("acos")},n.prototype.atan=function(e){return ee("atan")},n.prototype.atan2=function(e,t){return ee("atan2")},n.prototype.sinh=function(e){return ee("sinh")},n.prototype.cosh=function(e){return ee("cosh")},n.prototype.tanh=function(e){return ee("tanh")},n.prototype.asinh=function(e){return ee("asinh")},n.prototype.acosh=function(e){return ee("acosh")},n.prototype.atanh=function(e){return ee("atanh")},n.prototype.erf=function(e){return ee("erf")},n.prototype.step=function(e,t){return ee("step")},n.prototype.fusedConv2d=function(e){return e.input,e.filter,e.convInfo,e.bias,e.activation,e.preluActivationWeights,ee("fusedConv2d")},n.prototype.conv2d=function(e,t,r){return ee("conv2d")},n.prototype.conv2dDerInput=function(e,t,r){return ee("conv2dDerInput")},n.prototype.conv2dDerFilter=function(e,t,r){return ee("conv2dDerFilter")},n.prototype.fusedDepthwiseConv2D=function(e){return e.input,e.filter,e.convInfo,e.bias,e.activation,e.preluActivationWeights,ee("fusedDepthwiseConv2D")},n.prototype.depthwiseConv2D=function(e,t,r){return ee("depthwiseConv2D")},n.prototype.depthwiseConv2DDerInput=function(e,t,r){return ee("depthwiseConv2DDerInput")},n.prototype.depthwiseConv2DDerFilter=function(e,t,r){return ee("depthwiseConv2DDerFilter")},n.prototype.conv3d=function(e,t,r){return ee("conv3d")},n.prototype.conv3dDerInput=function(e,t,r){return ee("conv3dDerInput")},n.prototype.conv3dDerFilter=function(e,t,r){return ee("conv3dDerFilter")},n.prototype.maxPool=function(e,t){return ee("maxPool")},n.prototype.maxPoolBackprop=function(e,t,r,s){return ee("maxPoolBackprop")},n.prototype.avgPool=function(e,t){return ee("avgPool")},n.prototype.avgPoolBackprop=function(e,t,r){return ee("avgPoolBackprop")},n.prototype.avgPool3d=function(e,t){return ee("avgPool3d")},n.prototype.avgPool3dBackprop=function(e,t,r){return ee("avgPool3dBackprop")},n.prototype.maxPool3d=function(e,t){return ee("maxPool3d")},n.prototype.maxPool3dBackprop=function(e,t,r,s){return ee("maxPool3dBackprop")},n.prototype.reshape=function(e,t){return ee("reshape")},n.prototype.cast=function(e,t){return ee("cast")},n.prototype.tile=function(e,t){return ee("tile")},n.prototype.pad=function(e,t,r){return ee("pad")},n.prototype.transpose=function(e,t){return ee("transpose")},n.prototype.gather=function(e,t,r){return ee("gather")},n.prototype.gatherND=function(e,t){return ee("gatherND")},n.prototype.scatterND=function(e,t,r){return ee("scatterND")},n.prototype.batchToSpaceND=function(e,t,r){return ee("batchToSpaceND")},n.prototype.spaceToBatchND=function(e,t,r){return ee("spaceToBatchND")},n.prototype.resizeBilinear=function(e,t,r,s){return ee("resizeBilinear")},n.prototype.resizeBilinearBackprop=function(e,t,r){return ee("resizeBilinearBackprop")},n.prototype.resizeNearestNeighbor=function(e,t,r,s){return ee("resizeNearestNeighbor")},n.prototype.resizeNearestNeighborBackprop=function(e,t,r){return ee("resizeNearestNeighborBackprop")},n.prototype.batchNormalization=function(e,t,r,s,o,a){return ee("batchNormalization")},n.prototype.localResponseNormalization4D=function(e,t,r,s,o){return ee("localResponseNormalization4D")},n.prototype.LRNGrad=function(e,t,r,s,o,a,i){return ee("LRNGrad")},n.prototype.multinomial=function(e,t,r,s){return ee("multinomial")},n.prototype.oneHot=function(e,t,r,s){return ee("oneHot")},n.prototype.cumsum=function(e,t,r,s){return ee("cumsum")},n.prototype.nonMaxSuppression=function(e,t,r,s,o){return ee("nonMaxSuppression")},n.prototype.fft=function(e){return ee("fft")},n.prototype.ifft=function(e){return ee("ifft")},n.prototype.complex=function(e,t){return ee("complex")},n.prototype.real=function(e){return ee("real")},n.prototype.imag=function(e){return ee("imag")},n.prototype.cropAndResize=function(e,t,r,s,o,a){return ee("cropAndResize")},n.prototype.depthToSpace=function(e,t,r){return ee("depthToSpace")},n.prototype.split=function(e,t,r){return ee("split")},n.prototype.sparseToDense=function(e,t,r,s){return ee("sparseToDense")},n.prototype.diag=function(e){return ee("diag")},n.prototype.fill=function(e,t,r){return ee("fill")},n.prototype.onesLike=function(e){return ee("onesLike")},n.prototype.zerosLike=function(e){return ee("zerosLike")},n.prototype.linspace=function(e,t,r){return ee("linspace")},n.prototype.dispose=function(){return ee("dispose")},n}();function ee(n){throw new Error("'"+n+"' not yet implemented or not found in the registry. Did you forget to import the kernel?")}function wo(n,e,t,r,s,o,a){a===void 0&&(a="channelsLast");var i,u=hl(e),c=u[0],l=u[1];if(a==="channelsLast")i=[c,l,n[3],n[3]];else{if(a!=="channelsFirst")throw new Error("Unknown dataFormat "+a);i=[c,l,n[1],n[1]]}return Co(n,i,t,r,s,o,!1,a)}function cl(n,e,t,r,s,o,a){a===void 0&&(a="NDHWC");var i,u,c=Mp(e),l=c[0],h=c[1],d=c[2];if(a==="NDHWC")u="channelsLast",i=[l,h,d,n[4],n[4]];else{if(a!=="NCDHW")throw new Error("Unknown dataFormat "+a);u="channelsFirst",i=[l,h,d,n[1],n[1]]}return ll(n,i,t,r,s,!1,u,o)}function Co(n,e,t,r,s,o,a,i){a===void 0&&(a=!1),i===void 0&&(i="channelsLast");var u=[-1,-1,-1,-1],c=u[0],l=u[1],h=u[2],d=u[3];if(i==="channelsLast")c=n[0],l=n[1],h=n[2],d=n[3];else{if(i!=="channelsFirst")throw new Error("Unknown dataFormat "+i);c=n[0],d=n[1],l=n[2],h=n[3]}var p,f=e[0],m=e[1],g=e[3],x=hl(t),y=x[0],b=x[1],v=hl(r),w=v[0],C=v[1],T=ma(f,w),S=ma(m,C),k=function(O,D,M,P,L,z,W,j){var Y,J,ae;if(typeof O=="number"){Y={top:O,bottom:O,left:O,right:O,type:O===0?"VALID":"NUMBER"};var oe=function(me,Ne,Te,Me,Fe){Me==null&&(Me=i0(me,Ne,Te));var $e=me[0],Je=me[1],je=Ai(($e-Ne+2*Me)/Te+1,Fe);_(Ct(je),function(){return"The output # of rows ("+je+") must be an integer. Change the stride and/or zero pad parameters"});var wt=Ai((Je-Ne+2*Me)/Te+1,Fe);return _(Ct(wt),function(){return"The output # of columns ("+wt+") must be an integer. Change the stride and/or zero pad parameters"}),[je,wt]}([D,M],z,P,O,j);J=oe[0],ae=oe[1]}else if(O==="same"){J=Math.ceil(D/P),ae=Math.ceil(M/L);var ue=Math.max(0,(J-1)*P+z-D),he=Math.max(0,(ae-1)*L+W-M),pe=Math.floor(ue/2),de=ue-pe,Ce=Math.floor(he/2);Y={top:pe,bottom:de,left:Ce,right:he-Ce,type:"SAME"}}else{if(O!=="valid")throw Error("Unknown padding parameter: "+O);Y={top:0,bottom:0,left:0,right:0,type:"VALID"},J=Math.ceil((D-z+1)/P),ae=Math.ceil((M-W+1)/L)}return{padInfo:Y,outHeight:J,outWidth:ae}}(s,l,h,y,b,T,S,o),N=k.padInfo,I=k.outHeight,E=k.outWidth,F=a?g*d:g;return i==="channelsFirst"?p=[c,F,I,E]:i==="channelsLast"&&(p=[c,I,E,F]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:h,inChannels:d,outHeight:I,outWidth:E,outChannels:F,padInfo:N,strideHeight:y,strideWidth:b,filterHeight:f,filterWidth:m,effectiveFilterHeight:T,effectiveFilterWidth:S,dilationHeight:w,dilationWidth:C,inShape:n,outShape:p,filterShape:e}}function ll(n,e,t,r,s,o,a,i){o===void 0&&(o=!1),a===void 0&&(a="channelsLast");var u=[-1,-1,-1,-1,-1],c=u[0],l=u[1],h=u[2],d=u[3],p=u[4];if(a==="channelsLast")c=n[0],l=n[1],h=n[2],d=n[3],p=n[4];else{if(a!=="channelsFirst")throw new Error("Unknown dataFormat "+a);c=n[0],p=n[1],l=n[2],h=n[3],d=n[4]}var f,m=e[0],g=e[1],x=e[2],y=e[4],b=Mp(t),v=b[0],w=b[1],C=b[2],T=Mp(r),S=T[0],k=T[1],N=T[2],I=ma(m,S),E=ma(g,k),F=ma(x,N),O=function(W,j,Y,J,ae,oe,ue,he,pe,de,Ce){var me,Ne,Te,Me;if(typeof W=="number"){me={top:W,bottom:W,left:W,right:W,front:W,back:W,type:W===0?"VALID":"NUMBER"};var Fe=function(sn,Kt,gr,Fn,Xt,Es){Xt==null&&(Xt=i0(sn,Kt,Fn));var Ac=sn[0],$c=sn[1],Fy=sn[2],lo=Ai((Ac-Kt+2*Xt)/Fn+1,Es);_(Ct(lo),function(){return"The output # of depths ("+lo+") must be an integer. Change the stride and/or zero pad parameters"});var Dc=Ai(($c-Kt+2*Xt)/Fn+1,Es);_(Ct(Dc),function(){return"The output # of rows ("+Dc+") must be an integer. Change the stride and/or zero pad parameters"});var Fc=Ai((Fy-Kt+2*Xt)/Fn+1,Es);return _(Ct(Fc),function(){return"The output # of columns ("+Fc+") must be an integer. Change the stride and/or zero pad parameters"}),[lo,Dc,Fc,gr]}([j,Y,J,1],he,1,ae,W,Ce);Ne=Fe[0],Te=Fe[1],Me=Fe[2]}else if(W==="same"){Ne=Math.ceil(j/ae),Te=Math.ceil(Y/oe),Me=Math.ceil(J/ue);var $e=(Ne-1)*ae+he-j,Je=(Te-1)*oe+pe-Y,je=(Me-1)*ue+de-J,wt=Math.floor($e/2),mt=$e-wt,rn=Math.floor(Je/2),At=Je-rn,pn=Math.floor(je/2);me={top:rn,bottom:At,left:pn,right:je-pn,front:wt,back:mt,type:"SAME"}}else{if(W!=="valid")throw Error("Unknown padding parameter: "+W);me={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},Ne=Math.ceil((j-he+1)/ae),Te=Math.ceil((Y-pe+1)/oe),Me=Math.ceil((J-de+1)/ue)}return{padInfo:me,outDepth:Ne,outHeight:Te,outWidth:Me}}(s,l,h,d,v,w,C,I,E,F,i),D=O.padInfo,M=O.outDepth,P=O.outHeight,L=O.outWidth,z=o?y*p:y;return a==="channelsFirst"?f=[c,z,M,P,L]:a==="channelsLast"&&(f=[c,M,P,L,z]),{batchSize:c,dataFormat:a,inDepth:l,inHeight:h,inWidth:d,inChannels:p,outDepth:M,outHeight:P,outWidth:L,outChannels:z,padInfo:D,strideDepth:v,strideHeight:w,strideWidth:C,filterDepth:m,filterHeight:g,filterWidth:x,effectiveFilterDepth:I,effectiveFilterHeight:E,effectiveFilterWidth:F,dilationDepth:S,dilationHeight:k,dilationWidth:N,inShape:n,outShape:f,filterShape:e}}function i0(n,e,t,r){r===void 0&&(r=1);var s=ma(e,r);return Math.floor((n[0]*(t-1)-t+s)/2)}function hl(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Mp(n){return typeof n=="number"?[n,n,n]:n}function ma(n,e){return e<=1?n:n+(n-1)*(e-1)}function Ai(n,e){if(!e)return n;switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error("Unknown roundingMode "+e)}}function ga(n){var e=hl(n),t=e[0],r=e[1],s=e[2];return t===1&&r===1&&s===1}function kn(n,e){return ga(n)||ga(e)}function Lp(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error("Unknown dataFormat "+n)}function u0(n,e,t){if(e==="complex64"){if(n.dtype==="complex64")return n.clone();var r=bt(n.shape),s=n.toFloat(),o=t.complex(s,r);return r.dispose(),s.dispose(),o}if(!jy(n.dtype,e))return H.makeTensorFromDataId(n.dataId,n.shape,e);if(n.dtype==="complex64"){var a=t.real(n);return o=a.cast(e),a.dispose(),o}if(e==="int32")return t.int(n);if(e==="bool"){var i=ye(0,n.dtype);return o=t.notEqual(n,i),i.dispose(),o}throw new Error("Error in Cast: failed to cast "+n.dtype+" to "+e)}function Pp(n,e){return H.makeTensorFromDataId(n.dataId,e,n.dtype)}function c0(n,e,t){var r=(e-n)/(t-1),s=pa(t,"float32");s[0]=n;for(var o=1;o<s.length;o++)s[o]=s[o-1]+r;return is(s,"float32")}function Bp(n,e){if(n.length!==e.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+n.length+", imag: "+e.length+".");for(var t=new Float32Array(2*n.length),r=0;r<t.length;r+=2)t[r]=n[r/2],t[r+1]=e[r/2];return t}function l0(n,e){return{real:n[2*e],imag:n[2*e+1]}}function IR(n,e,t,r){n[2*r]=e,n[2*r+1]=t}function kR(n,e,t){var r=(t?2:-2)*Math.PI*(n/e);return{real:Math.cos(r),imag:Math.sin(r)}}function SR(n,e,t){var r=function(o,a,i){return function(u,c,l){for(var h=0,d=u.length,p=0,f=!1;h<d;){var m=l(c,u[p=h+(d-h>>>1)]);m>0?h=p+1:(d=p,f=!m)}return f?h:-h-1}(o,a,i||NR)}(n,e,t),s=r<0?-(r+1):r;n.splice(s,0,e)}function NR(n,e){return n>e?1:n<e?-1:0}function zp(n,e,t,r,s){return h0(n,e,t,r,s,0).selectedIndices}function Vp(n,e,t,r,s,o){var a=h0(n,e,t,r,s,o);return a.numValidOutputs.dispose(),{selectedIndices:a.selectedIndices,selectedScores:a.selectedScores}}function h0(n,e,t,r,s,o,a,i){i===void 0&&(i=!1);for(var u=Array.from(e).map(function(v,w){return{score:v,boxIndex:w,suppressBeginIndex:0}}).filter(function(v){return v.score>s}).sort(d0),c=o>0?-.5/o:0,l=[],h=[];l.length<t&&u.length>0;){var d=u.pop(),p=d.score,f=d.boxIndex,m=d.suppressBeginIndex;if(p<s)break;for(var g=!1,x=l.length-1;x>=m;--x){var y=TR(n,f,l[x]);if(y>=r){g=!0;break}if(d.score=d.score*ER(r,c,y),d.score<=s)break}d.suppressBeginIndex=l.length,g||(d.score===p?(l.push(f),h.push(d.score)):d.score>s&&SR(u,d,d0))}var b=l.length;return i&&(l.fill(0,b),h.fill(0,b)),{selectedIndices:is(l,"int32"),selectedScores:is(h,"float32"),numValidOutputs:ye(b,"int32")}}function TR(n,e,t){var r=n.subarray(4*e,4*e+4),s=n.subarray(4*t,4*t+4),o=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(s[0],s[2]),l=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(i-o)*(u-a),f=(h-c)*(d-l);if(p<=0||f<=0)return 0;var m=Math.max(o,c),g=Math.max(a,l),x=Math.min(i,h),y=Math.min(u,d),b=Math.max(x-m,0)*Math.max(y-g,0);return b/(p+f-b)}function ER(n,e,t){var r=Math.exp(e*t*t);return t<=n?r:0}function d0(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}function p0(n,e,t){var r=new Array(n.rank).fill(0),s=n.shape.slice();return e.map(function(o){s[t]=o;var a=n.slice(r,s);return r[t]+=o,a})}function f0(n,e){for(var t=new Array(n.rank),r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];var s=Le(t,n.dtype);for(r=0;r<s.values.length;++r){for(var o=s.indexToLoc(r),a=new Array(n.rank),i=0;i<a.length;i++)a[i]=o[i]%n.shape[i];var u=n.locToIndex(a);s.values[r]=n.values[u]}return s.toTensor()}function m0(n,e,t,r,s){for(var o=e[e.length-1],a=[n.length/o,o],i=a[0],u=a[1],c=go(t,i*r),l=go("int32",i*r),h=0;h<i;h++){for(var d=h*u,p=n.subarray(d,d+u),f=[],m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort(function(v,w){return w.value-v.value});var g=h*r,x=c.subarray(g,g+r),y=l.subarray(g,g+r);for(m=0;m<r;m++)x[m]=f[m].value,y[m]=f[m].index}var b=e.slice();return b[b.length-1]=r,[Qt(c,b,t),Qt(l,b,"int32")]}function Wp(n,e){for(var t=[],r=0;r<e.length;r++)e[r]&&t.push(r);var s=Le(n,"int32"),o=Le([t.length,n.length],"int32");for(r=0;r<t.length;r++){var a=s.indexToLoc(t[r]),i=r*n.length;o.values.set(a,i)}return o.toTensor()}var RR=function(n,e){this.outputShape=[],this.outputShape=n,this.variableNames=e.map(function(s,o){return"T"+o});var t=[];this.variableNames.forEach(function(s){t.push("float v"+s+" = get"+s+"AtOutCoords();")});var r=this.variableNames.map(function(s){return"v"+s}).join(" + ");this.userCode=`
      void main() {
        `+t.join(`
        `)+`

        float result = `+r+`;
        setOutput(result);
      }
    `},AR=function(n,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.variableNames=e.map(function(s,o){return"T"+o});var t=[];this.variableNames.forEach(function(s){t.push("vec4 v"+s+" = get"+s+"AtOutCoords();")});var r=this.variableNames.map(function(s){return"v"+s}).join(" + ");this.userCode=`
      void main() {
        `+t.join(`
        `)+`

        vec4 result = `+r+`;
        setOutput(result);
      }
    `},$R=function(n,e,t){this.variableNames=["A"];var r=n.windowSize,s=n.batchSize,o=n.inSize,a=Math.ceil(o/r);t||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];var i=e==="max"?">":"<",u=t?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * `+r+`;

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < `+r+`; i++) {
          int inIdx = `+u+`;
          float candidate = getA(batch, inIdx);
          if (candidate `+i+` bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `};function g0(n,e){return["x","y","z","w","u","v"].slice(0,e).map(function(t){return n+"."+t})}function Ln(n,e){return e===1?[n]:g0(n,e)}function mn(){var n,e,t,r,s,o,a,i,u,c;return se().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",r="in",s="texture",o="outputColor",a="out vec4 outputColor;",i=`
      bool isnan_custom(float val) {
        return (val > 0.0 || val < 0.0) ? false : val != 0.0;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",r="varying",s="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:r,texture2D:s,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:c}}function Io(n,e,t){t===void 0&&(t="index");var r=On(e);return r.map(function(s,o){return"int "+n[o]+" = "+t+" / "+s+"; "+(o===r.length-1?"int "+n[o+1]+" = "+t+" - "+n[o]+" * "+s:"index -= "+n[o]+" * "+s)+";"}).join("")}function Up(n){var e=On(n).map(function(t){return t.toString()});return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * `+e[0]+" + coords.y * "+e[1]+` + coords.z;
  }
`}var x0=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;function DR(n,e,t,r){var s=[];n.forEach(function(p){var f=ve(p.shapeInfo.logicalShape);p.shapeInfo.isUniform?s.push("uniform float "+p.name+(f>1?"["+f+"]":"")+";"):(s.push("uniform sampler2D "+p.name+";"),s.push("uniform int offset"+p.name+";"))});var o,a,i=s.join(`
`),u=n.map(function(p){return function(f,m,g){g===void 0&&(g=!1);var x="";x+=g?y0(f):xa(f);var y=f.shapeInfo.logicalShape,b=m.logicalShape;return y.length<=b.length&&(x+=g?function(v,w){var C,T=v.name,S=T.charAt(0).toUpperCase()+T.slice(1),k="get"+S+"AtOutCoords",N=v.shapeInfo.logicalShape.length,I=w.logicalShape.length,E=Fs(v.shapeInfo.logicalShape,w.logicalShape),F=ht(I),O=I-N,D=["x","y","z","w","u","v"];C=N===0?"":I<2&&E.length>=1?"coords = 0;":E.map(function(Y){return"coords."+D[Y+O]+" = 0;"}).join(`
`);var M="";M=I<2&&N>0?"coords":v.shapeInfo.logicalShape.map(function(Y,J){return"coords."+D[J+O]}).join(", ");var P="return outputValue;",L=ve(v.shapeInfo.logicalShape)===1,z=ve(w.logicalShape)===1;if(N!==1||L||z){if(L&&!z)P=I===1?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `;else if(E.length){var W=N-2,j=N-1;E.indexOf(W)>-1&&E.indexOf(j)>-1?P="return vec4(outputValue.x);":E.indexOf(W)>-1?P="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":E.indexOf(j)>-1&&(P="return vec4(outputValue.xx, outputValue.zz);")}}else P=`
      return vec4(outputValue.xy, outputValue.xy);
    `;return`
    vec4 `+k+`() {
      `+F+` coords = getOutputCoords();
      `+C+`
      vec4 outputValue = get`+S+"("+M+`);
      `+P+`
    }
  `}(f,m):function(v,w){var C=v.name,T=C.charAt(0).toUpperCase()+C.slice(1),S="get"+T+"AtOutCoords",k=w.texShape,N=v.shapeInfo.texShape,I=v.shapeInfo.logicalShape.length,E=w.logicalShape.length;if(!v.shapeInfo.isUniform&&I===E&&v.shapeInfo.flatOffset==null&&Wt(N,k))return`
      float `+S+`() {
        return sampleTexture(`+C+`, resultUV);
      }
    `;var F,O=ht(E),D=Fs(v.shapeInfo.logicalShape,w.logicalShape),M=E-I,P=["x","y","z","w","u","v"];F=I===0?"":E<2&&D.length>=1?"coords = 0;":D.map(function(z){return"coords."+P[z+M]+" = 0;"}).join(`
`);var L="";return L=E<2&&I>0?"coords":v.shapeInfo.logicalShape.map(function(z,W){return"coords."+P[W+M]}).join(", "),`
    float `+S+`() {
      `+O+` coords = getOutputCoords();
      `+F+`
      return get`+T+"("+L+`);
    }
  `}(f,m)),x}(p,e,r)}).join(`
`),c=e.texShape,l=mn(),h=function(p){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return `+p.texture2D+`(textureSampler, uv).r;
    }
  `}(l),d=function(p){return p.version+`
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    `+p.varyingFs+` vec2 resultUV;
    `+p.defineOutput+`
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    `+p.defineSpecialNaN+`
    `+p.defineSpecialInf+`
    `+p.defineRound+`

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    `+FR+`
    `+OR+`
    `+_R+`
  `}(l);return e.isPacked?(o=function(p,f){switch(p.length){case 0:return`
    int getOutputCoords() {
      return 0;
    }
  `;case 1:return function(v,w){var C=[Math.ceil(w[0]/2),Math.ceil(w[1]/2)];return C[0]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * `+C[1]+`.0);
      }
    `:C[1]===1?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * `+C[0]+`.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+C[0]+", "+C[1]+`));
      return 2 * (resTexRC.x * `+C[1]+` + resTexRC.y);
    }
  `}(0,f);case 2:return function(v,w){var C=[Math.ceil(w[0]/2),Math.ceil(w[1]/2)];if(Wt(v,w))return`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(`+C[0]+", "+C[1]+`));
      }
    `;var T=Math.ceil(v[1]/2);return`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+C[0]+", "+C[1]+`));

      int index = resTexRC.x * `+C[1]+` + resTexRC.y;
      int r = 2 * (index / `+T+`);
      int c = imod(index, `+T+`) * 2;

      return ivec2(r, c);
    }
  `}(p,f);case 3:return m=p,g=f,x=[Math.ceil(g[0]/2),Math.ceil(g[1]/2)],y=Math.ceil(m[2]/2),b=y*Math.ceil(m[1]/2),`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+x[0]+", "+x[1]+`));
      int index = resTexRC.x * `+x[1]+` + resTexRC.y;

      int b = index / `+b+`;
      index -= b * `+b+`;

      int r = 2 * (index / `+y+`);
      int c = imod(index, `+y+`) * 2;

      return ivec3(b, r, c);
    }
  `;default:return function(v,w){for(var C=[Math.ceil(w[0]/2),Math.ceil(w[1]/2)],T=Math.ceil(v[v.length-1]/2),S=T*Math.ceil(v[v.length-2]/2),k=S,N="",I="b, r, c",E=2;E<v.length-1;E++)k*=v[v.length-E-1],N=`
      int b`+E+" = index / "+k+`;
      index -= b`+E+" * "+k+`;
    `+N,I="b"+E+", "+I;return`
    ivec`+v.length+` getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+C[0]+", "+C[1]+`));
      int index = resTexRC.x * `+C[1]+` + resTexRC.y;

      `+N+`

      int b = index / `+S+`;
      index -= b * `+S+`;

      int r = 2 * (index / `+T+`);
      int c = imod(index, `+T+`) * 2;

      return ivec`+v.length+"("+I+`);
    }
  `}(p,f)}var m,g,x,y,b}(e.logicalShape,c),a=function(p){return`
    void setOutput(vec4 val) {
      `+p.output+` = val;
    }
  `}(l)):(o=function(p,f){switch(p.length){case 0:return`
    int getOutputCoords() {
      return 0;
    }
  `;case 1:return function(x,y){return y[0]===1?`
      int getOutputCoords() {
        return int(resultUV.x * `+y[1]+`.0);
      }
    `:y[1]===1?`
      int getOutputCoords() {
        return int(resultUV.y * `+y[0]+`.0);
      }
    `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+y[0]+", "+y[1]+`));
      return resTexRC.x * `+y[1]+` + resTexRC.y;
    }
  `}(0,f);case 2:return function(x,y){return Wt(x,y)?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(`+y[0]+", "+y[1]+`));
      }
    `:x[1]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(`+y[0]+", "+y[1]+`));
        int index = resTexRC.x * `+y[1]+` + resTexRC.y;
        return ivec2(index, 0);
      }
    `:x[0]===1?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(`+y[0]+", "+y[1]+`));
        int index = resTexRC.x * `+y[1]+` + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+y[0]+", "+y[1]+`));
      int index = resTexRC.x * `+y[1]+` + resTexRC.y;
      int r = index / `+x[1]+`;
      int c = index - r * `+x[1]+`;
      return ivec2(r, c);
    }
  `}(p,f);case 3:return m=f,g=Io(["r","c","d"],p),`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(`+m[0]+", "+m[1]+`));
      int index = resTexRC.x * `+m[1]+` + resTexRC.y;
      `+g+`
      return ivec3(r, c, d);
    }
  `;case 4:return function(x,y){var b=Io(["r","c","d","d2"],x);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(`+y[0]+", "+y[1]+`));
      int index = resTexRC.x * `+y[1]+` + resTexRC.y;
      `+b+`
      return ivec4(r, c, d, d2);
    }
  `}(p,f);case 5:return function(x,y){var b=Io(["r","c","d","d2","d3"],x);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(`+y[0]+`,
                             `+y[1]+`));

      int index = resTexRC.x * `+y[1]+` + resTexRC.y;

      `+b+`

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}(p,f);case 6:return function(x,y){var b=Io(["r","c","d","d2","d3","d4"],x);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(`+y[0]+", "+y[1]+`));
      int index = resTexRC.x * `+y[1]+` + resTexRC.y;

      `+b+`

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}(p,f);default:throw new Error(p.length+"-D output sampling is not yet supported")}var m,g}(e.logicalShape,c),a=function(p){return`
    void setOutput(float val) {
      `+p.output+` = vec4(val, 0, 0, 0);
    }
  `}(l)),r&&(d+=MR),[d,h,a,i,o,u,t].join(`
`)}function xa(n){var e=n.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){var r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1);if(t.shapeInfo.isUniform)return"float "+s+"() {return "+r+";}";var o=t.shapeInfo.texShape,a=o[0],i=o[1];if(a===1&&i===1)return`
      float `+s+`() {
        return sampleTexture(`+r+`, halfCR);
      }
    `;var u=t.shapeInfo.texShape,c=u[0],l=u[1],h=ko(r);return`
    float `+s+`() {
      vec2 uv = uvFromFlat(`+c+", "+l+", "+h+`);
      return sampleTexture(`+r+`, uv);
    }
  `}(n);case 1:return function(t){var r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1);if(t.shapeInfo.isUniform)return`
      float `+s+`(int index) {
        `+ya(t)+`
      }
    `;var o=t.shapeInfo.texShape,a=o[0],i=o[1];if(i===1&&a===1)return`
      float `+s+`(int index) {
        return sampleTexture(`+r+`, halfCR);
      }
    `;var u=ko(r);return i===1?`
      float `+s+`(int index) {
        vec2 uv = vec2(0.5, (float(index + `+u+") + 0.5) / "+a+`.0);
        return sampleTexture(`+r+`, uv);
      }
    `:a===1?`
      float `+s+`(int index) {
        vec2 uv = vec2((float(index + `+u+") + 0.5) / "+i+`.0, 0.5);
        return sampleTexture(`+r+`, uv);
      }
    `:`
    float `+s+`(int index) {
      vec2 uv = uvFromFlat(`+a+", "+i+", index + "+u+`);
      return sampleTexture(`+r+`, uv);
    }
  `}(n);case 2:return function(t){var r=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),a=t.shapeInfo.texShape;if(a!=null&&Wt(r,a)){var i=a[0],u=a[1];return`
    float `+o+`(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(`+u+".0, "+i+`.0);
      return sampleTexture(`+s+`, uv);
    }
  `}var c=Rs(r),l=c.newShape,h=c.keptDims,d=l;if(d.length<r.length){var p=va(t,d);return`
      `+xa(p)+`
      float `+o+`(int row, int col) {
        return `+o+"("+ba(["row","col"],h)+`);
      }
    `}if(t.shapeInfo.isUniform)return`
      float `+o+`(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(`+r[1]+`, 1)));
        `+ya(t)+`
      }
    `;var f=a[0],m=a[1],g=ko(s);return m===1?`
    float `+o+`(int row, int col) {
      float index = dot(vec3(row, col, `+g+"), vec3("+r[1]+`, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / `+f+`.0);
      return sampleTexture(`+s+`, uv);
    }
  `:f===1?`
    float `+o+`(int row, int col) {
      float index = dot(vec3(row, col, `+g+"), vec3("+r[1]+`, 1, 1));
      vec2 uv = vec2((index + 0.5) / `+m+`.0, 0.5);
      return sampleTexture(`+s+`, uv);
    }
  `:`
  float `+o+`(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * `+r[1]+" + col + "+g+`;
    vec2 uv = uvFromFlat(`+f+", "+m+`, index);
    return sampleTexture(`+s+`, uv);
  }
`}(n);case 3:return function(t){var r=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),a=r[1]*r[2],i=r[2],u=Rs(r),c=u.newShape,l=u.keptDims,h=c;if(h.length<r.length){var d=va(t,h);return`
        `+xa(d)+`
        float `+o+`(int row, int col, int depth) {
          return `+o+"("+ba(["row","col","depth"],l)+`);
        }
      `}if(t.shapeInfo.isUniform)return`
      float `+o+`(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(`+a+", "+i+`, 1)));
        `+ya(t)+`
      }
    `;var p=t.shapeInfo.texShape,f=p[0],m=p[1],g=t.shapeInfo.flatOffset;if(m===a&&g==null)return`
        float `+o+`(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(`+i+`, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(`+m+".0, "+f+`.0);
          return sampleTexture(`+s+`, uv);
        }
      `;if(m===i&&g==null)return`
    float `+o+`(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(`+r[1]+`, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(`+m+".0, "+f+`.0);
      return sampleTexture(`+s+`, uv);
    }
  `;var x=ko(s);return`
      float `+o+`(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * `+a+" + col * "+i+" + depth + "+x+`;
        vec2 uv = uvFromFlat(`+f+", "+m+`, index);
        return sampleTexture(`+s+`, uv);
      }
  `}(n);case 4:return function(t){var r=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),a=r[3],i=r[2]*a,u=r[1]*i,c=Rs(r),l=c.newShape,h=c.keptDims;if(l.length<r.length){var d=va(t,l);return`
      `+xa(d)+`
      float `+o+`(int row, int col, int depth, int depth2) {
        return `+o+"("+ba(["row","col","depth","depth2"],h)+`);
      }
    `}if(t.shapeInfo.isUniform)return`
      float `+o+`(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(`+u+", "+i+", "+a+`, 1)));
        `+ya(t)+`
      }
    `;var p=t.shapeInfo.flatOffset,f=t.shapeInfo.texShape,m=f[0],g=f[1];if(g===u&&p==null)return`
      float `+o+`(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(`+i+", "+a+`, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(`+g+".0, "+m+`.0);
        return sampleTexture(`+s+`, uv);
      }
    `;if(g===a&&p==null)return`
      float `+o+`(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(`+r[1]*r[2]+", "+r[2]+`, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(`+g+".0, "+m+`.0);
        return sampleTexture(`+s+`, uv);
      }
    `;var x=ko(s);return`
    float `+o+`(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * `+u+" + col * "+i+` +
          depth * `+a+` + depth2;
      vec2 uv = uvFromFlat(`+m+", "+g+", index + "+x+`);
      return sampleTexture(`+s+`, uv);
    }
  `}(n);case 5:return function(t){var r=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),a=r[4],i=r[3]*a,u=r[2]*i,c=r[1]*u,l=Rs(r),h=l.newShape,d=l.keptDims;if(h.length<r.length){var p=va(t,h);return`
      `+xa(p)+`
      float `+o+`(int row, int col, int depth, int depth2, int depth3) {
        return `+o+"("+ba(["row","col","depth","depth2","depth3"],d)+`);
      }
    `}if(t.shapeInfo.isUniform)return`
      float `+o+`(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(`+c+", "+u+", "+i+", "+a+`)) +
          depth3;
        `+ya(t)+`
      }
    `;var f=t.shapeInfo.flatOffset,m=t.shapeInfo.texShape,g=m[0],x=m[1];if(x===c&&f==null)return`
      float `+o+`(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(`+u+", "+i+", "+a+`, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(`+x+".0, "+g+`.0);
        return sampleTexture(`+s+`, uv);
      }
    `;if(x===a&&f==null)return`
      float `+o+`(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(`+r[1]*r[2]*r[3]+`,
               `+r[2]*r[3]+", "+r[3]+`, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(`+x+".0, "+g+`.0);
        return sampleTexture(`+s+`, uv);
      }
    `;var y=ko(s);return`
    float `+o+`(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * `+c+" + col * "+u+" + depth * "+i+` +
          depth2 * `+a+" + depth3 + "+y+`;
      vec2 uv = uvFromFlat(`+g+", "+x+`, index);
      return sampleTexture(`+s+`, uv);
    }
  `}(n);case 6:return function(t){var r=t.shapeInfo.logicalShape,s=t.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),a=Rs(r),i=a.newShape,u=a.keptDims;if(i.length<r.length){var c=va(t,i);return`
      `+xa(c)+`
      float `+o+`(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return `+o+"("+ba(["row","col","depth","depth2","depth3","depth4"],u)+`);
      }
    `}var l=r[5],h=r[4]*l,d=r[3]*h,p=r[2]*d,f=r[1]*p;if(t.shapeInfo.isUniform)return`
      float `+o+`(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(`+f+", "+p+", "+d+", "+h+`)) +
          dot(
            vec2(depth3, depth4),
            vec2(`+l+`, 1)));
        `+ya(t)+`
      }
    `;var m=t.shapeInfo.flatOffset,g=t.shapeInfo.texShape,x=g[0],y=g[1];if(y===f&&m==null)return`
      float `+o+`(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(`+p+", "+d+", "+h+", "+l+`)) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(`+y+".0, "+x+`.0);
        return sampleTexture(`+s+`, uv);
      }
    `;if(y===l&&m==null)return`
      float `+o+`(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(`+r[1]*r[2]*r[3]*r[4]+`,
               `+r[2]*r[3]*r[4]+`,
               `+r[3]*r[4]+`,
               `+r[4]+`)) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(`+y+".0, "+x+`.0);
        return sampleTexture(`+s+`, uv);
      }
    `;var b=ko(s);return`
    float `+o+`(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * `+f+" + col * "+p+" + depth * "+d+` +
          depth2 * `+h+" + depth3 * "+l+" + depth4 + "+b+`;
      vec2 uv = uvFromFlat(`+x+", "+y+`, index);
      return sampleTexture(`+s+`, uv);
    }
  `}(n);default:throw new Error(e.length+"-D input sampling is not yet supported")}}function y0(n){var e,t,r;switch(n.shapeInfo.logicalShape.length){case 0:return e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),r=mn(),`
    vec4 `+t+`() {
      return `+r.texture2D+"("+e+`, halfCR);
    }
  `;case 1:return function(s){var o=s.name,a="get"+o.charAt(0).toUpperCase()+o.slice(1),i=s.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=mn();return`
    vec4 `+a+`(int index) {
      vec2 uv = packedUVfrom1D(
        `+u[0]+", "+u[1]+`, index);
      return `+c.texture2D+"("+o+`, uv);
    }
  `}(n);case 2:return function(s){var o=s.shapeInfo.logicalShape,a=s.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),u=s.shapeInfo.texShape,c=u[0],l=u[1],h=mn();if(u!=null&&Wt(o,u))return`
      vec4 `+i+`(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(`+l+".0, "+c+`.0);

        return `+h.texture2D+"("+a+`, uv);
      }
    `;var d=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)],p=Math.ceil(o[1]/2);return`
    vec4 `+i+`(int row, int col) {
      vec2 uv = packedUVfrom2D(`+p+", "+d[0]+", "+d[1]+`, row, col);
      return `+h.texture2D+"("+a+`, uv);
    }
  `}(n);case 3:return function(s){var o=s.shapeInfo.logicalShape,a=s.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),u=s.shapeInfo.texShape,c=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];if(o[0]===1){var l=o.slice(1),h=va(s,l);return`
        `+y0(h)+`
        vec4 `+i+`(int b, int row, int col) {
          return `+i+"("+ba(["b","row","col"],[1,2])+`);
        }
      `}var d=c[0],p=c[1],f=Math.ceil(o[2]/2),m=f*Math.ceil(o[1]/2),g=mn();return`
    vec4 `+i+`(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        `+d+", "+p+", "+m+", "+f+`, b, row, col);
      return `+g.texture2D+"("+a+`, uv);
    }
  `}(n);default:return function(s){for(var o=s.shapeInfo.logicalShape,a=o.length,i=s.name,u="get"+i.charAt(0).toUpperCase()+i.slice(1),c=s.shapeInfo.texShape,l=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)],h=l[0],d=l[1],p=Math.ceil(o[a-1]/2),f=p*Math.ceil(o[a-2]/2),m="int b, int row, int col",g="b * "+f+" + (row / 2) * "+p+" + (col / 2)",x=2;x<a-1;x++)m="int b"+x+", "+m,f*=o[a-x-1],g="b"+x+" * "+f+" + "+g;var y=mn();return`
    vec4 `+u+"("+m+`) {
      int index = `+g+`;
      int texR = index / `+d+`;
      int texC = index - texR * `+d+`;
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(`+d+", "+h+`);
      return `+y.texture2D+"("+i+`, uv);
    }
  `}(n)}}var FR=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,OR=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,_R=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,MR=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function ko(n){return"offset"+n}function ya(n){var e=n.name,t=ve(n.shapeInfo.logicalShape);return t<2?"return "+e+";":`
    for (int i = 0; i < `+t+`; i++) {
      if (i == index) {
        return `+e+`[i];
      }
    }
  `}function ht(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error("GPU for rank "+n+" is not yet supported")}function va(n,e){var t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function ba(n,e){return e.map(function(t){return n[t]}).join(", ")}var LR=function(n,e,t,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,_(n.length>2,function(){return"Packed arg"+(t.charAt(0).toUpperCase()+t.slice(1))+" supports only inputs with rank above 2."});var s=n[n.length-1],o=Math.ceil(s/e);this.outputShape=n.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");var a,i,u=this.outputShape,c=u.length,l=ht(c),h=Ln("coords",c);if(o===1){var d=ht(i=c+1);a=`
        `+d+" sourceLocR = "+d+"("+h.join()+`, 0);
        ++`+h[c-1]+`;
        `+d+" sourceLocG = "+d+"("+h.join()+`, 0);
        ++`+h[c-2]+`;
        `+d+" sourceLocA = "+d+"("+h.join()+`, 0);
        --`+h[c-1]+`;
        `+d+" sourceLocB = "+d+"("+h.join()+`, 0);
        --`+h[c-2]+";"}else i=c,a=`
        `+l+` sourceLocR = coords;
        ++`+h[c-1]+`;
        `+l+` sourceLocG = coords;
        ++`+h[c-2]+`;
        `+l+` sourceLocA = coords;
        --`+h[c-1]+`;
        `+l+` sourceLocB = coords;
        --`+h[c-2]+";";var p=["x","y","z","w","u","v"].slice(0,i),f="."+p[i-1],m=p.map(function(S){return"int "+S}),g=Ln("sourceLocR",i-1).concat("inIdx.r"),x=Ln("sourceLocG",i-1).concat("inIdx.g"),y=Ln("sourceLocB",i-1).concat("inIdx.b"),b=Ln("sourceLocA",i-1).concat("inIdx.a"),v=t==="max"?"greaterThan":"lessThan",w=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(`+g.join()+`),
                             getBestIndicesAChannel(`+x.join()+`),
                             getBestIndicesAChannel(`+y.join()+`),
                             getBestIndicesAChannel(`+b.join()+")));",C=`vec4(
            getAChannel(`+g.join()+`),
            hasNextCol ? getAChannel(`+x.join()+`) : 0.,
            hasNextRow ? getAChannel(`+y.join()+`) : 0.,
            hasNextRow && hasNextCol ? getAChannel(`+b.join()+") : 0.)",T=r?"":`
      float getBestIndicesAChannel(`+m.join()+`) {
        return getChannel(getBestIndicesA(`+p.join()+`),
                                          vec2(`+p.slice(-2).join()+`));
      }`;this.userCode=`
      float getAChannel(`+m.join()+`) {
        return getChannel(getA(`+p.join()+`),
                               vec2(`+p.slice(-2).join()+`));
      }
      `+T+`
      void main() {
        `+l+` coords = getOutputCoords();
        bool hasNextCol = `+h[c-1]+" < "+(u[c-1]-1)+`;
        bool hasNextRow = `+h[c-2]+" < "+(u[c-2]-1)+`;
        `+a+`
        ivec4 srcIdx = ivec4(sourceLocR`+f+", sourceLocG"+f+`,
          sourceLocB`+f+", sourceLocA"+f+") * "+e+`;
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = `+C+`;

        for (int i = 0; i < `+e+`; i++) {
          inIdx = srcIdx;
          `+w+`
          vec4 candidate = `+C+`;
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(`+v+`(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `},PR=function(n){this.variableNames=["dy"],this.outputShape=n.inShape;var e=n.filterHeight,t=n.filterWidth,r=n.strideHeight,s=n.strideWidth,o=n.dilationHeight,a=n.dilationWidth,i=n.effectiveFilterHeight,u=n.effectiveFilterWidth,c=i-1-n.padInfo.top,l=u-1-n.padInfo.left,h=1/(e*t);this.userCode=`
      const ivec2 pads = ivec2(`+c+", "+l+`);
      const float avgMultiplier = float(`+h+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < `+i+`;
            wR += `+o+`) {
          float dyR = float(dyRCorner + wR) / `+r+`.0;

          if (dyR < 0.0 || dyR >= `+n.outHeight+`.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < `+u+`;
            wC+= `+a+`) {
            float dyC = float(dyCCorner + wC) / `+s+`.0;

            if (dyC < 0.0 || dyC >= `+n.outWidth+`.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `},BR=function(n){this.variableNames=["dy"],this.outputShape=n.inShape;var e=n.filterDepth,t=n.filterHeight,r=n.filterWidth,s=n.strideDepth,o=n.strideHeight,a=n.strideWidth,i=n.dilationDepth,u=n.dilationHeight,c=n.dilationWidth,l=n.effectiveFilterDepth,h=n.effectiveFilterHeight,d=n.effectiveFilterWidth,p=l-1-n.padInfo.front,f=h-1-n.padInfo.top,m=d-1-n.padInfo.left,g=1/(e*t*r);this.userCode=`
      const ivec3 pads = ivec3(`+p+", "+f+", "+m+`);
      const float avgMultiplier = float(`+g+`);

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < `+l+`;
            wD += `+i+`) {
          float dyD = float(dyDCorner + wD) / `+s+`.0;

          if (dyD < 0.0 || dyD >= `+n.outDepth+`.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < `+h+`;
              wR += `+u+`) {
            float dyR = float(dyRCorner + wR) / `+o+`.0;

            if (dyR < 0.0 || dyR >= `+n.outHeight+`.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < `+d+`;
                wC += `+c+`) {
              float dyC = float(dyCCorner + wC) / `+a+`.0;

              if (dyC < 0.0 || dyC >= `+n.outWidth+`.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `},zR=function(n,e,t,r,s,o){this.outputShape=[],this.variableNames=["x","mean","variance"],qe(n,e),qe(n,t);var a="0.0";r!=null&&(qe(n,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");var i="1.0";s!=null&&(qe(n,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=n,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = `+a+`;
        float scale = `+i+`;
        float inv = scale * inversesqrt(variance + float(`+o+`));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `},VR=function(n,e,t,r,s,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],qe(n,e),qe(n,t);var a="vec4(0.0)";r!=null&&(qe(n,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");var i="vec4(1.0)";s!=null&&(qe(n,s),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=n,this.userCode=`
      void main() {
        vec4 offset = `+a+`;
        vec4 scale = `+i+`;

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(`+o+`));

        setOutput((x - mean) * inv + offset);
      }
    `},WR="return areal * breal - aimag * bimag;",UR="return areal * bimag + aimag * breal;",v0=function(n,e,t){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=qe(e,t),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        `+n+`
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `},Gp="return a + b;",Hp="return a - b;",b0="return a * b;",GR=`
if (a == b) {
  return 1.0;
};
return a / b;`,w0="return (a < 0.) ? b * a : a;",It=function(n,e,t){this.variableNames=["A","B"],this.outputShape=qe(e,t),this.userCode=`
      float binaryOperation(float a, float b) {
        `+n+`
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `},HR=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,C0=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,zr=function(n,e,t,r){r===void 0&&(r=!1),this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=qe(e,t);var s=this.outputShape.length,o="";if(r)if(s===0||ve(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          `+ht(s)+` coords = getOutputCoords();
        `,s===1)o+=`
            result.y = (coords + 1) >= `+this.outputShape[0]+` ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{var a=Ln("coords",s);o+=`
            bool nextRowOutOfBounds =
              (`+a[s-2]+" + 1) >= "+this.outputShape[s-2]+`;
            bool nextColOutOfBounds =
              (`+a[s-1]+" + 1) >= "+this.outputShape[s-1]+`;
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        `+n+`
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        `+o+`

        setOutput(result);
      }
    `},qR=function(){function n(e){this.variableNames=["A"],this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}return n.prototype.getCustomSetupFunc=function(e,t){var r=this;return function(s,o){r.minLoc==null&&(r.minLoc=s.getUniformLocationNoThrow(o,"minVal"),r.maxLoc=s.getUniformLocationNoThrow(o,"maxVal")),s.gl.uniform1f(r.minLoc,e),s.gl.uniform1f(r.maxLoc,t)}},n}(),jR=function(){function n(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`
      uniform float minVal;
      uniform float maxVal;

      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}return n.prototype.getCustomSetupFunc=function(e,t){var r=this;return function(s,o){r.minLoc==null&&(r.minLoc=s.getUniformLocationNoThrow(o,"minVal"),r.maxLoc=s.getUniformLocationNoThrow(o,"maxVal")),s.gl.uniform1f(r.minLoc,e),s.gl.uniform1f(r.maxLoc,t)}},n}(),KR=function(n){this.variableNames=["real","imag"],this.outputShape=n,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `},XR=function(n){this.outputShape=[],this.outputShape=fa(n,1),this.variableNames=n.map(function(i,u){return"T"+u});var e=new Array(n.length-1);e[0]=n[0][1];for(var t=1;t<e.length;t++)e[t]=e[t-1]+n[t][1];var r=["if (yC < "+e[0]+") setOutput(getT0(yR, yC));"];for(t=1;t<e.length;t++){var s=e[t-1];r.push("else if (yC < "+e[t]+") setOutput(getT"+t+"(yR, yC-"+s+"));")}var o=e.length,a=e[e.length-1];r.push("else setOutput(getT"+o+"(yR, yC-"+a+"));"),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        `+r.join(`
        `)+`
      }
    `},YR=function(n,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=fa(n,e);var t=this.outputShape,r=t.length,s=ht(r),o=Ln("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=n.map(function(g,x){return"T"+x});var i=new Array(n.length-1);i[0]=n[0][e];for(var u=1;u<i.length;u++)i[u]=i[u-1]+n[u][e];var c=a[e],l=a.slice(-2),h=a.join(),d="if ("+c+" < "+i[0]+`) {
        return getChannel(
            getT0(`+h+"), vec2("+l.join()+`));
        }`;for(u=1;u<i.length;u++){var p=i[u-1];d+=`
        if (`+c+" < "+i[u]+"  && "+c+" >= "+i[u-1]+`) {
          return getChannel(
            getT`+u+"("+dl(a,c,p)+`),
            vec2(`+dl(l,c,p)+`));
        }`}var f=i.length,m=i[i.length-1];d+=`
        return getChannel(
          getT`+f+"("+dl(a,c,m)+`),
          vec2(`+dl(l,c,m)+"));",this.userCode=`
      float getValue(`+a.map(function(g){return"int "+g})+`) {
        `+d+`
      }

      void main() {
        `+s+` coords = getOutputCoords();
        vec4 result = vec4(getValue(`+o+`), 0., 0., 0.);

        `+o[r-1]+" = "+o[r-1]+` + 1;
        if (`+o[r-1]+" < "+t[r-1]+`) {
          result.g = getValue(`+o+`);
        }

        `+o[r-2]+" = "+o[r-2]+` + 1;
        if (`+o[r-2]+" < "+t[r-2]+`) {
          result.a = getValue(`+o+`);
        }

        `+o[r-1]+" = "+o[r-1]+` - 1;
        if (`+o[r-2]+" < "+t[r-2]+` &&
            `+o[r-1]+" < "+t[r-1]+`) {
          result.b = getValue(`+o+`);
        }
        setOutput(result);
      }
    `};function dl(n,e,t){var r=n.indexOf(e);return n.map(function(s,o){return o===r?s+" - "+t:s}).join()}var QR=function(n){this.variableNames=["x","dy"],this.outputShape=n.filterShape;var e=n.strideHeight,t=n.strideWidth,r=n.padInfo.top,s=n.padInfo.left,o=n.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < `+n.batchSize+`; b++) {
          for (int yR = 0; yR < `+n.outHeight+`; yR++) {
            int xR = wR + yR * `+e+" - "+r+`;

            if (xR < 0 || xR >= `+n.inHeight+`) {
              continue;
            }

            for (int yC = 0; yC < `+n.outWidth+`; yC++) {
              int xC = wC + yC * `+t+" - "+s+`;

              if (xC < 0 || xC >= `+n.inWidth+`) {
                continue;
              }

              if (`+o+`) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `},JR=function(n){this.variableNames=["dy","W"],this.outputShape=n.inShape;var e=n.filterHeight,t=n.filterWidth,r=n.strideHeight,s=n.strideWidth,o=n.dataFormat==="channelsLast",a=e-1-n.padInfo.top,i=t-1-n.padInfo.left,u=o?1:2,c=o?2:3,l=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(`+a+", "+i+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[`+l+`];

        ivec2 dyCorner = ivec2(coords[`+u+"], coords["+c+`]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < `+e+`; wR++) {
          float dyR = float(dyRCorner + wR) / `+r+`.0;

          if (dyR < 0.0 || dyR >= `+n.outHeight+`.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = `+e+` - 1 - wR;

          for (int wC = 0; wC < `+t+`; wC++) {
            float dyC = float(dyCCorner + wC) / `+s+`.0;

            if (dyC < 0.0 || dyC >= `+n.outWidth+`.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = `+t+` - 1 - wC;

            for (int d2 = 0; d2 < `+n.outChannels+`; d2++) {

              if (`+o+`) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `},ZR=function(n){this.variableNames=["x","dy"],this.outputShape=n.filterShape;var e=n.strideDepth,t=n.strideHeight,r=n.strideWidth,s=n.padInfo.front,o=n.padInfo.top,a=n.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < `+n.batchSize+`; b++) {
          for (int yF = 0; yF < `+n.outDepth+`; yF++) {
            int xF = wF + yF * `+e+" - "+s+`;

            if (xF < 0 || xF >= `+n.inDepth+`) {
              continue;
            }

            for (int yR = 0; yR < `+n.outHeight+`; yR++) {
              int xR = wR + yR * `+t+" - "+o+`;

              if (xR < 0 || xR >= `+n.inHeight+`) {
                continue;
              }

              for (int yC = 0; yC < `+n.outWidth+`; yC++) {
                int xC = wC + yC * `+r+" - "+a+`;

                if (xC < 0 || xC >= `+n.inWidth+`) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `},eA=function(n){this.variableNames=["dy","W"],this.outputShape=n.inShape;var e=n.filterDepth,t=n.filterHeight,r=n.filterWidth,s=n.strideDepth,o=n.strideHeight,a=n.strideWidth,i=e-1-n.padInfo.front,u=t-1-n.padInfo.top,c=r-1-n.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(`+i+", "+u+", "+c+`);

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < `+e+`; wF++) {
          float dyF = float(dyFCorner + wF) / `+s+`.0;

          if (dyF < 0.0 || dyF >= `+n.outDepth+`.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = `+e+` - 1 - wF;

          for (int wR = 0; wR < `+t+`; wR++) {
            float dyR = float(dyRCorner + wR) / `+o+`.0;

            if (dyR < 0.0 || dyR >= `+n.outHeight+`.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = `+t+` - 1 - wR;

            for (int wC = 0; wC < `+r+`; wC++) {
              float dyC = float(dyCCorner + wC) / `+a+`.0;

              if (dyC < 0.0 || dyC >= `+n.outWidth+`.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = `+r+` - 1 - wC;

              for (int d2 = 0; d2 < `+n.outChannels+`; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `},tA=function(n){this.variableNames=["x","dy"],this.outputShape=n.filterShape;var e=n.strideHeight,t=n.strideWidth,r=n.padInfo.top,s=n.padInfo.left,o=n.outChannels/n.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * `+o+` + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < `+n.batchSize+`; b++) {
          for (int yR = 0; yR < `+n.outHeight+`; yR++) {
            int xR = wR + yR * `+e+" - "+r+`;

            if (xR < 0 || xR >= `+n.inHeight+`) {
              continue;
            }

            for (int yC = 0; yC < `+n.outWidth+`; yC++) {
              int xC = wC + yC * `+t+" - "+s+`;

              if (xC < 0 || xC >= `+n.inWidth+`) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `},nA=function(n){this.variableNames=["dy","W"],this.outputShape=n.inShape;var e=n.filterHeight,t=n.filterWidth,r=n.strideHeight,s=n.strideWidth,o=e-1-n.padInfo.top,a=t-1-n.padInfo.left,i=n.outChannels/n.inChannels;this.userCode=`
      const ivec2 pads = ivec2(`+o+", "+a+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < `+e+`; wR++) {
          float dyR = float(dyRCorner + wR) / `+r+`.0;

          if (dyR < 0.0 || dyR >= `+n.outHeight+`.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = `+e+` - 1 - wR;

          for (int wC = 0; wC < `+t+`; wC++) {
            float dyC = float(dyCCorner + wC) / `+s+`.0;

            if (dyC < 0.0 || dyC >= `+n.outWidth+`.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = `+t+` - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < `+i+`; dm++) {
              int d2 = d1 * `+i+` + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `},I0=function(n,e,t,r){e===void 0&&(e=!1),t===void 0&&(t=null),r===void 0&&(r=!1),this.variableNames=["x","W"],this.outputShape=n.outShape;var s=n.padInfo.top,o=n.padInfo.left,a=n.strideHeight,i=n.strideWidth,u=n.dilationHeight,c=n.dilationWidth,l=n.filterHeight,h=n.filterWidth,d=4*Math.floor(n.inChannels/4),p=n.inChannels%4,f=n.dataFormat==="channelsLast",m=f?1:2,g=f?2:3,x=f?3:1,y="",b="";t&&(y=r?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          `+t+`
        }`:`
          float activation(float x) {
            `+t+`
          }
        `,b="result = activation(result);");var v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      `+y+`

      const ivec2 strides = ivec2(`+a+", "+i+`);
      const ivec2 pads = ivec2(`+s+", "+o+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[`+x+`];

        ivec2 xRCCorner =
            ivec2(coords[`+m+"], coords["+g+`]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < `+l+`; wR++) {
          int xR = xRCorner + wR * `+u+`;

          if (xR < 0 || xR >= `+n.inHeight+`) {
            continue;
          }

          for (int wC = 0; wC < `+h+`; wC++) {
            int xC = xCCorner + wC * `+c+`;

            if (xC < 0 || xC >= `+n.inWidth+`) {
              continue;
            }

            for (int d1 = 0; d1 < `+d+`; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (`+f+`) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (`+(p===1)+`) {

              if (`+f+`) {
                dotProd +=
                    getX(batch, xR, xC, `+d+`) *
                    getW(wR, wC, `+d+`, d2);
              } else {
                dotProd +=
                    getX(batch, `+d+`, xR, xC) *
                    getW(wR, wC, `+d+`, d2);
              }

            } else if (`+(p===2)+`) {
              vec2 wValues = vec2(
                getW(wR, wC, `+d+`, d2),
                getW(wR, wC, `+d+` + 1, d2)
              );

              if (`+f+`) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, `+d+`),
                  getX(batch, xR, xC, `+d+` + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, `+d+`, xR, xC),
                  getX(batch, `+d+` + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (`+(p===3)+`) {
              vec3 wValues = vec3(
                getW(wR, wC, `+d+`, d2),
                getW(wR, wC, `+d+` + 1, d2),
                getW(wR, wC, `+d+` + 2, d2)
              );

              if (`+f+`) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, `+d+`),
                  getX(batch, xR, xC, `+d+` + 1),
                  getX(batch, xR, xC, `+d+` + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, `+d+`, xR, xC),
                  getX(batch, `+d+` + 1, xR, xC),
                  getX(batch, `+d+` + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        `+v+`
        `+b+`
        setOutput(result);
      }
    `},rA=function(n){this.variableNames=["x","W"],this.outputShape=n.outShape;var e=n.padInfo.front,t=n.padInfo.top,r=n.padInfo.left,s=n.strideDepth,o=n.strideHeight,a=n.strideWidth,i=n.dilationDepth,u=n.dilationHeight,c=n.dilationWidth,l=n.filterDepth,h=n.filterHeight,d=n.filterWidth,p=4*Math.floor(n.inChannels/4),f=n.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(`+s+", "+o+", "+a+`);
      const ivec3 pads = ivec3(`+e+", "+t+", "+r+`);

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < `+l+`; wF++) {
          int xF = xFCorner + wF * `+i+`;

          if (xF < 0 || xF >= `+n.inDepth+`) {
            continue;
          }

          for (int wR = 0; wR < `+h+`; wR++) {
            int xR = xRCorner + wR * `+u+`;

            if (xR < 0 || xR >= `+n.inHeight+`) {
              continue;
            }

            for (int wC = 0; wC < `+d+`; wC++) {
              int xC = xCCorner + wC * `+c+`;

              if (xC < 0 || xC >= `+n.inWidth+`) {
                continue;
              }

              for (int d1 = 0; d1 < `+p+`; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (`+(f===1)+`) {
                dotProd +=
                  getX(batch, xF, xR, xC, `+p+`) *
                  getW(wF, wR, wC, `+p+`, d2);
              } else if (`+(f===2)+`) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, `+p+`),
                  getX(batch, xF, xR, xC, `+p+` + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, `+p+`, d2),
                  getW(wF, wR, wC, `+p+` + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (`+(f===3)+`) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, `+p+`),
                  getX(batch, xF, xR, xC, `+p+` + 1),
                  getX(batch, xF, xR, xC, `+p+` + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, `+p+`, d2),
                  getW(wF, wR, wC, `+p+` + 1, d2),
                  getW(wF, wR, wC, `+p+` + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `},k0=function(n,e,t,r){e===void 0&&(e=!1),t===void 0&&(t=null),r===void 0&&(r=!1),this.variableNames=["x","W"],this.outputShape=n.outShape;var s=n.inHeight,o=n.inWidth,a=n.padInfo.top,i=n.padInfo.left,u=n.strideHeight,c=n.strideWidth,l=n.dilationHeight,h=n.dilationWidth,d=n.filterHeight,p=n.filterWidth,f=n.outChannels/n.inChannels,m="",g="";t&&(m=r?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          `+t+`
        }`:`
          float activation(float x) {
            `+t+`
          }
        `,g="result = activation(result);");var x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      `+m+`

      const ivec2 strides = ivec2(`+u+", "+c+`);
      const ivec2 pads = ivec2(`+a+", "+i+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / `+f+`;
        int q = d2 - d1 * `+f+`;

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < `+d+`; wR++) {
          int xR = xRCorner + wR * `+l+`;

          if (xR < 0 || xR >= `+s+`) {
            continue;
          }

          for (int wC = 0; wC < `+p+`; wC++) {
            int xC = xCCorner + wC * `+h+`;

            if (xC < 0 || xC >= `+o+`) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        `+x+`
        `+g+`
        setOutput(result);
      }
    `},S0=function(n,e,t,r){e===void 0&&(e=!1),t===void 0&&(t=null),r===void 0&&(r=!1),this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.outShape;for(var s=n.inHeight,o=n.inWidth,a=n.padInfo.top,i=n.padInfo.left,u=n.strideHeight,c=n.strideWidth,l=n.dilationHeight,h=n.dilationWidth,d=n.filterHeight,p=n.filterWidth,f=p,m="int xR; int xC; int xCOffset;",g=0;g<d;g++)for(var x=0;x<p;x++)m+=`
          vec4 xTexelR`+g+"C"+2*x+` = vec4(0.);
          vec4 wR`+g+"C"+x+` = vec4(0.);
          vec4 xR`+g+"C"+x+" = vec4(0.);";for(g=0;g<d;g++)for(var y=0;y<f;y++){if(m+=`
          xR = xRCorner + `+g*l+`;
          xC = xCCorner + `+(x=2*y)*h+`;
        `,c===1){if(x<p&&(m+=i%2==1?`
                xCOffset = xC + 1;
                if(xR >= 0 && xR < `+s+" && xCOffset >= 0 && xCOffset < "+o+`) {
                  xTexelR`+g+"C"+x+` = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= `+o+`) {
                    xTexelR`+g+"C"+x+`.zw = vec2(0.);
                  }
                } else {
                  xTexelR`+g+"C"+x+` = vec4(0.);
                }

                xCOffset = xC + 1 - 2;
                if(xR >= 0 && xR < `+s+" && xCOffset >= 0 && xCOffset < "+o+`) {
                  vec4 previous = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if(xCOffset + 1 >= `+o+`) {
                    previous.zw = vec2(0.);
                  }

                  xR`+g+"C"+x+" = vec4(previous.zw, xTexelR"+g+"C"+x+`.xy);
                } else {
                  xR`+g+"C"+x+" = vec4(0, 0, xTexelR"+g+"C"+x+`.xy);
                }
              `:`
                if(xR >= 0 && xR < `+s+" && xC >= 0 && xC < "+o+`) {
                  xTexelR`+g+"C"+x+` = getX(batch, xR, xC, d1);
                } else {
                  xTexelR`+g+"C"+x+` = vec4(0.);
                }

                xR`+g+"C"+x+" = xTexelR"+g+"C"+x+`;
              `,x+1<p)){var b=i%2==0?rp(h):h;h%2==0&&i%2==1||h%2!=0&&i%2!=1?(m+=`
                  xCOffset = xC + `+i%2+" + "+b+`;

                  if(xR >= 0 && xR < `+s+` &&
                    xCOffset >= 0 && xCOffset < `+o+`) {
                    xTexelR`+g+"C"+(x+2)+` = getX(batch, xR, xCOffset, d1);
                  }
                `,h>1&&(m+=`
                    xCOffset -= 2;
                    if(xR >= 0 && xR < `+s+` &&
                      xCOffset >= 0 && xCOffset < `+o+`) {
                      xTexelR`+g+"C"+x+` = getX(batch, xR, xCOffset, d1);
                    } else {
                      xTexelR`+g+"C"+x+` = vec4(0.);
                    }
                  `),m+=`
                  xR`+g+"C"+(x+1)+` = vec4(
                    xTexelR`+g+"C"+x+".zw, xTexelR"+g+"C"+(x+2)+`.xy);
                `):m+=`
                  xCOffset = xC + `+b+`;

                  if(xR >= 0 && xR < `+s+` &&
                    xCOffset >= 0 && xCOffset < `+o+`) {
                    xTexelR`+g+"C"+(x+2)+` = getX(batch, xR, xCOffset, d1);
                  }

                  xR`+g+"C"+(x+1)+" = xTexelR"+g+"C"+(x+2)+`;
                `}}else x<p&&(m+=`
              if(xR >= 0 && xR < `+s+`) {
            `,i%2==1?(m+=`
                xCOffset = xC + 1 - `+c+`;
                if(xCOffset >= 0 && xCOffset < `+o+`) {
                  xTexelR`+g+"C"+x+` = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR`+g+"C"+x+` = vec4(0.);
                }

                if(xC + 1 >= 0 && xC + 1 < `+o+`) {
                  xTexelR`+g+"C"+(x+2)+` = getX(batch, xR, xC + 1, d1);
                } else {
                  xTexelR`+g+"C"+(x+2)+` = vec4(0.);
                }

                xR`+g+"C"+x+` = vec4(
                  xTexelR`+g+"C"+x+".zw, xTexelR"+g+"C"+(x+2)+`.zw);
              `,x+1<p&&(m+=`
                  vec4 final = vec4(0.);
                  xCOffset = xC + 1 + `+c+`;
                  if(xCOffset >= 0 && xCOffset < `+o+`) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xR`+g+"C"+(x+1)+" = vec4(xTexelR"+g+"C"+(x+2)+`.xy, final.xy);
                `)):(m+=`
                if(xC >= 0 && xC < `+o+`) {
                  xTexelR`+g+"C"+x+` = getX(batch, xR, xC, d1);
                } else {
                  xTexelR`+g+"C"+x+` = vec4(0.);
                }

                xCOffset = xC + `+c+`;
                if(xCOffset >= 0 && xCOffset < `+o+`) {
                  xTexelR`+g+"C"+(x+2)+` = getX(batch, xR, xCOffset, d1);
                } else {
                  xTexelR`+g+"C"+(x+2)+` = vec4(0.);
                }

                xR`+g+"C"+x+` = vec4(
                  xTexelR`+g+"C"+x+".xy, xTexelR"+g+"C"+(x+2)+`.xy);
              `,x+1<p&&(m+=`
                  xR`+g+"C"+(x+1)+` = vec4(
                    xTexelR`+g+"C"+x+".zw, xTexelR"+g+"C"+(x+2)+`.zw);
                `)),m+="}");x<p&&(m+=`
            vec4 wTexelR`+g+"C"+x+" = getW("+g+", "+x+`, d1, q);
            wR`+g+"C"+x+" = vec4(wTexelR"+g+"C"+x+".xz, wTexelR"+g+"C"+x+`.xz);
          `,x+1<p&&(m+=`
              vec4 wTexelR`+g+"C"+(x+1)+" = getW("+g+", "+(x+1)+`, d1, q);
              wR`+g+"C"+(x+1)+` =
                vec4(wTexelR`+g+"C"+(x+1)+".xz, wTexelR"+g+"C"+(x+1)+".xz);"))}for(g=0;g<d;g++)for(x=0;x<p;x++)m+="dotProd += xR"+g+"C"+x+" * wR"+g+"C"+x+";";var v="",w="";t&&(v=r?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          `+t+`
        }`:`vec4 activation(vec4 x) {
          `+t+`
        }`,w="result = activation(result);");var C=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      `+v+`

      const ivec2 strides = ivec2(`+u+", "+c+`);
      const ivec2 pads = ivec2(`+a+", "+i+`);

      void main() {

        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2;
        int q = 0;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        vec4 dotProd = vec4(0.);

        `+m+`

        vec4 result = dotProd;
        `+C+`
        `+w+`
        setOutput(result);
      }
    `},sA=function(n,e,t,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];var o=n[0],a=n[1],i=n[2],u=n[3],c=e[0],l=t[0],h=t[1];this.outputShape=[c,l,h,u];var d=r==="bilinear"?1:0,p=[a-1+".0",i-1+".0"],f=p[0],m=p[1],g=l>1?[""+(a-1)/(l-1),"(y2-y1) * height_ratio","y1*"+f+" + float(y)*(height_scale)"]:["0.0","0.0","0.5 * (y1+y2) * "+f],x=g[0],y=g[1],b=g[2],v=h>1?[""+(i-1)/(h-1),"(x2-x1) * width_ratio","x1*"+m+" + float(x)*(width_scale)"]:["0.0","0.0","0.5 * (x1+x2) * "+m],w=v[0],C=v[1],T=v[2];this.userCode=`
      const float height_ratio = float(`+x+`);
      const float width_ratio = float(`+w+`);
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= `+o+`) {
          return;
        }

        float height_scale = `+y+`;
        float width_scale = `+C+`;

        float in_y = `+b+`;
        if( in_y < 0.0 || in_y > `+f+` ) {
          setOutput(float(`+s+`));
          return;
        }
        float in_x = `+T+`;
        if( in_x < 0.0 || in_x > `+m+` ) {
          setOutput(float(`+s+`));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(`+d+` == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `},oA=function(n,e,t){this.variableNames=["x"],this.outputShape=n;var r=n.length,s=n[n.length-1],o=t?"<":">";this.userCode=`
      int getIndex(int i) {
        `+(t?"return "+s+" -i - 1;":"return i;")+`
      }

      void main() {
        `+ht(r)+` coords = getOutputCoords();
        int end = `+N0(r,"coords")+`;
        float val = 0.0;
        for (int i = `+s+` - 1; i >= 0; i -= 1) {
          int idx = getIndex(i);
          if (idx `+o+` end) {
            continue;
          }
          if (idx == end && `+e+`) {
            continue;
          }
          `+N0(r,"coords")+` = idx;
          val += getX(`+function(a,i){if(a===1)return""+i;if(a===2)return i+".x, "+i+".y";if(a===3)return i+".x, "+i+".y, "+i+".z";if(a===4)return i+".x, "+i+".y, "+i+".z, "+i+".w";throw Error("Cumulative sum for rank "+a+" is not yet supported")}(r,"coords")+`);
        }
        setOutput(val);
      }
    `};function N0(n,e){if(n===1)return""+e;if(n===2)return e+".y";if(n===3)return e+".z";if(n===4)return e+".w";throw Error("Cumulative sum for rank "+n+" is not yet supported")}var aA=function(n){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ki.DENSE;var e=Si(n),t=mn();this.outputShape=n,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        `+Io(["r","c","d"],n)+`
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(`+e[0]+", "+e[1]+`));
        int index = 4 * (resTexRC.x * `+e[1]+` + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        `+t.output+` = result;
      }
    `},iA=function(n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ki.DENSE;var e=Si(n),t=mn();this.outputShape=n,this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        `+Io(["r","c","d"],n)+`
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx *
          vec2(`+e[0]+", "+e[1]+`));
        int index = 4 * (resTexRC.x * `+e[1]+` + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        `+t.output+` = result;
      }
    `},uA=function(){function n(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = `+this.getHeightCoordString()+`;
      int w = `+this.getWidthCoordString()+`;
      int d = `+this.getDepthCoordString()+`;

      int in_h = h / `+t+`;
      int offset_h = imod(h, `+t+`);
      int in_w = w / `+t+`;
      int offset_w = imod(w, `+t+`);
      int offset_d = (offset_h * `+t+` + offset_w) *
        `+this.getOutputDepthSize()+`;
      int in_d = d + offset_d;

      float result = `+this.getInputSamplingString()+`;
      setOutput(result);
    }
  `}return n.prototype.getHeightCoordString=function(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"},n.prototype.getWidthCoordString=function(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"},n.prototype.getDepthCoordString=function(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"},n.prototype.getOutputDepthSize=function(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]},n.prototype.getInputSamplingString=function(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"},n}(),cA=function(n){this.variableNames=["X"],this.outputShape=[n,n],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `},lA=function(n){this.variableNames=["A"],this.outTexUsage=Gn.DOWNLOAD;var e=mn();this.outputShape=n,this.userCode=`
      `+x0+`

      void main() {
        float x = getAAtOutCoords();
        `+e.output+` = encode_float(x);
      }
    `},hA=function(n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Gn.DOWNLOAD;var e=mn();this.outputShape=n,this.userCode=`
      `+x0+`

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        `+e.output+` = encode_float(x);
      }
    `},dA=function(n,e,t){t===void 0&&(t=!1),this.variableNames=["A"];var r=mn(),s=e[0],o=e[1];this.outputShape=n;var a="result";t&&(a="floor(result * 255. + 0.5)"),this.userCode=`
      `+Up(n)+`

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);
        
        int r = flatIndex / `+o+`;
        int c = imod(flatIndex, `+o+`);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(`+o+".0, "+s+`.0);
        vec4 values = `+r.texture2D+`(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        `+r.output+" = vec4("+a+`, 0., 0., 0.);
      }
    `},pA=function(n,e,t){t===void 0&&(t=!1),this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var r=mn(),s=e[0],o=e[1];this.outputShape=n;var a="",i="result";t&&(i="floor(result * 255. + 0.5)");for(var u=0;u<=1;u++)for(var c=0;c<=1;c++){var l=2*u+c;a+=`
          localCoords = coords;
          if(localCoords[2] + `+c+" < "+n[2]+`) {
            localCoords[2] += `+c+`;
            if(localCoords[1] + `+u+" < "+n[1]+`) {
              localCoords[1] += `+u+`;

              flatIndex = getFlatIndex(localCoords);
              offset = imod(flatIndex, 4);

              flatIndex = idiv(flatIndex, 4, 1.);

              r = flatIndex / `+o+`;
              c = imod(flatIndex, `+o+`);
              uv = (vec2(c, r) + halfCR) / vec2(`+o+".0, "+s+`.0);
              values = `+r.texture2D+`(A, uv);

              if(offset == 0) {
                result[`+l+`] = values[0];
              } else if(offset == 1) {
                result[`+l+`] = values[1];
              } else if(offset == 2) {
                result[`+l+`] = values[2];
              } else {
                result[`+l+`] = values[3];
              }
            }
          }
        `}this.userCode=`
      `+Up(n)+`

      void main() {
        ivec3 coords = getOutputCoords();

        vec4 result = vec4(0.);
        int flatIndex, r, c, offset;
        ivec3 localCoords;
        vec2 uv;
        vec4 values;

        `+a+`

        `+r.output+" = "+i+`;
      }
    `},fA="return real * expR - imag * expI;",mA="return real * expI + imag * expR;",T0=function(n,e,t){this.variableNames=["real","imag"];var r=e[1];this.outputShape=e;var s=t?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,o=t?r+".0":"1.0";this.userCode=`
      const float exponentMultiplier = `+s+`;

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        `+n+`
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(`+r+`);
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < `+r+`; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / `+o+`;
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `},gA=function(){function n(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      uniform float value;
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}return n.prototype.getCustomSetupFunc=function(e){var t=this;return function(r,s){t.valueLoc==null&&(t.valueLoc=r.getUniformLocationNoThrow(s,"value")),r.gl.uniform1f(t.valueLoc,e)}},n}(),xA=function(n,e,t){this.variableNames=["A","indices"];var r=n.slice();r[t]=e,this.outputShape=r,this.rank=r.length;var s=ht(this.rank),o=function(a,i){var u=a.length;if(u>4)throw Error("Gather for rank "+u+" is not yet supported");if(u===1)return"int(getIndices(resRC))";for(var c=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],h=0;h<a.length;h++)h===i?l.push("int(getIndices("+c[h]+"))"):l.push(""+c[h]);return l.join()}(n,t);this.userCode=`
      void main() {
        `+s+` resRC = getOutputCoords();
        setOutput(getA(`+o+`));
      }
    `},yA=function(n,e,t){this.sliceDim=n,this.strides=e,this.variableNames=["x","indices"],this.outputShape=t;var r=ht(e.length),s=ht(t.length),o=this.sliceDim>1?"strides[j]":"strides";this.userCode=`
        `+r+" strides = "+r+"("+this.strides+`);
         void main() {
          `+s+` coords = getOutputCoords();
          int flattenIndex = 0;
          for (int j = 0; j < `+this.sliceDim+`; j++) {
            int index = round(getIndices(coords[0], j));
            flattenIndex += index * `+o+`;
          }
          setOutput(getX(flattenIndex, coords[1]));
        }
      `};function vA(n,e){var t=mn();return CE(n,e,t.version+`
    precision highp float;
    `+t.attribute+` vec3 clipSpacePos;
    `+t.attribute+` vec2 uv;
    `+t.varyingVs+` vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`)}function bA(n,e){return TE(n,e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function wA(n,e){return EE(n,e,new Uint16Array([0,1,2,2,1,3]))}function $i(n,e,t,r,s,o,a){AE(t,r);var i=RE(n,e),u=n.TEXTURE_2D;return Se(n,e,function(){return n.bindTexture(u,i)}),Se(n,e,function(){return n.texParameteri(u,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)}),Se(n,e,function(){return n.texParameteri(u,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)}),Se(n,e,function(){return n.texParameteri(u,n.TEXTURE_MIN_FILTER,n.NEAREST)}),Se(n,e,function(){return n.texParameteri(u,n.TEXTURE_MAG_FILTER,n.NEAREST)}),Se(n,e,function(){return n.texImage2D(u,0,s,t,r,0,o,a,null)}),Se(n,e,function(){return n.bindTexture(n.TEXTURE_2D,null)}),i}function CA(n,e,t,r,s){var o=Wc(t,r);return $i(n,e,o[0],o[1],s.internalFormatFloat,s.textureFormatFloat,n.FLOAT)}function IA(n,e,t,r,s){var o=Wc(t,r);return $i(n,e,o[0],o[1],s.internalFormatHalfFloat,s.textureFormatFloat,s.textureTypeHalfFloat)}function kA(n,e,t,r,s){var o=Wc(t,r);return $i(n,e,o[0],o[1],n.RGBA,n.RGBA,n.UNSIGNED_BYTE)}function SA(n,e,t,r,s){var o=Ni(t,r);return $i(n,e,o[0],o[1],s.internalFormatPackedFloat,n.RGBA,n.FLOAT)}function NA(n,e,t,r,s){var o=Ni(t,r);return $i(n,e,o[0],o[1],s.internalFormatPackedHalfFloat,n.RGBA,s.textureTypeHalfFloat)}function TA(n,e,t,r){return Se(n,e,function(){return n.bindBuffer(n.ARRAY_BUFFER,r)}),ov(n,e,t,"clipSpacePos",r,3,20,0)&&ov(n,e,t,"uv",r,2,20,12)}function EA(n,e,t,r,s,o,a){var i,u,c;Se(n,e,function(){return n.bindTexture(n.TEXTURE_2D,t)}),o instanceof Uint8Array?(i=new Uint8Array(r*s*4),u=n.UNSIGNED_BYTE,c=n.RGBA):(i=new Float32Array(r*s*4),u=n.FLOAT,c=a.internalFormatPackedFloat),i.set(o),Se(n,e,function(){return n.texImage2D(n.TEXTURE_2D,0,c,r,s,0,n.RGBA,u,i)}),Se(n,e,function(){return n.bindTexture(n.TEXTURE_2D,null)})}function RA(n,e,t,r){Se(n,e,function(){return n.bindTexture(n.TEXTURE_2D,t)}),r.data instanceof Uint8Array?Se(n,e,function(){return n.texImage2D(n.TEXTURE_2D,0,n.RGBA,r.width,r.height,0,n.RGBA,n.UNSIGNED_BYTE,r.data)}):Se(n,e,function(){return n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,r)}),Se(n,e,function(){return n.bindTexture(n.TEXTURE_2D,null)})}function AA(n,e,t,r,s){var o=n.createBuffer();Se(n,e,function(){return n.bindBuffer(n.PIXEL_PACK_BUFFER,o)});var a=16*t*r;return Se(n,e,function(){return n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)}),Se(n,e,function(){return n.readPixels(0,0,r,t,n.RGBA,n.FLOAT,0)}),Se(n,e,function(){return n.bindBuffer(n.PIXEL_PACK_BUFFER,null)}),o}function $A(n,e,t){var r=n,s=new Float32Array(t);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function DA(n,e,t,r,s){var o=Wc(t,r),a=o[0],i=o[1],u=new Uint8Array(t*r*4);return Se(n,e,function(){return n.readPixels(0,0,a,i,s.downloadTextureFormat,n.UNSIGNED_BYTE,u)}),new Float32Array(u.buffer)}function FA(n,e,t,r,s,o,a,i){var u=n,c=new Float32Array(function(l,h){var d=Ni(l,h);return d[0]*d[1]*4}(o,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function OA(n,e,t,r){var s=new Float32Array(t*r*4);return Se(n,e,function(){return n.readPixels(0,0,r,t,n.RGBA,n.FLOAT,s)}),s}var _A=function(){function n(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];var t=se().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,xE(t,e)):this.gl=Mr(t);var r="WEBGL_color_buffer_float";if(se().getNumber("WEBGL_VERSION")===1){if(this.textureFloatExtension=Uc(this.gl,this.debug,"OES_texture_float"),nr(this.gl,"OES_texture_half_float"))this.textureHalfFloatExtension=Uc(this.gl,this.debug,"OES_texture_half_float");else if(se().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),nr(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=Uc(this.gl,this.debug,"EXT_color_buffer_half_float");else if(se().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",nr(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else{if(!nr(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=bA(this.gl,this.debug),this.indexBuffer=wA(this.gl,this.debug),this.framebuffer=$E(this.gl,this.debug),this.textureConfig=vp(this.gl,this.textureHalfFloatExtension)}return Object.defineProperty(n.prototype,"debug",{get:function(){return se().getBool("DEBUG")},enumerable:!0,configurable:!0}),n.prototype.dispose=function(){var e=this;if(!this.disposed){this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");var t=this.gl;Se(t,this.debug,function(){return t.finish()}),Se(t,this.debug,function(){return t.bindFramebuffer(t.FRAMEBUFFER,null)}),Se(t,this.debug,function(){return t.deleteFramebuffer(e.framebuffer)}),Se(t,this.debug,function(){return t.bindBuffer(t.ARRAY_BUFFER,null)}),Se(t,this.debug,function(){return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)}),Se(t,this.debug,function(){return t.deleteBuffer(e.indexBuffer)}),this.disposed=!0}},n.prototype.createFloat32MatrixTexture=function(e,t){return this.throwIfDisposed(),CA(this.gl,this.debug,e,t,this.textureConfig)},n.prototype.createFloat16MatrixTexture=function(e,t){return this.throwIfDisposed(),IA(this.gl,this.debug,e,t,this.textureConfig)},n.prototype.createUnsignedBytesMatrixTexture=function(e,t){return this.throwIfDisposed(),kA(this.gl,this.debug,e,t,this.textureConfig)},n.prototype.uploadPixelDataToTexture=function(e,t){this.throwIfDisposed(),RA(this.gl,this.debug,e,t)},n.prototype.uploadDenseMatrixToTexture=function(e,t,r,s){this.throwIfDisposed(),EA(this.gl,this.debug,e,t,r,s,this.textureConfig)},n.prototype.createFloat16PackedMatrixTexture=function(e,t){return this.throwIfDisposed(),NA(this.gl,this.debug,e,t,this.textureConfig)},n.prototype.createPackedMatrixTexture=function(e,t){return this.throwIfDisposed(),SA(this.gl,this.debug,e,t,this.textureConfig)},n.prototype.deleteMatrixTexture=function(e){var t=this;this.throwIfDisposed(),this.outputTexture===e&&(av(this.gl,this.debug,this.framebuffer),this.outputTexture=null),Se(this.gl,this.debug,function(){return t.gl.deleteTexture(e)})},n.prototype.downloadByteEncodedFloatMatrixFromOutputTexture=function(e,t,r){var s=this;return this.downloadMatrixDriver(e,function(){return DA(s.gl,s.debug,t,r,s.textureConfig)})},n.prototype.downloadPackedMatrixFromBuffer=function(e,t,r,s,o,a){return FA(this.gl,e,0,0,0,o,a,this.textureConfig)},n.prototype.downloadFloat32MatrixFromBuffer=function(e,t){return $A(this.gl,e,t)},n.prototype.createBufferFromTexture=function(e,t,r){this.bindTextureToFrameBuffer(e);var s=AA(this.gl,this.debug,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s},n.prototype.createAndWaitForFence=function(){var e=this.createFence(this.gl);return this.pollFence(e)},n.prototype.createFence=function(e){var t,r,s=this;if(se().getBool("WEBGL_FENCE_API_ENABLED")){var o=e,a=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=function(){var i=o.clientWaitSync(a,0,0);return i===o.ALREADY_SIGNALED||i===o.CONDITION_SATISFIED},t=a}else se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=function(){return s.isQueryAvailable(t,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}):r=function(){return!0};return{query:t,isFencePassed:r}},n.prototype.downloadMatrixFromPackedTexture=function(e,t,r){var s=this;return this.downloadMatrixDriver(e,function(){return OA(s.gl,s.debug,t,r)})},n.prototype.createProgram=function(e){this.throwIfDisposed();var t=this.gl,r=IE(t,this.debug,e),s=vA(t,this.debug),o=SE(t,this.debug);return Se(t,this.debug,function(){return t.attachShader(o,s)}),Se(t,this.debug,function(){return t.attachShader(o,r)}),NE(t,this.debug,o),this.debug&&Cp(t,this.debug,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=TA(t,this.debug,this.program,this.vertexBuffer)),o},n.prototype.deleteProgram=function(e){var t=this;this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&Se(this.gl,this.debug,function(){return t.gl.deleteProgram(e)})},n.prototype.setProgram=function(e){var t=this;this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Cp(this.gl,this.debug,this.program),Se(this.gl,this.debug,function(){return t.gl.useProgram(e)})},n.prototype.getUniformLocation=function(e,t,r){return r===void 0&&(r=!0),this.throwIfDisposed(),r?FE(this.gl,this.debug,e,t):OE(this.gl,e,t)},n.prototype.getAttributeLocation=function(e,t){var r=this;return this.throwIfDisposed(),Se(this.gl,this.debug,function(){return r.gl.getAttribLocation(e,t)})},n.prototype.getUniformLocationNoThrow=function(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)},n.prototype.setInputMatrixTexture=function(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),_E(this.gl,this.debug,this.program,e,t,r)},n.prototype.setOutputMatrixTexture=function(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)},n.prototype.setOutputPackedMatrixTexture=function(e,t,r){this.throwIfDisposed();var s=Ni(t,r),o=s[0],a=s[1];this.setOutputMatrixTextureDriver(e,o,a)},n.prototype.setOutputMatrixWriteRegion=function(e,t,r,s){this.setOutputMatrixWriteRegionDriver(r,e,s,t)},n.prototype.setOutputPackedMatrixWriteRegion=function(e,t,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")},n.prototype.debugValidate=function(){this.program!=null&&Cp(this.gl,this.debug,this.program),Gc(this.gl)},n.prototype.executeProgram=function(){this.throwIfDisposed(),this.throwIfNoProgram();var e=this.gl;this.debug&&this.debugValidate(),Se(e,this.debug,function(){return e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)})},n.prototype.blockUntilAllProgramsCompleted=function(){var e=this;this.throwIfDisposed(),Se(this.gl,this.debug,function(){return e.gl.finish()})},n.prototype.getQueryTimerExtension=function(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Uc(this.gl,this.debug,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension},n.prototype.getQueryTimerExtensionWebGL2=function(){return this.getQueryTimerExtension()},n.prototype.getQueryTimerExtensionWebGL1=function(){return this.getQueryTimerExtension()},n.prototype.beginQuery=function(){if(se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){var e=this.gl,t=this.getQueryTimerExtensionWebGL2(),r=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,r),r}var s=this.getQueryTimerExtensionWebGL1(),o=s.createQueryEXT();return s.beginQueryEXT(s.TIME_ELAPSED_EXT,o),o},n.prototype.endQuery=function(){if(se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")!==2){var e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}else{var t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT)}},n.prototype.waitForQueryAndGetTime=function(e){return Ie(this,void 0,void 0,function(){var t=this;return ke(this,function(r){switch(r.label){case 0:return[4,sp(function(){return t.disposed||t.isQueryAvailable(e,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})];case 1:return r.sent(),[2,this.getQueryTime(e,se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))]}})})},n.prototype.getQueryTime=function(e,t){if(t===0)return null;if(t===2){var r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}var s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6},n.prototype.isQueryAvailable=function(e,t){if(t===0)return!0;if(t===2){var r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}return o=(s=this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT),this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint},n.prototype.pollFence=function(e){var t=this;return new Promise(function(r){t.addItemToPoll(function(){return e.isFencePassed()},function(){return r()})})},n.prototype.pollItems=function(){for(var e=function(r){for(var s=0;s<r.length&&r[s]();++s);return s-1}(this.itemsToPoll.map(function(r){return r.isDoneFn})),t=0;t<=e;++t)(0,this.itemsToPoll[t].resolveFn)();this.itemsToPoll=this.itemsToPoll.slice(e+1)},n.prototype.addItemToPoll=function(e,t){var r=this;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||sp(function(){return r.pollItems(),r.itemsToPoll.length===0})},n.prototype.bindTextureToFrameBuffer=function(e){this.throwIfDisposed(),Ip(this.gl,this.debug,e,this.framebuffer),this.debug&&Gc(this.gl)},n.prototype.unbindTextureToFrameBuffer=function(){this.outputTexture!=null?(Ip(this.gl,this.debug,this.outputTexture,this.framebuffer),this.debug&&Gc(this.gl)):av(this.gl,this.debug,this.framebuffer)},n.prototype.downloadMatrixDriver=function(e,t){this.bindTextureToFrameBuffer(e);var r=t();return this.unbindTextureToFrameBuffer(),r},n.prototype.setOutputMatrixTextureDriver=function(e,t,r){this.throwIfDisposed();var s=this.gl;Ip(s,this.debug,e,this.framebuffer),this.debug&&Gc(s),this.outputTexture=e,Se(s,this.debug,function(){return s.viewport(0,0,t,r)}),Se(s,this.debug,function(){return s.scissor(0,0,t,r)})},n.prototype.setOutputMatrixWriteRegionDriver=function(e,t,r,s){var o=this;this.throwIfDisposed(),Se(this.gl,this.debug,function(){return o.gl.scissor(e,t,r,s)})},n.prototype.throwIfDisposed=function(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")},n.prototype.throwIfNoProgram=function(){if(this.program==null)throw new Error("No GPU program is currently set.")},n}();function E0(n,e){if(n.length!==e.length)throw Error("Binary was compiled with "+n.length+" inputs, but was executed with "+e.length+" inputs");n.forEach(function(t,r){var s=t.logicalShape,o=e[r],a=o.shape;if(!Wt(s,a))throw Error("Binary was compiled with different shapes than the current args. Shapes "+s+" and "+a+" must match");if(!t.isUniform||!o.isUniform){var i=t.texShape,u=o.isUniform?null:o.texData.texShape;if(!Wt(i,u))throw Error("Binary was compiled with different texture shapes than the current args. Shape "+i+" and "+u+" must match")}})}var MA=function(n,e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;for(var r=t.filterWidth,s=t.inChannels,o=t.strideWidth,a=t.strideHeight,i=t.padInfo,u=t.outWidth,c=t.dilationWidth,l=t.dilationHeight,h=t.dataFormat,d=i.left,p=i.top,f=s*r,m=mn(),g=h==="channelsLast",x=g?0:1,y=g?1:2,b="",v=0;v<=1;v++)for(var w=0;w<=1;w++)b+=`
          blockIndex = rc.y + `+w+`;
          pos = rc.x + `+v+`;

          if(blockIndex < `+n[1]+" && pos < "+n[0]+`) {
            offsetY = int(blockIndex / (`+u+")) * "+a+" - "+p+`;
            d0 = offsetY + `+l+" * (pos / "+f+`);

            if(d0 < `+e[x]+` && d0 >= 0) {

              offsetX = int(mod(float(blockIndex), `+u+".) * "+o+". - "+d+`.);
              d1 = offsetX + `+c+" * (int(mod(float(pos), "+f+".) / "+s+`.));

              if(d1 < `+e[y]+` && d1 >= 0) {

                ch = int(mod(float(pos), `+s+`.));

                if (`+g+`) {
                  innerDims = vec2(d1, ch);
                  result[`+(2*v+w)+`] = getChannel(
                    getA(d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[`+(2*v+w)+`] = getChannel(
                    getA(ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec2 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        `+b+`

        `+m.output+` = result;
      }
    `},LA=function(n,e,t,r,s){this.variableNames=["x"],this.outputShape=[];var o,a=e,i=n[3]-1;this.outputShape=n;var u="float("+t+") + float("+r+") * sum";o=s===.5?"inversesqrt("+u+")":s===1?"1.0/("+u+")":"exp(log("+u+") * float(-"+s+"));",this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -`+a+"; j <= "+a+`; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  `+i+`) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * `+o+`;
        setOutput(val);
      }
    `},PA=function(n,e,t,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=n,this.depth=n[3],this.depthRadius=e,this.bias=t,this.alpha=r,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < `+this.depth+`; ++d) {
          int depthBegin = int(max(0.0, float(d - `+e+`)));
          int depthEnd = int(min(float(`+this.depth+`),
              float(d + `+e+` + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = `+this.depth+`;

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(`+r+") * norm + float("+t+`);

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(`+r+`)
                * float(`+s+`)
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * `+s+`);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `},BA=function(n,e,t,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;var o,a=e,i=n[3]-1;this.outputShape=n;var u="float("+t+") + float("+r+") * sum";o=s===.5?"inversesqrt("+u+")":s===1?"1.0/("+u+")":"exp(log("+u+") * float(-"+s+"));",this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < `+this.outputShape[3]+`;
        bool hasNextRow = c < `+this.outputShape[2]+`;

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - `+a+`;
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - `+a+"; j <= "+a+`; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(`+i+`));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * `+o+`;
        setOutput(result);
      }
    `},zA=function(n){this.variableNames=["dy","maxPos"],this.outputShape=n.inShape;var e=n.strideHeight,t=n.strideWidth,r=n.dilationHeight,s=n.effectiveFilterHeight,o=n.effectiveFilterWidth,a=s-1-n.padInfo.top,i=o-1-n.padInfo.left,u=s*o-1;this.userCode=`
      const ivec2 pads = ivec2(`+a+", "+i+`);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < `+s+`;
          wR += `+r+`) {
          float dyR = float(dyRCorner + wR) / `+e+`.0;

          if (dyR < 0.0 || dyR >= `+n.outHeight+`.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < `+o+`; wC++) {
            float dyC = float(dyCCorner + wC) / `+t+`.0;

            if (dyC < 0.0 || dyC >= `+n.outWidth+`.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = `+u+` - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * `+o+` + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `},VA=function(n){this.variableNames=["dy","maxPos"],this.outputShape=n.inShape;var e=n.strideDepth,t=n.strideHeight,r=n.strideWidth,s=n.dilationDepth,o=n.dilationHeight,a=n.dilationWidth,i=n.effectiveFilterDepth,u=n.effectiveFilterHeight,c=n.effectiveFilterWidth,l=i-1-n.padInfo.front,h=u-1-n.padInfo.top,d=c-1-n.padInfo.left,p=i*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(`+l+", "+h+", "+d+`);

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < `+i+`;
           wD += `+s+`) {
          float dyD = float(dyDCorner + wD) / `+e+`.0;

          if (dyD < 0.0 || dyD >= `+n.outDepth+`.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < `+u+`;
              wR += `+o+`) {
            float dyR = float(dyRCorner + wR) / `+t+`.0;

            if (dyR < 0.0 || dyR >= `+n.outHeight+`.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < `+c+`;
                wC += `+a+`) {
              float dyC = float(dyCCorner + wC) / `+r+`.0;

              if (dyC < 0.0 || dyC >= `+n.outWidth+`.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = `+p+` -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * `+u+" * "+c+` +
                  wR * `+c+` + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `},qp=function(n,e,t,r,s,o,a){t===void 0&&(t=!1),r===void 0&&(r=!1),s===void 0&&(s=!1),o===void 0&&(o=null),a===void 0&&(a=!1),this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;var i=t?n[1]:n[2],u=Math.ceil(i/2),c=t?"i * 2, rc.y":"rc.y, i * 2",l=r?"rc.z, i * 2":"i * 2, rc.z",h=t?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],p="",f="";o&&(p=a?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          `+o+`
        }`:`vec4 activation(vec4 x) {
          `+o+`
        }`,f="result = activation(result);");var m=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.userCode=`
      `+p+`

      const float sharedDimension = `+u+`.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < `+u+`; i++) {
          vec4 a = getMatrixA(rc.x, `+c+`);
          vec4 b = getMatrixB(rc.x, `+l+`);

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (`+h[0]+" * "+d[0]+`);
          result += (`+h[1]+" * "+d[1]+`);
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        `+m+`

        `+f+`

        setOutput(result);
      }
    `},WA=function(){function n(e,t,r){this.variableNames=["probs"],this.outputShape=[e,r],this.userCode=`
      uniform float seed;

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < `+(t-1)+`; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(`+(t-1)+`));
      }
    `}return n.prototype.getCustomSetupFunc=function(e){var t=this;return function(r,s){t.seedLoc==null&&(t.seedLoc=r.getUniformLocation(s,"seed")),r.gl.uniform1f(t.seedLoc,e)}},n}(),UA=function(n,e,t,r){this.variableNames=["indices"],this.outputShape=[n,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(`+r+"), float("+t+`),
                      float(index == coords.y)));
      }
    `},GA=function(n){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=n;var e=n.length;if(e===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{var t=Ln("rc",e),r=ht(e),s=function(i,u,c){if(i===1)return"rc > "+u[0];for(var l="",h=i-2;h<i;h++)l+=c[h]+" >= "+u[h],h<i-1&&(l+="||");return l}(e,n,t),o=function(i,u,c,l){if(i===1)return"";var h=l.slice(-2);return`
    int r = `+h[0]+`;
    int c = `+h[1]+`;
    int rp1 = r + 1;
    int cp1 = c + 1;

    bool cEdge = cp1 >= `+u+`;
    bool rEdge = rp1 >= `+c+`;
  `}(e,n[n.length-1],n[n.length-2],t),a=function(i,u){var c=i.length,l=function(h,d){for(var p=[],f=0;f<=1;f++)for(var m=0;m<=1;m++){for(var g=(f===0?"r":"rp1")+", "+(m===0?"c":"cp1"),x=2;x<h;x++)g=d[d.length-1-x]+","+g;p.push(g)}return p}(c,u);return c===1?`getA(rc),
            rc + 1 >= `+i[0]+` ? 0. : getA(rc + 1),
            0, 0`:"getA("+l[0]+`),
          cEdge ? 0. : getA(`+l[1]+`),
          rEdge ? 0. : getA(`+l[2]+`),
          rEdge || cEdge ? 0. : getA(`+l[3]+")"}(n,t);this.userCode=`
        void main() {
          `+r+` rc = getOutputCoords();

          if(`+s+`) {
            setOutput(vec4(0));
          } else {
            `+o+`

            setOutput(vec4(`+a+`));
          }
        }
      `}},HA=function(n,e,t){this.variableNames=["x"],this.outputShape=e.map(function(u,c){return u[0]+n[c]+u[1]});var r=n.length,s=ht(r),o=e.map(function(u){return u[0]}).join(","),a=e.map(function(u,c){return u[0]+n[c]}).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=r!==1?`
      `+s+" start = "+s+"("+o+`);
      `+s+" end = "+s+"("+a+`);

      void main() {
        `+s+` outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(float(`+t+`));
        } else {
          `+s+` coords = outC - start;
          setOutput(getX(`+i+`));
        }
      }
    `:`
        int start = `+o+`;
        int end = `+a+`;

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(float(`+t+`));
          } else {
            setOutput(getX(outC - start));
          }
        }
      `},qA=function(n,e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(function(g,x){return g[0]+n[x]+g[1]});for(var r=n.length,s=ht(r),o=e.map(function(g){return g[0]}).join(","),a=e.map(function(g,x){return g[0]+n[x]}).join(","),i=Ln("rc",r),u=Ln("source",r),c=i[r-1]+" < "+this.outputShape[r-1],l=r===1?"source":"vec2("+u.slice(-2).join()+")",h=[s+" rc = outputLoc;",i[r-1]+` += 1;
       if(`+c+`) {
      `,r===1?"":`}
       rc = outputLoc;
       `+i[r-2]+` += 1;
       if(`+i[r-2]+" < "+this.outputShape[r-2]+") {",r===1?"":"  "+i[r-1]+` += 1;
         if(`+c+") {"],d=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",p="",f=0,m=r===1?2:4;f<m;f++)p+=`
        `+h[f]+`
        if (`+d+`) {
          result[`+f+"] = float("+t+`);
        } else {
          `+s+` source = rc - start;
          result[`+f+"] = getChannel(getX("+u.join()+"), "+l+`);
        }
      `;p+=r===1?"} ":"}}",this.userCode=`
      const `+s+" start = "+s+"("+o+`);
      const `+s+" end = "+s+"("+a+`);

      void main() {
        `+s+` outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        `+p+`
        setOutput(result);
      }
    `},Di=function(n,e,t,r,s){if(r===void 0&&(r=!1),s===void 0&&(s=!1),this.variableNames=["x"],e==="avg"&&t)throw new Error("Cannot compute positions for average pool.");var o=n.filterWidth,a=n.strideHeight,i=n.strideWidth,u=n.dilationHeight,c=n.dilationWidth,l=n.effectiveFilterHeight,h=n.effectiveFilterWidth,d=n.padInfo.top,p=n.padInfo.left;this.outputShape=n.outShape;var f=e==="avg",m="((batch  * "+n.inHeight+" + xR) * "+n.inWidth+" + xC) * "+n.inChannels+" + d",g="(xR * "+n.inWidth+" + xC) * "+n.inChannels+" + d",x="0.0";if(f||(x="-1.0 / 1e-20"),t)this.userCode=`
        const ivec2 strides = ivec2(`+a+", "+i+`);
        const ivec2 pads = ivec2(`+d+", "+p+`);

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < `+l+`;
              wR += `+u+`) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= `+n.inHeight+`) {
              continue;
            }

            for (int wC = 0; wC < `+h+`;
                wC += `+c+`) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= `+n.inWidth+`) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = `+(r?s?m:g:"wR * "+h+" + wC")+`;
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;else{var y=e+"("+e+"("+e+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";e==="avg"&&(y="avgValue / count");var b=4*Math.floor(o/4),v=o%4,w=`
      if (`+f+`) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(`+a+", "+i+`);
      const ivec2 pads = ivec2(`+d+", "+p+`);
      const float initializationValue = `+x+`;
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= `+n.inWidth+`) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(`+x+`);
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < `+l+`;
            wR += `+u+`) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= `+n.inHeight+`) {
            continue;
          }

          for (int wC = 0; wC < `+b+`; wC += 4) {
            int xC = xCCorner + wC * `+c+`;

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + `+c+`, d),
              getValue(batch, xR, xC + 2 * `+c+`, d),
              getValue(batch, xR, xC + 3 * `+c+`, d)
            );

            `+w+`
          }

          int xC = xCCorner + `+b+`;
          if (`+(v===1)+`) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            `+w+`
          } else if (`+(v===2)+`) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + `+c+`, d),
              initializationValue,
              initializationValue
            );

            `+w+`
          } else if (`+(v===3)+`) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + `+c+`, d),
              getValue(batch, xR, xC + 2 * `+c+`, d),
              initializationValue
            );

            `+w+`
          }
        }
        setOutput(`+y+`);
      }
    `}},jp=function(n,e,t,r,s){if(r===void 0&&(r=!1),s===void 0&&(s=!1),this.variableNames=["x"],e==="avg"&&t)throw new Error("Cannot compute positions for average pool.");var o=n.filterWidth,a=n.strideDepth,i=n.strideHeight,u=n.strideWidth,c=n.dilationDepth,l=n.dilationHeight,h=n.dilationWidth,d=n.effectiveFilterDepth,p=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=n.padInfo.front,g=n.padInfo.top,x=n.padInfo.left;this.outputShape=n.outShape;var y=e==="avg",b="0.0";if(y||(b="-1.0 / 1e-20"),t)this.userCode=`
        const ivec3 strides =
            ivec3(`+a+", "+i+", "+u+`);
        const ivec3 pads = ivec3(`+m+", "+g+", "+x+`);

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < `+d+`;
              wD += `+c+`) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= `+n.inDepth+`) {
              continue;
            }

            for (int wR = 0; wR < `+p+`;
                wR += `+l+`) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= `+n.inHeight+`) {
                continue;
              }

              for (int wC = 0; wC < `+f+`;
                  wC += `+h+`) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= `+n.inWidth+`) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = `+(r?s?"(((batch * "+n.inDepth+" + xD) * "+n.inHeight+" + xR) * "+n.inWidth+" + xC) * "+n.inChannels+" + ch":"((xD * "+n.inHeight+" + xR) * "+n.inWidth+" + xC) * "+n.inChannels+" + ch":"wD * "+p+" * "+f+` +
                      wR * `+f+" + wC")+`;
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;else{var v=e+"("+e+"("+e+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";e==="avg"&&(v="avgValue / count");var w=4*Math.floor(o/4),C=o%4,T=`
      if (`+y+`) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(`+a+", "+i+", "+u+`);
      const ivec3 pads = ivec3(`+m+", "+g+", "+x+`);
      const float initializationValue = `+b+`;
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= `+n.inWidth+`) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(`+b+`);
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < `+d+`;
            wD += `+c+`) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= `+n.inDepth+`) {
            continue;
          }

          for (int wR = 0; wR < `+p+`;
            wR += `+l+`) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= `+n.inHeight+`) {
              continue;
            }

            for (int wC = 0; wC < `+w+`; wC += 4) {
              int xC = xCCorner + wC * `+h+`;

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + `+h+`, ch),
                getValue(batch, xD, xR, xC + 2 * `+h+`, ch),
                getValue(batch, xD, xR, xC + 3 * `+h+`, ch)
              );

              `+T+`
            }

            int xC = xCCorner + `+w+`;
            if (`+(C===1)+`) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              `+T+`
            } else if (`+(C===2)+`) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + `+h+`, ch),
                initializationValue,
                initializationValue
              );

              `+T+`
            } else if (`+(C===3)+`) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + `+h+`, ch),
                getValue(batch, xD, xR, xC + 2 * `+h+`, ch),
                initializationValue
              );

              `+T+`
            }
          }
          setOutput(`+v+`);
        }
      }
    `}},jA=function(n,e){this.variableNames=["x"];var t=n.windowSize,r=n.batchSize,s=n.inSize,o=Math.ceil(s/t);this.outputShape=[r,o];var a="0.0",i="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",i="min"):e==="max"&&(a="-1.0 / 1e-20",i="max");var u=e+"("+e+"("+e+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";e==="sum"?u="sumValue":e==="prod"?u="prodValue":e==="all"?u="allValue":e==="any"&&(u="anyValue");var c=4*Math.floor(t/4),l=t%4,h=`
      if (`+(e==="sum")+`) {
        sumValue += dot(values, ones);
      } else if (`+(e==="prod")+`) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = `+i+`(values, minMaxValue);
      }
    `,d="vec4";e==="all"?(a="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):e==="any"&&(a="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");var p="";s%t>0&&(p=`
        if (inIdx < 0 || inIdx >= `+s+`) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = `+a+`;
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        `+p+`
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * `+t+`;

        vec4 minMaxValue = vec4(`+a+`);
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < `+c+`; i += 4) {
          int inIdx = inOffset + i;
          `+d+" values = "+d+`(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          `+h+`
        }

        int inIdx = inOffset + `+c+`;
        if (`+(l===1)+`) {
          `+d+" values = "+d+`(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          `+h+`
        } else if (`+(l===2)+`) {
          `+d+" values = "+d+`(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          `+h+`
        } else if (`+(l===3)+`) {
          `+d+" values = "+d+`(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          `+h+`
        }
        setOutput(`+u+`);
      }
    `},KA=function(n,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;for(var t="",r=0;r<4;r++){var s="thisRC = rc;";r%2==1&&(s+="thisRC.z += 1;"),r>1&&(s+="thisRC.y += 1;"),t+=`
        `+s+`
        `+(r>0?"if(thisRC.y < rows && thisRC.z < cols){":"")+`
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[`+r+`] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        `+(r>0?"}":"")+`
      `}this.userCode=`
      
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      `+Io(["r","c","d"],e)+`
      return ivec3(r, c, d);
    }
  
      `+Up(n)+`

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = `+n[1]+`;
        int cols = `+n[2]+`;

        `+t+`

        setOutput(result);
      }
    `},XA=function(n,e,t){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;var r=e.shape,s=r[1],o=r[2],a=n.shape,i=a[1],u=a[2],c=[t&&i>1?s-1:s,t&&u>1?o-1:o],l=[t&&i>1?i-1:i,t&&u>1?u-1:u],h=c[0]/l[0],d=c[1]/l[1],p=1/h,f=1/d,m=2*Math.ceil(p)+2,g=2*Math.ceil(f)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(`+h+`);
        const float widthScale = float(`+d+`);

        const float invHeightScale = float(`+p+`);
        const float invWidthScale = float(`+f+`);

        const int winHeight = int(`+m+`);
        const int winWidth = int(`+g+`);

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= `+i+`) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= `+u+`) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), `+(s-1)+`.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), `+(o-1)+`.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `},YA=function(n,e,t,r){this.variableNames=["A"],this.outputShape=[];var s=n[0],o=n[1],a=n[2],i=n[3];this.outputShape=[s,e,t,i];var u=[r&&e>1?o-1:o,r&&t>1?a-1:a],c=[r&&e>1?e-1:e,r&&t>1?t-1:t];this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          `+u[0]/c[0]+`,
          `+u[1]/c[1]+`);
      const vec2 inputShapeRC = vec2(`+o+".0, "+a+`.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `},QA=function(n,e,t,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];var s=n[0],o=n[1],a=n[2],i=n[3];this.outputShape=[s,e,t,i];var u=[r&&e>1?o-1:o,r&&t>1?a-1:a],c=[r&&e>1?e-1:e,r&&t>1?t-1:t];this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          `+u[0]/c[0]+`,
          `+u[1]/c[1]+`,
          `+u[1]/c[1]+`);
      const vec3 inputShapeRC = vec3(`+o+".0, "+a+`.0,
                                     `+a+`.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < `+(i-1)+`;
        bool hasNextRow = coords.z < `+(t-1)+`;

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `},JA=function(n,e,t){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;var r=e.shape,s=r[1],o=r[2],a=n.shape,i=a[1],u=a[2],c=[t&&i>1?s-1:s,t&&u>1?o-1:o],l=[t&&i>1?i-1:i,t&&u>1?u-1:u],h=c[0]/l[0],d=c[1]/l[1],p=1/h,f=1/d,m=2*Math.ceil(p)+2,g=2*Math.ceil(f)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(`+h+`);
        const float widthScale = float(`+d+`);

        const float invHeightScale = float(`+p+`);
        const float invWidthScale = float(`+f+`);

        const int winHeight = int(`+m+`);
        const int winWidth = int(`+g+`);

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= `+i+`) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= `+u+`) {
              continue;
            }

            float sourceFracRow =
              float(`+c[0]+`) *
                (float(dyR) / float(`+l[0]+`));

            float sourceFracCol =
                float(`+c[1]+`) *
                  (float(dyC) / float(`+l[1]+`));

            int sourceNearestRow = int(min(
                float(int(`+s+`) - 1),
                `+t+` ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(`+o+`) - 1),
                `+t+` ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `},ZA=function(n,e,t,r){this.variableNames=["A"],this.outputShape=[];var s=n[0],o=n[1],a=n[2],i=n[3];this.outputShape=[s,e,t,i];var u=[r&&e>1?o-1:o,r&&t>1?a-1:a],c=[r&&e>1?e-1:e,r&&t>1?t-1:t],l=r?"0.5":"0.0";this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          `+u[0]/c[0]+`,
          `+u[1]/c[1]+`);
      const vec2 inputShapeRC = vec2(`+o+".0, "+a+`.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + `+l+`)));

        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `},e$=function(n,e){this.variableNames=["x"];var t=n.length;if(t>4)throw new Error("WebGL backend: Reverse of rank-"+t+" tensor is not yet supported");if(this.outputShape=n,t!==1){var r=n.map(function(o,a){return function(i){return e.indexOf(i)!==-1&&n[i]!==1?n[i]+" - coords["+i+"] - 1":"coords["+i+"]"}(a)}).join(","),s=ht(t);this.userCode=`
      void main() {
        `+s+` coords = getOutputCoords();
        setOutput(getX(`+r+`));
      }
    `}else this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(`+n[0]+` - coord - 1));
        }
      `},t$=function(n,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;var t=n.length;if(t>4)throw new Error("WebGL backend: Reverse of rank-"+t+" tensor is not yet supported");this.outputShape=n;var r=Ln("rc",t),s=r[t-1]+" + 1 < "+this.outputShape[t-1],o=r[t-2]+" + 1 < "+this.outputShape[t-2],a=ht(t);function i(u){var c=n.map(function(l,h){return function(d,p){return e.indexOf(d)!==-1&&n[d]!==1?n[d]+" - "+p[d]+" - 1":""+p[d]}(h,u)});return"getChannel(getX("+c.join(",")+"), vec2("+c.slice(-2).join(",")+"))"}this.userCode=t===1?`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(`+n[0]+` - rc - 1),
            `+n[0]+` - rc - 1);
          if(`+s+`){
              result.g = getChannel(getX(`+n[0]+` - (rc  + 1) - 1),
                `+n[0]+` - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:`
        void main() {
          `+a+` rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = `+function(u){return i(u)}(r.slice())+`;
          if(`+s+`){
            result.g = `+function(u){return u[t-1]="("+u[t-1]+" + 1)",i(u)}(r.slice())+`;
          }
          if(`+o+`) {
            result.b = `+function(u){return u[t-2]="("+u[t-2]+" + 1)",i(u)}(r.slice())+`;
            if(`+s+`) {
              result.a = `+function(u){return u[t-1]="("+u[t-1]+" + 1)",u[t-2]="("+u[t-2]+" + 1)",i(u)}(r.slice())+`;
            }
          }
          setOutput(result);
        }
    `},R0=function(n,e,t,r,s,o,a){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;var i=ht(s.length),u=ht(o.length),c="";t===1?c="i":t===2&&(c="i, j");var l="getIndices("+c+")",h="";r===1?h="i":r===2&&(h="i, coords[1]");var d="getUpdates("+h+")",p=e>1?"strides[j]":"strides";this.userCode=`
        `+i+" strides = "+i+"("+s+`);

        void main() {
          `+u+` coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < `+n+`; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < `+e+`; j++) {
              int index = round(`+l+`);
              flattenedIndex += index * `+p+`;
            }
            if (flattenedIndex == coords[0]) {
              sum += `+d+`;
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `},n$=function(n,e){this.variableNames=["x","segmentIds"];var t=n.windowSize,r=n.batchSize,s=n.inSize,o=n.numSegments,a=o*Math.ceil(s/t);this.outputShape=[r,a];var i=4*Math.floor(t/4),u=t%4,c=`
        sumValue += dot(values, segFilter);
    `,l="";s%t>0&&(l=`
        if (inIdx < 0 || inIdx >= `+s+`) {
          return initializationValue;
        }
      `);var h="";s%t>0&&(h=`
        if (inIdx < 0 || inIdx >= `+s+`) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        `+l+`
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        `+h+`
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          `+o+")) * float("+t+`));
        int currentSeg = int(mod(float(outIdx), float(`+o+`)));

        float sumValue = 0.0;

        for (int i = 0; i < `+i+`; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          `+c+`
        }

        int inIdx = inOffset + `+i+`;
        if (`+(u===1)+`) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          `+c+`
        } else if (`+(u===2)+`) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          `+c+`
        } else if (`+(u===3)+`) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          `+c+`
        }
        setOutput(sumValue);
      }
    `},r$=function(n,e,t){var r,s;if(this.variableNames=["c","a","b"],this.outputShape=e,t>4)throw Error("Where for rank "+t+" is not yet supported");if(t===1)s="resRC",r="resRC";else{for(var o=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[],u=0;u<e.length;u++)i.push(""+o[u]),u<n&&a.push(""+o[u]);r=a.join(),s=i.join()}var c=ht(t);this.userCode=`
      void main() {
        `+c+` resRC = getOutputCoords();
        float cVal = getC(`+r+`);
        if (cVal >= 1.0) {
          setOutput(getA(`+s+`));
        } else {
          setOutput(getB(`+s+`));
        }
      }
    `},s$=function(){function n(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;var t,r=ht(this.rank),s="uniform int start["+this.rank+"];",o=function(a){if(a===1)return"sourceLoc";if(a<=6)return Kp.slice(0,a).map(function(i){return"sourceLoc."+i}).join(",");throw Error("Slicing for rank "+a+" is not yet supported")}(this.rank);t=`
        `+r+` sourceLoc;
        `+r+` coords = getOutputCoords();
        `+e.map(function(a,i){return"sourceLoc."+Kp[i]+" = start["+i+"] + coords."+Kp[i]+";"}).join(`
`)+`
      `,this.userCode=`
      `+s+`
      void main() {
        `+t+`
        setOutput(getSource(`+o+`));
      }
    `}return n.prototype.getCustomSetupFunc=function(e){var t=this;if(e.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+e.length+")");return function(r,s){t.startLoc==null&&(t.startLoc=r.getUniformLocationNoThrow(s,"start"),t.startLoc==null)||r.gl.uniform1iv(t.startLoc,e)}},n}(),Kp=["x","y","z","w","u","v"],o$=function(){function n(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;var t=ht(this.rank),r=Ln("coords",this.rank),s=Ln("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":"vec2("+s.slice(-2).join()+")",a="getChannel(getSource("+s.join()+"), "+o+")",i=`
      result.x = `+a+`;
      if (++`+r[this.rank-1]+" < "+e[this.rank-1]+`) {
        ++`+s[this.rank-1]+`;
        result.y = `+a+`;
        --`+s[this.rank-1]+`;
      }
    `,u=this.rank===1?"":`
      --`+r[this.rank-1]+`;
      if (++`+r[this.rank-2]+" < "+e[this.rank-2]+`) {
        ++`+s[this.rank-2]+`;
        result.z = `+a+`;
        if (++`+r[this.rank-1]+" < "+e[this.rank-1]+`) {
          ++`+s[this.rank-1]+`;
          result.w = `+a+`;
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            `+t+"("+e.map(function(l,h){return"start["+h+"]"}).join()+");":e.map(function(l,h){return s[h]+" = "+r[h]+" + start["+h+"];"}).join(`
`);this.userCode=`
      uniform int start[`+this.rank+`];
      void main() {
        `+t+` coords = getOutputCoords();
        `+t+` sourceLoc;
        `+c+`
        vec4 result = vec4(0.);
        `+i+`
        `+u+`
        setOutput(result);
      }
    `}return n.prototype.getCustomSetupFunc=function(e){var t=this;if(e.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+e.length+")");return function(r,s){t.startLoc==null&&(t.startLoc=r.getUniformLocationNoThrow(s,"start"),t.startLoc==null)||r.gl.uniform1iv(t.startLoc,e)}},n}(),a$=function(n,e,t){this.variableNames=["x"],this.outputShape=t;var r=t.length,s=ht(t.length),o=ht(t.length),a="";if(r===1)a="coords * strides + begin";else{var i=0;a=t.map(function(u,c){return i++,t.length===1?"coords * strides["+c+"] + begin["+c+"]":"coords["+(i-1)+"] * strides["+c+"] + begin["+c+"]"}).join(",")}this.userCode=`
      `+s+" begin = "+s+"("+n+`);
      `+s+" strides = "+s+"("+e+`);

      void main() {
        `+o+` coords = getOutputCoords();
        setOutput(getX(`+a+`));
      }
    `},i$=function(){function n(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}return n.prototype.acquireTexture=function(e,t,r){var s,o=A0(t,r),a=$0(e,o,r);if(a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]),this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this.log();var i=this.freeTextures[a].shift();return this.usedTextures[a].push(i),i}return this.numUsedTextures++,this.log(),o===Hn.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===Hn.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===Hn.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===Hn.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===Hn.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(s),s},n.prototype.releaseTexture=function(e,t,r,s){if(this.freeTextures!=null){var o=$0(t,A0(r,s),s);o in this.freeTextures||(this.freeTextures[o]=[]),this.freeTextures[o].push(e),this.numFreeTextures++,this.numUsedTextures--;var a=this.usedTextures[o],i=a.indexOf(e);if(i<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(i,1),this.log()}},n.prototype.log=function(){if(this.logEnabled){var e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",this.numFreeTextures+" / "+this.numUsedTextures,"("+e+")")}},n.prototype.getNumUsedTextures=function(){return this.numUsedTextures},n.prototype.getNumFreeTextures=function(){return this.numFreeTextures},n.prototype.dispose=function(){var e=this;if(this.freeTextures!=null){for(var t in this.freeTextures)this.freeTextures[t].forEach(function(r){e.gpgpu.deleteMatrixTexture(r)});for(var t in this.usedTextures)this.usedTextures[t].forEach(function(s){e.gpgpu.deleteMatrixTexture(s)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0}},n}();function A0(n,e){if(n===Gn.UPLOAD)return Hn.PACKED_2X2_FLOAT32;if(n===Gn.RENDER||n==null)return function(t){return se().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Hn.PACKED_2X2_FLOAT32:Hn.UNPACKED_FLOAT32:t?Hn.PACKED_2X2_FLOAT16:Hn.UNPACKED_FLOAT16}(e);if(n===Gn.DOWNLOAD||n===Gn.PIXELS)return Hn.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+n)}function $0(n,e,t){return n[0]+"_"+n[1]+"_"+e+"_"+t}var u$=function(n,e){this.variableNames=["A"];for(var t=new Array(n.length),r=0;r<t.length;r++)t[r]=n[r]*e[r];this.outputShape=t,this.rank=t.length;var s=ht(this.rank),o=function(a){var i=a.length;if(i>5)throw Error("Tile for rank "+i+" is not yet supported");if(i===1)return"imod(resRC, "+a[0]+")";for(var u=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],c=[],l=0;l<a.length;l++)c.push("imod("+u[l]+", "+a[l]+")");return c.join()}(n);this.userCode=`
      void main() {
        `+s+` resRC = getOutputCoords();
        setOutput(getA(`+o+`));
      }
    `},Xp=1.7580993408473768,Yp=1.0507009873554805,ze=function(n,e){this.variableNames=["A"],this.outputShape=n,this.userCode=`
      float unaryOperation(float x) {
        `+e+`
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `},wr="if (isnan(x)) return x;",c$="return x;",D0="return abs(x);",F0=wr+`
  return (x < 0.0) ? 0.0 : x;
`,O0=wr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,_0="return (x >= 0.0) ? x : (exp(x) - 1.0);",l$=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = `+Xp+`;
  float scale = `+Yp+`;
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,M0="return -x;",L0="return ceil(x);",P0="return floor(x);",B0="return exp(x);",z0="return exp(x) - 1.0;",h$=wr+`
  return sin(x);
`,d$=wr+`
  return cos(x);
`,p$=wr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,f$=wr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,m$=wr+`
  return atan(x);
`,g$=wr+"return log(x + sqrt(x * x + 1.0));",x$=wr+`
  if (x < 1.0) return NAN;
  return log(x + sqrt(x * x - 1.0));`,y$=wr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
  return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,pl="return x;",v$="return x;",V0=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,W0=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,U0=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Fi=function(n,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.userCode=`
      vec4 unaryOperation(vec4 x) {
        `+e+`
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `},b$=function(n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=n;var e=n.length,t=Ln("rc",e),r=ht(e),s=function(i,u){if(i===1)return"rc";for(var c="",l=0;l<i;l++)c+=u[l],l<i-1&&(c+=",");return c}(e,t),o=t.slice(-2),a=e<=1?"rc":"vec2("+o.join(",")+")";this.userCode=`
      void main() {
        `+r+` rc = getOutputCoords();
        vec4 packedInput = getA(`+s+`);

        setOutput(getChannel(packedInput, `+a+`));
      }
    `},fl={};function ml(n,e){if(e===void 0&&(e=!1),n==="linear")return e?v$:c$;if(n==="relu")return e?V0:F0;if(n==="elu")return e?U0:_0;if(n==="relu6")return e?W0:O0;if(n==="prelu")return e?C0:w0;throw new Error("Activation "+n+" has not been implemented for the WebGL backend.")}var w$=600,C$=function(n){function e(t){var r,s=n.call(this)||this;if(s.pendingRead=new WeakMap,s.pendingDisposal=new WeakSet,s.dataRefCount=new WeakMap,s.numBytesInGPU=0,s.uploadWaitMs=0,s.downloadWaitMs=0,s.warnedAboutMemory=!1,s.pendingDeletes=0,s.disposed=!1,!se().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(t==null){var o=Mr(se().getNumber("WEBGL_VERSION"));s.binaryCache=((r=se().getNumber("WEBGL_VERSION"))in fl||(fl[r]={}),fl[r]),s.gpgpu=new _A(o),s.canvas=o.canvas,s.gpgpuCreatedLocally=!0}else s.gpgpu=t,s.binaryCache={},s.gpgpuCreatedLocally=!1,s.canvas=t.gl.canvas;return s.textureManager=new i$(s.gpgpu),s.numMBBeforeWarning=se().global.screen==null?1024:se().global.screen.height*se().global.screen.width*window.devicePixelRatio*w$/1024/1024,s.texData=new o0(s,H),s}return xr(e,n),e.prototype.numDataIds=function(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes},e.prototype.write=function(t,r,s){if(se().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");var o={};return this.texData.set(o,{shape:r,dtype:s,values:t,usage:Gn.UPLOAD}),o},e.prototype.move=function(t,r,s,o){if(se().getBool("DEBUG")&&this.checkNumericalProblems(r),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:o,values:r,usage:Gn.UPLOAD})},e.prototype.readSync=function(t){var r=this.texData.get(t),s=r.values,o=r.dtype,a=r.complexTensors,i=r.slice,u=r.shape,c=r.isPacked;if(i!=null){var l=void 0;l=c?new Fi(u,pl):new ze(u,pl);var h=this.runWebGLProgram(l,[{dataId:t,shape:u,dtype:o}],o),d=this.readSync(h.dataId);return this.disposeData(h.dataId),d}if(s!=null)return this.convertAndCacheOnCPU(t);if(o==="string")return s;var p,f,m=this.activeTimers!=null;return m&&(p=vr()),o==="complex64"?f=Bp(a.real.dataSync(),a.imag.dataSync()):f=this.getValuesFromTexture(t),m&&(this.downloadWaitMs+=vr()-p),this.convertAndCacheOnCPU(t,f)},e.prototype.read=function(t){return Ie(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h,d,p,f,m,g,x,y,b,v,w,C,T,S;return ke(this,function(k){switch(k.label){case 0:if(this.pendingRead.has(t))return r=this.pendingRead.get(t),[2,new Promise(function(N){return r.push(N)})];if(s=this.texData.get(t),o=s.values,a=s.shape,i=s.slice,u=s.dtype,c=s.complexTensors,l=s.isPacked,i!=null)return h=void 0,h=l?new Fi(a,pl):new ze(a,pl),d=this.runWebGLProgram(h,[{dataId:t,shape:a,dtype:u}],u),p=this.read(d.dataId),this.disposeData(d.dataId),[2,p];if(o!=null)return[2,this.convertAndCacheOnCPU(t)];if(!se().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&se().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");return f=null,u!=="complex64"&&se().get("WEBGL_BUFFER_SUPPORTED")&&(m=this.decode(t),g=this.texData.get(m.dataId),f=(S=this.gpgpu).createBufferFromTexture.apply(S,[g.texture].concat(Si(a)))),this.pendingRead.set(t,[]),u==="complex64"?[3,2]:[4,this.gpgpu.createAndWaitForFence()];case 1:k.sent(),k.label=2;case 2:return u!=="complex64"?[3,4]:[4,Promise.all([c.real.data(),c.imag.data()])];case 3:return y=k.sent(),b=y[0],v=y[1],x=Bp(b,v),[3,5];case 4:f==null?x=this.getValuesFromTexture(t):(w=ve(a),x=this.gpgpu.downloadFloat32MatrixFromBuffer(f,w)),k.label=5;case 5:return m!=null&&this.disposeData(m.dataId),C=this.convertAndCacheOnCPU(t,x),T=this.pendingRead.get(t),this.pendingRead.delete(t),T.forEach(function(N){return N(C)}),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),[2,C]}})})},e.prototype.checkNumericalProblems=function(t){if(t!=null)for(var r=0;r<t.length;r++){var s=t[r];if(!bE(s))throw se().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error("The value "+s+" cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'"):Error("The value "+s+" cannot be represented on this device.")}},e.prototype.getValuesFromTexture=function(t){var r,s=this.texData.get(t),o=s.shape,a=s.dtype,i=s.isPacked,u=ve(o);if(se().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){var c=this.decode(t),l=this.texData.get(c.dataId),h=(r=this.gpgpu).downloadMatrixFromPackedTexture.apply(r,[l.texture].concat(Si(o))).subarray(0,u);return this.disposeData(c.dataId),h}var d=se().getBool("WEBGL_PACK")&&i===!0,p=d?kp(o):o,f=d?new hA(p):new lA(p),m=this.runWebGLProgram(f,[{shape:p,dtype:a,dataId:t}],"float32"),g=this.texData.get(m.dataId),x=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(g.texture,g.texShape[0],g.texShape[1]).subarray(0,u);return this.disposeData(m.dataId),x},e.prototype.time=function(t){return Ie(this,void 0,void 0,function(){var r,s,o,a,i,u,c;return ke(this,function(l){switch(l.label){case 0:return r=this.activeTimers,s=[],o=!1,this.programTimersStack==null?(this.programTimersStack=s,o=!0):this.activeTimers.push(s),this.activeTimers=s,t(),a=fo(this.activeTimers.map(function(h){return h.query})).filter(function(h){return h!=null}),i=fo(this.activeTimers.map(function(h){return h.name})).filter(function(h){return h!=null}),this.activeTimers=r,o&&(this.programTimersStack=null),u={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[4,Promise.all(a)]:[3,2];case 1:return c=l.sent(),u.kernelMs=Wy(c),u.getExtraProfileInfo=function(){return c.map(function(h,d){return{name:i[d],ms:h}}).map(function(h){return h.name+": "+h.ms}).join(", ")},[3,3];case 2:u.kernelMs={error:"WebGL query timers are not supported in this environment."},l.label=3;case 3:return this.uploadWaitMs=0,this.downloadWaitMs=0,[2,u]}})})},e.prototype.memory=function(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU}},e.prototype.startTimer=function(){return se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:vr(),endMs:null}},e.prototype.endTimer=function(t){return se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=vr(),t)},e.prototype.getQueryTime=function(t){return Ie(this,void 0,void 0,function(){var r;return ke(this,function(s){return se().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[2,this.gpgpu.waitForQueryAndGetTime(t)]:[2,(r=t).endMs-r.startMs]})})},e.prototype.disposeData=function(t){if(!this.pendingDisposal.has(t)){if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(this.texData.has(t)){this.releaseGPUData(t);var r=this.texData.get(t).complexTensors;r!=null&&(r.real.dispose(),r.imag.dispose()),this.texData.delete(t)}}},e.prototype.releaseGPUData=function(t){var r=this.texData.get(t),s=r.texture,o=r.dtype,a=r.texShape,i=r.usage,u=r.isPacked,c=r.slice,l=c&&c.origDataId||t,h=this.dataRefCount.get(l);h>1?this.dataRefCount.set(l,h-1):(this.dataRefCount.delete(l),s!=null&&(this.numBytesInGPU-=this.computeBytes(a,o),this.textureManager.releaseTexture(s,a,i,u)));var d=this.texData.get(t);d.texture=null,d.texShape=null,d.isPacked=!1,d.slice=null},e.prototype.getTexture=function(t){return this.uploadToGPU(t),this.texData.get(t).texture},e.prototype.getDataInfo=function(t){return this.texData.get(t)},e.prototype.getCPUBackend=function(){return se().getBool("WEBGL_CPU_FORWARD")?(this.cpuBackend==null&&(this.cpuBackend=H.findBackend("cpu")),this.cpuBackend):null},e.prototype.shouldExecuteOnCPU=function(t,r){var s=this;return r===void 0&&(r=128),this.getCPUBackend()!=null&&t.every(function(o){return s.texData.get(o.dataId).texture==null&&ve(o.shape)<r})},e.prototype.getGPGPUContext=function(){return this.gpgpu},e.prototype.complex=function(t,r){var s=this.makeOutput(t.shape,"complex64");return this.texData.get(s.dataId).complexTensors={real:H.keep(t.clone()),imag:H.keep(r.clone())},s},e.prototype.real=function(t){return this.texData.get(t.dataId).complexTensors.real.clone()},e.prototype.imag=function(t){return this.texData.get(t.dataId).complexTensors.imag.clone()},e.prototype.slice=function(t,r,s){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.slice(t,r,s);if(ve(s)===0)return Qt([],s,t.dtype);var o=this.texData.get(t.dataId).isPacked,a=n0(t.shape,r,s);if(o||!a){var i=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new o$(s):new s$(s),u=i.getCustomSetupFunc(r);return this.compileAndRun(i,[t],null,u)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,r,s)},e.prototype.shallowSlice=function(t,r,s){var o=this.texData.get(t.dataId),a=this.makeOutput(s,t.dtype),i=this.texData.get(a.dataId);Object.assign(i,o),i.shape=s,i.dtype=t.dtype;var u=r0(r,t.strides);o.slice&&(u+=o.slice.flatOffset),i.slice={flatOffset:u,origDataId:o.slice&&o.slice.origDataId||t.dataId};var c=this.dataRefCount.get(i.slice.origDataId)||1;return this.dataRefCount.set(i.slice.origDataId,c+1),a},e.prototype.stridedSlice=function(t,r,s,o){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.stridedSlice(t,r,s,o);var a=_p(r,s,o);if(a.some(function(u){return u===0}))return Qt([],a);var i=new a$(r,o,a);return this.compileAndRun(i,[t])},e.prototype.reverse=function(t,r){var s=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new t$(t.shape,r):new e$(t.shape,r);return this.compileAndRun(s,[t])},e.prototype.concat=function(t,r){if(t[0].dtype==="complex64"){var s=t.map(function(p){return jn(p)}),o=t.map(function(p){return br(p)});return Yt(this.concat(s,r),this.concat(o,r))}if(this.shouldExecuteOnCPU(t))return this.cpuBackend.concat(t,r);if(t.length===1)return t[0];if(t.length>se().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){var a=Math.floor(t.length/2),i=this.concat(t.slice(0,a),r),u=this.concat(t.slice(a),r);return this.concat([i,u],r)}if(se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].rank>1){var c=new YR(t.map(function(p){return p.shape}),r);return this.compileAndRun(c,t)}var l=fa(t.map(function(p){return p.shape}),r),h=t.map(function(p){return p.as2D(-1,ve(p.shape.slice(r)))}),d=new XR(h.map(function(p){return p.shape}));return this.compileAndRun(d,h).reshape(l)},e.prototype.neg=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.neg(t);if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,M0,t.dtype);var r=new ze(t.shape,M0);return this.compileAndRun(r,[t])},e.prototype.batchMatMul=function(t,r,s,o){var a=s?t.shape[2]:t.shape[1],i=o?r.shape[1]:r.shape[2],u=s?t.shape[1]:t.shape[2],c=t.shape[0];if((a===1||i===1)&&u>1e3){s&&(t=sr(t,[0,2,1])),o&&(r=sr(r,[0,2,1]));var l=i===1?t:t.as3D(c,u,1),h=i===1?2:1,d=i===1?r.as3D(c,1,u):r;return this.multiply(l,d).sum(h,!0)}var p=on(t.dtype,r.dtype),f=new qp(t.shape,[c,a,i],s,o);return this.compileAndRun(f,[t,r],p)},e.prototype.fusedBatchMatMul=function(t){var r=t.a,s=t.b,o=t.transposeA,a=t.transposeB,i=t.bias,u=t.activation,c=t.preluActivationWeights,l=o?r.shape[2]:r.shape[1],h=a?s.shape[1]:s.shape[2],d=r.shape[0],p=on(r.dtype,s.dtype),f=i!=null,m=c!=null,g=u?ml(u,!0):null,x=new qp(r.shape,[d,l,h],o,a,f,g,m),y=[r,s];return i&&y.push(i),c&&y.push(c),this.compileAndRun(x,y,p)},e.prototype.multiply=function(t,r){if(t.dtype==="complex64"){var s=this.texData.get(t.dataId),o=this.texData.get(r.dataId),a=new v0(WR,t.shape,r.shape),i=new v0(UR,t.shape,r.shape),u=[this.makeComplexComponentTensorInfo(t,s.complexTensors.real),this.makeComplexComponentTensorInfo(t,s.complexTensors.imag),this.makeComplexComponentTensorInfo(r,o.complexTensors.real),this.makeComplexComponentTensorInfo(r,o.complexTensors.imag)],c=this.compileAndRun(a,u),l=this.compileAndRun(i,u),h=this.complex(c,l);return c.dispose(),l.dispose(),h}if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.multiply(t,r);if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,b0,t.dtype);var d=new It(b0,t.shape,r.shape);return this.compileAndRun(d,[t,r],t.dtype)},e.prototype.batchNormalization=function(t,r,s,o,a,i){var u=[t,r,s],c=null;i!=null&&(c=i.shape,u.push(i));var l=null;if(a!=null&&(l=a.shape,u.push(a)),se().getBool("WEBGL_PACK_NORMALIZATION")){var h=new VR(t.shape,r.shape,s.shape,c,l,o);return this.compileAndRun(h,u)}var d=new zR(t.shape,r.shape,s.shape,c,l,o);return this.compileAndRun(d,u)},e.prototype.localResponseNormalization4D=function(t,r,s,o,a){var i=se().getBool("WEBGL_PACK_NORMALIZATION")?new BA(t.shape,r,s,o,a):new LA(t.shape,r,s,o,a);return this.compileAndRun(i,[t])},e.prototype.LRNGrad=function(t,r,s,o,a,i,u){var c=new PA(r.shape,o,a,i,u);return this.compileAndRun(c,[r,s,t])},e.prototype.tile=function(t,r){if(t.dtype==="string"){var s=this.readSync(t.dataId).map(function(a){return vi(a)});return f0(Le(t.shape,t.dtype,s),r)}var o=new u$(t.shape,r);return this.compileAndRun(o,[t])},e.prototype.pad=function(t,r,s){var o=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qA(t.shape,r,s):new HA(t.shape,r,s);return this.compileAndRun(o,[t])},e.prototype.gather=function(t,r,s){if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.gather(t,r,s);var o=new xA(t.shape,r.size,s);return this.compileAndRun(o,[t,r])},e.prototype.batchToSpaceND=function(t,r,s){_(t.rank<=4,function(){return"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"});var o=r.reduce(function(h,d){return h*d}),a=Zc(t.shape,r,o),i=el(a.length,r.length),u=tl(t.shape,r,o),c=gv(s,r.length),l=xv(u,s,r.length);return sr(t.reshape(a),i).reshape(u).slice(c,l)},e.prototype.spaceToBatchND=function(t,r,s){_(t.rank<=4,function(){return"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"});var o=r.reduce(function(d,p){return d*p}),a=[[0,0]];a.push.apply(a,s);for(var i=1+r.length;i<t.shape.length;++i)a.push([0,0]);var u=t.pad(a),c=Zc(u.shape,r,o,!1),l=el(c.length,r.length,!1),h=tl(u.shape,r,o,!1);return sr(u.reshape(c),l).reshape(h)},e.prototype.reduce=function(t,r,s){var o=t.shape[0],a=t.shape[1],i=Op(a),u=new jA({windowSize:i,inSize:a,batchSize:o},r),c=this.compileAndRun(u,[t],s);return c.shape[1]===1?c:this.reduce(c,r,s)},e.prototype.argReduce=function(t,r,s){s===void 0&&(s=null);var o=t.shape[0],a=t.shape[1];s!=null&&(o=s.shape[0],a=s.shape[1]);var i=Op(a),u=new $R({windowSize:i,inSize:a,batchSize:o},r,s==null),c=[t];s!=null&&c.push(s);var l=this.compileAndRun(u,c,"int32");return l.shape[1]===1?l:this.argReduce(t,r,l)},e.prototype.argReducePacked=function(t,r,s){s===void 0&&(s=null);var o=s!=null?s.shape:t.shape,a=Op(o[o.length-1]),i=new LR(o,a,r,s==null),u=s==null?[t]:[t,s],c=this.compileAndRun(i,u,"int32");return c.rank===t.rank?this.argReducePacked(t,r,c):c},e.prototype.sum=function(t,r){qn("sum",r,t.rank);var s=fn(t.shape,r),o=s[0],a=ve(s[1]),i=t.as2D(-1,a),u=gp(t.dtype);return this.reduce(i,"sum",u).reshape(o)},e.prototype.prod=function(t,r){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.prod(t,r);var s=fn(t.shape,r),o=s[0],a=ve(s[1]),i=t.as2D(-1,a),u=gp(t.dtype);return this.reduce(i,"prod",u).reshape(o)},e.prototype.unsortedSegmentSum=function(t,r,s){var o=0,a=Lr([o],t.rank),i=t;a!=null&&(i=sr(t,a),o=Pr(1,t.rank)[0]);var u=function(p,f,m){for(var g=[],x=p.length,y=0;y<x;y++)y!==f?g.push(p[y]):g.push(m);return g}(i.shape,o,s),c=ve([i.shape[o]]),l=i.as2D(-1,c),h=gp(t.dtype),d=this.segOpCompute(l,"unsortedSegmentSum",r,h,s).reshape(u);return a!=null&&(d=sr(d,Np(a))),d},e.prototype.segOpCompute=function(t,r,s,o,a){var i=t.shape[0],u=t.shape[1],c=function(d,p){var f,m=!1;for(d<=e0?(f=d,m=!0):f=Bc(d,Math.floor(Math.sqrt(d)));!m;)f>p||f===d?m=!0:f=Bc(d,f+1);return f}(u,a),l=new n$({windowSize:c,inSize:u,batchSize:i,numSegments:a}),h=this.compileAndRun(l,[t,s],o);return h.shape[1]===a?h:(s=Ti(0,a).tile([u/c]),this.segOpCompute(h,r,s,o,a))},e.prototype.argMinMaxReduce=function(t,r,s){var o=[r];if(qn("arg"+s.charAt(0).toUpperCase()+s.slice(1),o,t.rank),!se().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){var a=fn(t.shape,o),i=a[0],u=ve(a[1]),c=t.as2D(-1,u);return this.argReduce(c,s).reshape(i)}return this.argReducePacked(t,s)},e.prototype.argMin=function(t,r){return this.argMinMaxReduce(t,r,"min")},e.prototype.argMax=function(t,r){return this.argMinMaxReduce(t,r,"max")},e.prototype.cumsum=function(t,r,s,o){if(r!==t.rank-1)throw new Error("WebGL cumsum shader expects an inner-most axis="+(t.rank-1)+" but got axis="+r);var a=new oA(t.shape,s,o);return this.compileAndRun(a,[t])},e.prototype.equal=function(t,r){if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return vec4(equal(a, b));
`,"bool");var s=new It("return float(a == b);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.notEqual=function(t,r){if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return vec4(notEqual(a, b));
`,"bool");var s=new It("return float(a != b);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.less=function(t,r){if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.less(t,r);if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return vec4(lessThan(a, b));
`,"bool");var s=new It("return float(a < b);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.lessEqual=function(t,r){if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return vec4(lessThanEqual(a, b));
`,"bool");var s=new It("return float(a <= b);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.greater=function(t,r){if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.greater(t,r);if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return vec4(greaterThan(a, b));
`,"bool");var s=new It("return float(a > b);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.greaterEqual=function(t,r){if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return vec4(greaterThanEqual(a, b));
`,"bool");var s=new It("return float(a >= b);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.logicalNot=function(t){var r=new ze(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(r,[t])},e.prototype.logicalAnd=function(t,r){if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,"bool");var s=new It("return float(a >= 1.0 && b >= 1.0);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.logicalOr=function(t,r){if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,"bool");var s=new It("return float(a >= 1.0 || b >= 1.0);",t.shape,r.shape);return this.compileAndRun(s,[t,r],"bool")},e.prototype.select=function(t,r,s){var o=new r$(t.rank,r.shape,r.rank);return this.compileAndRun(o,[t,r,s],on(r.dtype,s.dtype))},e.prototype.where=function(t){Xc("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");var r=t.dataSync();return Wp(t.shape,r)},e.prototype.topk=function(t,r,s){return m0(t.dataSync(),t.shape,t.dtype,r)},e.prototype.min=function(t,r){qn("min",r,t.rank);var s=fn(t.shape,r),o=s[0],a=ve(s[1]),i=t.as2D(-1,a);return this.reduce(i,"min",i.dtype).reshape(o)},e.prototype.minimum=function(t,r){if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.minimum(t,r);var s=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zr(`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,t.shape,r.shape):new It(`
  if (isnan(a)) return a;
  if (isnan(b)) return b;

  return min(a, b);
`,t.shape,r.shape);return this.compileAndRun(s,[t,r])},e.prototype.mod=function(t,r){var s=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zr(`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,t.shape,r.shape):new It(`if (b == 0.0) return NAN;
  return mod(a, b);`,t.shape,r.shape);return this.compileAndRun(s,[t,r])},e.prototype.max=function(t,r){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.max(t,r);qn("max",r,t.rank);var s=fn(t.shape,r),o=s[0],a=ve(s[1]),i=t.as2D(-1,a);return this.reduce(i,"max",i.dtype).reshape(o)},e.prototype.maximum=function(t,r){if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.maximum(t,r);var s=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zr(`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,t.shape,r.shape):new It(`
  if (isnan(a)) return a;
  if (isnan(b)) return b;

  return max(a, b);
`,t.shape,r.shape);return this.compileAndRun(s,[t,r])},e.prototype.all=function(t,r){qn("all",r,t.rank);var s=fn(t.shape,r),o=s[0],a=ve(s[1]),i=t.as2D(-1,a);return this.reduce(i,"all",i.dtype).reshape(o)},e.prototype.any=function(t,r){qn("any",r,t.rank);var s=fn(t.shape,r),o=s[0],a=ve(s[1]),i=t.as2D(-1,a);return this.reduce(i,"any",i.dtype).reshape(o)},e.prototype.floorDiv=function(t,r){if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,"int32");var s=new It(`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,t.shape,r.shape);return this.compileAndRun(s,[t,r],"int32")},e.prototype.add=function(t,r){if(t.dtype==="complex64"&&r.dtype==="complex64")return this.complexSeparableBinaryOp(t,r,Gp);if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.add(t,r);var s=on(t.dtype,r.dtype);if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,Gp,s);var o=new It(Gp,t.shape,r.shape);return this.compileAndRun(o,[t,r],s)},e.prototype.packedUnaryOp=function(t,r,s){var o=new Fi(t.shape,r);return this.compileAndRun(o,[t],s)},e.prototype.packedBinaryOp=function(t,r,s,o,a){a===void 0&&(a=!1);var i=new zr(s,t.shape,r.shape,a);return this.compileAndRun(i,[t,r],o)},e.prototype.complexSeparableBinaryOp=function(t,r,s){var o=this,a=this.texData.get(t.dataId),i=this.texData.get(r.dataId),u=[[a.complexTensors.real,i.complexTensors.real],[a.complexTensors.imag,i.complexTensors.imag]].map(function(d){var p=d[0],f=d[1],m=o.makeComplexComponentTensorInfo(t,p),g=o.makeComplexComponentTensorInfo(r,f),x=new It(s,t.shape,r.shape);return o.compileAndRun(x,[m,g],on(p.dtype,f.dtype))}),c=u[0],l=u[1],h=this.complex(c,l);return c.dispose(),l.dispose(),h},e.prototype.makeComplexComponentTensorInfo=function(t,r){return{dataId:r.dataId,dtype:r.dtype,shape:t.shape}},e.prototype.addN=function(t){if(t.length===1)return t[0];if(t.length>se().get("WEBGL_MAX_TEXTURES_IN_SHADER")){var r=Math.floor(t.length/2),s=this.addN(t.slice(0,r)),o=this.addN(t.slice(r));return this.addN([s,o])}var a=t.map(function(c){return c.dtype}).reduce(function(c,l){return on(c,l)}),i=t.map(function(c){return c.shape}),u=se().getBool("WEBGL_PACK")?new AR(t[0].shape,i):new RR(t[0].shape,i);return this.compileAndRun(u,t,a)},e.prototype.subtract=function(t,r){if(t.dtype==="complex64"&&r.dtype==="complex64")return this.complexSeparableBinaryOp(t,r,Hp);if(this.shouldExecuteOnCPU([t,r]))return this.cpuBackend.subtract(t,r);var s=on(t.dtype,r.dtype);if(se().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,r,Hp,t.dtype);var o=new It(Hp,t.shape,r.shape);return this.compileAndRun(o,[t,r],s)},e.prototype.pow=function(t,r){var s=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zr(`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,t.shape,r.shape):new It(`
if(a < 0.0 && floor(b) < b){
  return NAN;
}
if (b == 0.0) {
  return 1.0;
}
return (round(mod(b, 2.0)) != 1) ?
    pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,t.shape,r.shape),o=on(t.dtype,r.dtype);return this.compileAndRun(s,[t,r],o)},e.prototype.ceil=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.ceil(t);if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,L0,t.dtype);var r=new ze(t.shape,L0);return this.compileAndRun(r,[t])},e.prototype.floor=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.floor(t);if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,P0,t.dtype);var r=new ze(t.shape,P0);return this.compileAndRun(r,[t])},e.prototype.sign=function(t){var r=new ze(t.shape,`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`);return this.compileAndRun(r,[t])},e.prototype.isNaN=function(t){var r=new ze(t.shape,"return float(isnan(x));");return this.compileAndRun(r,[t],"bool")},e.prototype.isInf=function(t){var r=new ze(t.shape,"return float(isinf(x));");return this.compileAndRun(r,[t],"bool")},e.prototype.isFinite=function(t){var r=new ze(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(r,[t],"bool")},e.prototype.round=function(t){var r=new ze(t.shape,`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`);return this.compileAndRun(r,[t])},e.prototype.exp=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.exp(t);if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,B0,t.dtype);var r=new ze(t.shape,B0);return this.compileAndRun(r,[t])},e.prototype.expm1=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.expm1(t);if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,z0,t.dtype);var r=new ze(t.shape,z0);return this.compileAndRun(r,[t])},e.prototype.softmax=function(t,r){var s=Ot([r],t.shape),o=this.max(t,s),a=Mn(o.shape,s),i=this.subtract(t,o.reshape(a)),u=this.exp(i),c=this.sum(u,s).reshape(a);return ds(u,c)},e.prototype.log=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.log(t);if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,`
  vec4 result = log(x);
  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));
  result.r = isNaN.r == 1.0 ? NAN : result.r;
  result.g = isNaN.g == 1.0 ? NAN : result.g;
  result.b = isNaN.b == 1.0 ? NAN : result.b;
  result.a = isNaN.a == 1.0 ? NAN : result.a;

  return result;
`,t.dtype);var r=new ze(t.shape,`if (x < 0.0) return NAN;
  return log(x);`);return this.compileAndRun(r,[t])},e.prototype.log1p=function(t){var r=new ze(t.shape,"return log(1.0 + x);");return this.compileAndRun(r,[t])},e.prototype.sqrt=function(t){var r=new ze(t.shape,"return sqrt(x);");return this.compileAndRun(r,[t])},e.prototype.rsqrt=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.rsqrt(t);var r=new ze(t.shape,"return inversesqrt(x);");return this.compileAndRun(r,[t])},e.prototype.reciprocal=function(t){var r=new ze(t.shape,"return 1.0 / x;");return this.compileAndRun(r,[t])},e.prototype.relu=function(t){var r;return r=se().getBool("WEBGL_PACK")?new Fi(t.shape,V0):new ze(t.shape,F0),this.compileAndRun(r,[t])},e.prototype.relu6=function(t){var r;return r=se().getBool("WEBGL_PACK")?new Fi(t.shape,W0):new ze(t.shape,O0),this.compileAndRun(r,[t])},e.prototype.prelu=function(t,r){var s=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zr(C0,t.shape,r.shape):new It(w0,t.shape,r.shape);return this.compileAndRun(s,[t,r])},e.prototype.elu=function(t){if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,U0,t.dtype);var r=new ze(t.shape,_0);return this.compileAndRun(r,[t])},e.prototype.eluDer=function(t,r){var s=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zr(`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,t.shape,r.shape):new It("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,r.shape);return this.compileAndRun(s,[t,r])},e.prototype.selu=function(t){var r=new ze(t.shape,l$);return this.compileAndRun(r,[t])},e.prototype.int=function(t){var r=new ze(t.shape,"return float(int(x));");return this.compileAndRun(r,[t],"int32")},e.prototype.clip=function(t,r,s){var o,a=(o=se().getBool("WEBGL_PACK_CLIP")?new jR(t.shape):new qR(t.shape)).getCustomSetupFunc(r,s);return this.compileAndRun(o,[t],null,a)},e.prototype.abs=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.abs(t);if(se().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,D0,t.dtype);var r=new ze(t.shape,D0);return this.compileAndRun(r,[t])},e.prototype.complexAbs=function(t){var r=this.texData.get(t.dataId),s=new KR(t.shape),o=[this.makeComplexComponentTensorInfo(t,r.complexTensors.real),this.makeComplexComponentTensorInfo(t,r.complexTensors.imag)];return this.compileAndRun(s,o)},e.prototype.sigmoid=function(t){var r=new ze(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(r,[t])},e.prototype.softplus=function(t){var r=new ze(t.shape,`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`);return this.compileAndRun(r,[t])},e.prototype.sin=function(t){var r=new ze(t.shape,h$);return this.compileAndRun(r,[t])},e.prototype.cos=function(t){var r=new ze(t.shape,d$);return this.compileAndRun(r,[t])},e.prototype.tan=function(t){var r=new ze(t.shape,"return tan(x);");return this.compileAndRun(r,[t])},e.prototype.asin=function(t){var r=new ze(t.shape,p$);return this.compileAndRun(r,[t])},e.prototype.acos=function(t){var r=new ze(t.shape,f$);return this.compileAndRun(r,[t])},e.prototype.atan=function(t){var r=new ze(t.shape,m$);return this.compileAndRun(r,[t])},e.prototype.atan2=function(t,r){var s=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zr(`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;

  return result;
`,t.shape,r.shape):new It(`
  if (isnan(a)) return a;
  if (isnan(b)) return b;

  return atan(a, b);
`,t.shape,r.shape);return this.compileAndRun(s,[t,r])},e.prototype.sinh=function(t){var r=new ze(t.shape,`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`);return this.compileAndRun(r,[t])},e.prototype.cosh=function(t){var r=new ze(t.shape,`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`);return this.compileAndRun(r,[t])},e.prototype.tanh=function(t){var r=new ze(t.shape,`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`);return this.compileAndRun(r,[t])},e.prototype.asinh=function(t){var r=new ze(t.shape,g$);return this.compileAndRun(r,[t])},e.prototype.acosh=function(t){var r=new ze(t.shape,x$);return this.compileAndRun(r,[t])},e.prototype.atanh=function(t){var r=new ze(t.shape,y$);return this.compileAndRun(r,[t])},e.prototype.erf=function(t){var r=new ze(t.shape,`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = 0.3275911;
  float a1 = 0.254829592;
  float a2 = -0.284496736;
  float a3 = 1.421413741;
  float a4 = -1.453152027;
  float a5 = 1.061405429;

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`);return this.compileAndRun(r,[t])},e.prototype.step=function(t,r){var s=new ze(t.shape,function(o){return o===void 0&&(o=0),wr+`
    return x > 0.0 ? 1.0 : float(`+o+`);
  `}(r));return this.compileAndRun(s,[t])},e.prototype.conv2dByMatMul=function(t,r,s,o,a,i){var u=t.shape,c=this.texData.get(t.dataId),l=s.inChannels,h=u[0]*u[1]*u[2],d=s.outChannels,p=s.dataFormat==="channelsLast",f=(h===1||d===1)&&l>1e3,m=u[2]%2!=0&&!!c.isPacked;if(f||!se().getBool("WEBGL_LAZILY_UNPACK")||!se().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!m){var g=p?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],x=this.reshape(t,[1,g,s.inChannels]),y=this.reshape(r,[1,s.inChannels,s.outChannels]);return this.reshape(this.fusedBatchMatMul({a:x,b:y,transposeA:!1,transposeB:!1,bias:o,activation:a,preluActivationWeights:i}),s.outShape)}var b=p?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),v={dataId:t.dataId,shape:[1,b,s.inChannels],dtype:t.dtype},w=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,_(Kc(c.shape,v.shape),function(){return"packed reshape "+c.shape+" to "+v.shape+" isn't free"});var C=this.reshape(r,[1,s.inChannels,s.outChannels]),T=this.fusedBatchMatMul({a:v,b:C,transposeA:!1,transposeB:!1,bias:o,activation:a,preluActivationWeights:i}),S=this.texData.get(T.dataId);return _(S.isPacked,function(){return"batchMatMul result is expected to be packed"}),c.shape=w,S.shape=s.outShape,H.makeTensorFromDataId(T.dataId,s.outShape,T.dtype)},e.prototype.conv2dWithIm2Row=function(t,r,s,o,a,i){var u=s.filterWidth,c=s.filterHeight,l=s.inChannels,h=s.outWidth,d=s.outHeight,p=s.dataFormat==="channelsLast",f=u*c*l,m=d*h,g=[f,m],x=t.squeeze([0]),y=r.reshape([1,f,-1]),b=new MA(g,x.shape,s),v=this.compileAndRun(b,[x]).reshape([1,g[0],g[1]]),w=o!=null,C=i!=null,T=a?ml(a,!0):null,S=new qp(v.shape,[1,m,s.outChannels],!0,!1,w,T,C),k=[v,y];o&&k.push(o),C&&k.push(i);var N=this.compileAndRun(S,k);return p?N.reshape([1,d,h,s.outChannels]):N.reshape([1,s.outChannels,d,h])},e.prototype.fusedConv2d=function(t){var r=t.input,s=t.filter,o=t.convInfo,a=t.bias,i=t.activation,u=t.preluActivationWeights;if(o.filterHeight===1&&o.filterWidth===1&&o.dilationHeight===1&&o.dilationWidth===1&&o.strideHeight===1&&o.strideWidth===1&&(o.padInfo.type==="SAME"||o.padInfo.type==="VALID"))return this.conv2dByMatMul(r,s,o,a,i,u);if(se().getBool("WEBGL_CONV_IM2COL")&&r.shape[0]===1)return this.conv2dWithIm2Row(r,s,o,a,i,u);var c=a!=null,l=u!=null,h=i?ml(i,!1):null,d=new I0(o,c,h,l),p=[r,s];return a&&p.push(a),u&&p.push(u),this.compileAndRun(d,p)},e.prototype.conv2d=function(t,r,s){if(s.filterHeight===1&&s.filterWidth===1&&s.dilationHeight===1&&s.dilationWidth===1&&s.strideHeight===1&&s.strideWidth===1&&(s.padInfo.type==="SAME"||s.padInfo.type==="VALID"))return this.conv2dByMatMul(t,r,s);if(se().getBool("WEBGL_CONV_IM2COL")&&t.shape[0]===1)return this.conv2dWithIm2Row(t,r,s);var o=new I0(s);return this.compileAndRun(o,[t,r])},e.prototype.conv2dDerInput=function(t,r,s){var o=new JR(s);return this.compileAndRun(o,[t,r])},e.prototype.conv2dDerFilter=function(t,r,s){var o=new QR(s);return this.compileAndRun(o,[t,r])},e.prototype.fusedDepthwiseConv2D=function(t){var r,s=t.input,o=t.filter,a=t.convInfo,i=t.bias,u=t.activation,c=t.preluActivationWeights,l=se().getBool("WEBGL_PACK_DEPTHWISECONV")&&a.strideWidth<=2&&a.outChannels/a.inChannels==1,h=u?ml(u,l):null,d=[s,o],p=i!=null,f=c!=null;return p&&d.push(i),f&&d.push(c),l?(r=new S0(a,p,h,f),this.compileAndRun(r,d)):(r=new k0(a,p,h,f),this.compileAndRun(r,d))},e.prototype.depthwiseConv2D=function(t,r,s){var o;return se().getBool("WEBGL_PACK_DEPTHWISECONV")&&s.strideWidth<=2&&s.outChannels/s.inChannels==1?(o=new S0(s),this.compileAndRun(o,[t,r])):(o=new k0(s),this.compileAndRun(o,[t,r]))},e.prototype.depthwiseConv2DDerInput=function(t,r,s){var o=new nA(s);return this.compileAndRun(o,[t,r])},e.prototype.depthwiseConv2DDerFilter=function(t,r,s){var o=new tA(s);return this.compileAndRun(o,[t,r])},e.prototype.conv3d=function(t,r,s){var o=new rA(s);return this.compileAndRun(o,[t,r])},e.prototype.conv3dDerInput=function(t,r,s){var o=new eA(s);return this.compileAndRun(o,[t,r])},e.prototype.conv3dDerFilter=function(t,r,s){var o=new ZR(s);return this.compileAndRun(o,[t,r])},e.prototype.maxPool=function(t,r){var s=new Di(r,"max",!1);return this.compileAndRun(s,[t])},e.prototype.avgPool=function(t,r){var s=new Di(r,"avg",!1);return this.compileAndRun(s,[t],"float32")},e.prototype.maxPoolBackprop=function(t,r,s,o){var a=new Di(o,"max",!0),i=this.compileAndRun(a,[r]),u=new zA(o),c=this.compileAndRun(u,[t,i],r.dtype);return i.dispose(),c},e.prototype.avgPoolBackprop=function(t,r,s){var o=new PR(s);return this.compileAndRun(o,[t],r.dtype)},e.prototype.cast=function(t,r){return u0(t,r,this)},e.prototype.unstack=function(t,r){for(var s=t.shape[r],o=new Array(t.rank-1),a=0,i=0;i<t.rank;i++)i!==r&&(o[a++]=t.shape[i]);var u=new Array(t.rank).fill(0),c=t.shape.slice();c[r]=1;var l=new Array(s);for(i=0;i<l.length;i++)u[r]=i,l[i]=this.slice(t,u,c).reshape(o);return l},e.prototype.avgPool3d=function(t,r){var s=new jp(r,"avg",!1);return this.compileAndRun(s,[t],"float32")},e.prototype.avgPool3dBackprop=function(t,r,s){var o=new BR(s);return this.compileAndRun(o,[t],r.dtype)},e.prototype.maxPool3d=function(t,r){var s=new jp(r,"max",!1);return this.compileAndRun(s,[t],"float32")},e.prototype.maxPool3dBackprop=function(t,r,s,o){var a=new jp(o,"max",!0),i=this.compileAndRun(a,[r]),u=new VA(o),c=this.compileAndRun(u,[t,i],r.dtype);return i.dispose(),c},e.prototype.reshape=function(t,r){var s=this.texData.get(t.dataId);if(s.isPacked&&!Kc(t.shape,r)&&(s.texture===null||!Kc(s.shape,r))){var o=this.packedReshape(t,r);return H.makeTensorFromDataId(o.dataId,o.shape,o.dtype)}return Pp(t,r)},e.prototype.resizeBilinear=function(t,r,s,o){var a=se().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new QA(t.shape,r,s,o):new YA(t.shape,r,s,o);return this.compileAndRun(a,[t],"float32")},e.prototype.resizeBilinearBackprop=function(t,r,s){var o=new XA(t,r,s);return this.compileAndRun(o,[t])},e.prototype.resizeNearestNeighbor=function(t,r,s,o){var a=new ZA(t.shape,r,s,o);return this.compileAndRun(a,[t])},e.prototype.resizeNearestNeighborBackprop=function(t,r,s){var o=new JA(t,r,s);return this.compileAndRun(o,[t])},e.prototype.multinomial=function(t,r,s,o){var a=r?t:ul(t),i=a.shape[0],u=a.shape[1],c=new WA(i,u,s),l=c.getCustomSetupFunc(o);return this.compileAndRun(c,[a],"int32",l)},e.prototype.oneHot=function(t,r,s,o){var a=new UA(t.size,r,s,o);return this.compileAndRun(a,[t])},e.prototype.diag=function(t){var r=new cA(t.size);return this.compileAndRun(r,[t])},e.prototype.nonMaxSuppression=function(t,r,s,o,a){return Xc("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead"),zp(t.dataSync(),r.dataSync(),s,o,a)},e.prototype.cropAndResize=function(t,r,s,o,a,i){var u=new sA(t.shape,r.shape,o,a,i);return this.compileAndRun(u,[t,r,s],"float32")},e.prototype.depthToSpace=function(t,r,s){_(r>1,function(){return"blockSize should be > 1 for depthToSpace, but was: "+r});var o=t.shape[0],a=s==="NHWC"?t.shape[1]:t.shape[2],i=s==="NHWC"?t.shape[2]:t.shape[3],u=s==="NHWC"?t.shape[3]:t.shape[1],c=a*r,l=i*r,h=u/(r*r),d=new uA(s==="NHWC"?[o,c,l,h]:[o,h,c,l],r,s);return this.compileAndRun(d,[t])},e.prototype.split=function(t,r,s){return p0(t,r,s)},e.prototype.scatterND=function(t,r,s){var o=al(0,t,s),a=o.sliceRank,i=o.numUpdates,u=o.sliceSize,c=o.strides,l=o.outputSize,h=[l/u,u],d=t.reshape([i,a]),p=r.reshape([i,u]);if(l===0)return Pp(Qt([]),s);var f=ye(0),m=new R0(i,a,d.rank,p.rank,c,h);return this.compileAndRun(m,[p,d,f]).reshape(s)},e.prototype.sparseToDense=function(t,r,s,o){var a=al(0,t,s),i=a.sliceRank,u=a.numUpdates,c=a.strides,l=a.outputSize,h=new R0(u,i,t.rank,r.rank,c,[l,1]);return this.compileAndRun(h,[r,t,o]).reshape(s)},e.prototype.fft=function(t){return this.fftImpl(t,!1)},e.prototype.ifft=function(t){return this.fftImpl(t,!0)},e.prototype.fftImpl=function(t,r){var s=this.texData.get(t.dataId),o=new T0(fA,t.shape,r),a=new T0(mA,t.shape,r),i=[this.makeComplexComponentTensorInfo(t,s.complexTensors.real),this.makeComplexComponentTensorInfo(t,s.complexTensors.imag)],u=this.compileAndRun(o,i),c=this.compileAndRun(a,i),l=this.complex(u,c).as2D(t.shape[0],t.shape[1]);return u.dispose(),c.dispose(),l},e.prototype.gatherND=function(t,r){var s=r.shape,o=s[s.length-1],a=Zv(t,r),i=a[0],u=a[1],c=a[2],l=a[3],h=r.reshape([u,o]),d=t.reshape([t.size/c,c]),p=new yA(o,l,[u,c]);return this.compileAndRun(p,[d,h]).reshape(i)},e.prototype.fill=function(t,r,s){if((s=s||da(r))==="string"){var o=yi(s,ve(t));return o.fill(r),H.makeTensor(o,t,s,this)}var a=new gA(t,r),i=a.getCustomSetupFunc(r);return this.compileAndRun(a,[],s,i)},e.prototype.onesLike=function(t){if(t.dtype==="string")throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)},e.prototype.zerosLike=function(t){return this.fill(t.shape,t.dtype==="string"?"":0,t.dtype)},e.prototype.linspace=function(t,r,s){return c0(t,r,s)},e.prototype.makeTensorInfo=function(t,r){var s=this.write(null,t,r);return this.texData.get(s).usage=null,{dataId:s,shape:t,dtype:r}},e.prototype.makeOutput=function(t,r){var s=this.makeTensorInfo(t,r).dataId;return H.makeTensorFromDataId(s,t,r,this)},e.prototype.unpackTensor=function(t){var r=new b$(t.shape);return this.runWebGLProgram(r,[t],t.dtype)},e.prototype.packTensor=function(t){var r=new GA(t.shape);return this.runWebGLProgram(r,[t],t.dtype,null,!0)},e.prototype.packedReshape=function(t,r){var s=[Hc(t.shape)].concat(qc(t.shape)),o={dtype:t.dtype,shape:s,dataId:t.dataId},a=[Hc(r)].concat(qc(r)),i=new KA(a,s),u=this.runWebGLProgram(i,[o],t.dtype,null,!0);return{dataId:u.dataId,shape:r,dtype:u.dtype}},e.prototype.decode=function(t){var r,s=this.texData.get(t),o=s.isPacked,a=s.shape,i=s.dtype,u=kp(a);return r=o?new iA(u):new aA(u),{dtype:i,shape:a,dataId:this.runWebGLProgram(r,[{shape:u,dtype:i,dataId:t}],i,null,!0).dataId}},e.prototype.runWebGLProgram=function(t,r,s,o,a){var i=this;a===void 0&&(a=!1);var u=this.makeTensorInfo(t.outputShape,s),c=this.texData.get(u.dataId);if(t.packedOutput&&(c.isPacked=!0),t.outPackingScheme===ki.DENSE){var l=Si(t.outputShape);c.texShape=l.map(function(b){return 2*b})}if(t.outTexUsage!=null&&(c.usage=t.outTexUsage),ve(u.shape)===0)return c.values=go(u.dtype,0),u;var h=[],d=r.map(function(b){if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");var v=i.texData.get(b.dataId);if(v.texture==null){if(!t.packedInputs&&ve(b.shape)<=se().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:v.values};t.packedInputs&&(v.isPacked=!0,v.shape=b.shape)}else if(!!v.isPacked!=!!t.packedInputs)b=v.isPacked?i.unpackTensor(b):i.packTensor(b),h.push(b),v=i.texData.get(b.dataId);else if(v.isPacked&&!Kc(v.shape,b.shape)){var w=b,C=b.shape;b.shape=v.shape,b=i.packedReshape(b,C),h.push(b),v=i.texData.get(b.dataId),w.shape=C}return i.uploadToGPU(b.dataId),{shape:b.shape,texData:v,isUniform:!1}});this.uploadToGPU(u.dataId);var p,f={shape:u.shape,texData:c,isUniform:!1},m=function(b,v,w){var C="";v.concat(w).forEach(function(k){var N=k.texData!=null&&k.texData.slice!=null&&k.texData.slice.flatOffset>0,I=k.isUniform?"uniform":k.texData.texShape;C+=k.shape+"_"+I+"_"+N});var T=b.userCode,S=b.constructor.name;return S+="_"+C+"_"+T}(t,d,f),g=this.getAndSaveBinary(m,function(){return function(b,v,w,C){var T=v.userCode,S=w.map(function(L,z){var W={logicalShape:L.shape,texShape:L.isUniform?null:L.texData.texShape,isUniform:L.isUniform,isPacked:!L.isUniform&&L.texData.isPacked,flatOffset:null};return L.texData!=null&&L.texData.slice!=null&&L.texData.slice.flatOffset>0&&(W.flatOffset=L.texData.slice.flatOffset),{name:v.variableNames[z],shapeInfo:W}}),k=S.map(function(L){return L.shapeInfo}),N={logicalShape:C.shape,texShape:C.texData.texShape,isUniform:!1,isPacked:C.texData.isPacked,flatOffset:null},I=DR(S,N,T,v.packedInputs),E=b.createProgram(I),F=null,O=b.getUniformLocation(E,"NAN",!1);se().getNumber("WEBGL_VERSION")===1&&(F=b.getUniformLocation(E,"INFINITY",!1));for(var D={},M=0;M<v.variableNames.length;M++){var P=v.variableNames[M];D[P]=b.getUniformLocation(E,P,!1),D["offset"+P]=b.getUniformLocation(E,"offset"+P,!1)}return{program:v,source:I,webGLProgram:E,uniformLocations:D,inShapeInfos:k,outShapeInfo:N,infLoc:F,nanLoc:O}}(i.gpgpu,t,d,f)}),x=this.activeTimers!=null;if(x&&(p=this.startTimer()),function(b,v,w,C,T){E0(v.inShapeInfos,w),E0([v.outShapeInfo],[C]);var S=C.texData.texture,k=C.texData.texShape;C.texData.isPacked?b.setOutputPackedMatrixTexture(S,k[0],k[1]):b.setOutputMatrixTexture(S,k[0],k[1]),b.setProgram(v.webGLProgram),se().getNumber("WEBGL_VERSION")===1&&v.infLoc!==null&&b.gl.uniform1f(v.infLoc,1/0),v.nanLoc!==null&&b.gl.uniform1f(v.nanLoc,NaN),w.forEach(function(N,I){var E=v.program.variableNames[I],F=v.uniformLocations[E],O=v.uniformLocations["offset"+E];if(F!=null)if(N.isUniform)if(ve(N.shape)<2)b.gl.uniform1f(F,N.uniformValues[0]);else{var D=N.uniformValues;D instanceof Float32Array||(D=new Float32Array(D)),b.gl.uniform1fv(F,D)}else N.texData.slice!=null&&O!=null&&b.gl.uniform1i(O,N.texData.slice.flatOffset),b.setInputMatrixTexture(N.texData.texture,F,I)}),T!=null&&T(b,v.webGLProgram),b.executeProgram()}(this.gpgpu,g,d,f,o),h.forEach(function(b){return i.disposeData(b.dataId)}),x&&(p=this.endTimer(p),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(p)})),!se().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&a===!1){var y=this.unpackTensor(u);return this.disposeData(u.dataId),y}return u},e.prototype.compileAndRun=function(t,r,s,o,a){a===void 0&&(a=!1),s=s||r[0].dtype;var i=this.runWebGLProgram(t,r,s,o,a);return H.makeTensorFromDataId(i.dataId,i.shape,i.dtype)},e.prototype.getAndSaveBinary=function(t,r){return t in this.binaryCache||(this.binaryCache[t]=r()),this.binaryCache[t]},e.prototype.getTextureManager=function(){return this.textureManager},e.prototype.dispose=function(){var t=this;this.disposed||(se().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(function(r){t.gpgpu.deleteProgram(t.binaryCache[r].webGLProgram),delete t.binaryCache[r]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)},e.prototype.floatPrecision=function(){var t=this;return this.floatPrecisionValue==null&&(this.floatPrecisionValue=He(function(){if(!se().get("WEBGL_RENDER_FLOAT32_ENABLED")){var r=se().getBool("DEBUG");se().set("DEBUG",!1);var s=t.abs(ye(1e-8)).dataSync()[0];if(se().set("DEBUG",r),s>0)return 32}return 16})),this.floatPrecisionValue},e.prototype.epsilon=function(){return this.floatPrecision()===32?1e-7:1e-4},e.prototype.uploadToGPU=function(t){var r,s=this.texData.get(t),o=s.shape,a=s.dtype,i=s.values,u=s.texture,c=s.usage,l=s.isPacked;if(u==null){var h,d=this.activeTimers!=null;d&&(h=vr());var p=s.texShape;if(p==null&&(p=PE(o,l),s.texShape=p),i!=null){var f=kp(o),m=void 0,g=p[1],x=p[0],y=i instanceof Uint8Array;l?(g=(r=Ni(p[0],p[1]))[0],x=r[1],m=new pA(f,[x,g],y)):m=new dA(f,[x,g],y);var b=this.makeTensorInfo([x,g],a);this.texData.get(b.dataId).usage=y?Gn.PIXELS:Gn.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),g,x,i);var v=this.runWebGLProgram(m,[b],a,null,!0),w=this.texData.get(v.dataId);s.texture=w.texture,s.texShape=w.texShape,s.isPacked=w.isPacked,s.usage=w.usage,this.disposeData(b.dataId),this.texData.delete(v.dataId),s.values=null,d&&(this.uploadWaitMs+=vr()-h)}else{var C=this.acquireTexture(p,c,a,l);s.texture=C}}},e.prototype.convertAndCacheOnCPU=function(t,r){var s=this.texData.get(t),o=s.dtype;return this.releaseGPUData(t),r!=null&&(s.values=function(a,i){if(i==="float32"||i==="complex64")return a;if(i==="int32"||i==="bool"){for(var u=i==="int32"?new Int32Array(a.length):new Uint8Array(a.length),c=0;c<u.length;++c)u[c]=Math.round(a[c]);return u}throw new Error("Unknown dtype "+i)}(r,o)),s.values},e.prototype.acquireTexture=function(t,r,s,o){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){var a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: "+a+" MB, most likely due to a memory leak")}return this.textureManager.acquireTexture(t,r,o)},e.prototype.computeBytes=function(t,r){return t[0]*t[1]*op(r)},e}(a0);sv()&&H.registerBackend("webgl",function(){return new C$},2);function So(n,e){return n(e={exports:{}},e.exports),e.exports}var I$=So(function(n){(function(e,t,r){function s(i){var u,c=this,l=(u=4022871197,function(h){h=h.toString();for(var d=0;d<h.length;d++){var p=.02519603282416938*(u+=h.charCodeAt(d));p-=u=p>>>0,u=(p*=u)>>>0,u+=4294967296*(p-=u)}return 23283064365386963e-26*(u>>>0)});c.next=function(){var h=2091639*c.s0+23283064365386963e-26*c.c;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=0|h)},c.c=1,c.s0=l(" "),c.s1=l(" "),c.s2=l(" "),c.s0-=l(i),c.s0<0&&(c.s0+=1),c.s1-=l(i),c.s1<0&&(c.s1+=1),c.s2-=l(i),c.s2<0&&(c.s2+=1),l=null}function o(i,u){return u.c=i.c,u.s0=i.s0,u.s1=i.s1,u.s2=i.s2,u}function a(i,u){var c=new s(i),l=u&&u.state,h=c.next;return h.int32=function(){return 4294967296*c.next()|0},h.double=function(){return h()+11102230246251565e-32*(2097152*h()|0)},h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.alea=a})(0,n)}),k$=So(function(n){(function(e,t,r){function s(i){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var h=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^h^h>>>8},i===(0|i)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=0|c.charCodeAt(l),u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=((c.next()>>>11)+(c.next()>>>0)/4294967296)/2097152;while(d===0);return d},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xor128=a})(0,n)}),S$=So(function(n){(function(e,t,r){function s(i){var u=this,c="";u.next=function(){var h=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^h^h<<1)|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,i===(0|i)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=0|c.charCodeAt(l),l==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u.v=i.v,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=((c.next()>>>11)+(c.next()>>>0)/4294967296)/2097152;while(d===0);return d},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xorwow=a})(0,n)}),N$=So(function(n){(function(e,t,r){function s(i){var u=this;u.next=function(){var c,l,h=u.x,d=u.i;return c=h[d],l=(c^=c>>>7)^c<<24,l^=(c=h[d+1&7])^c>>>10,l^=(c=h[d+3&7])^c>>>3,l^=(c=h[d+4&7])^c<<7,c=h[d+7&7],l^=(c^=c<<13)^c<<9,h[d]=l,u.i=d+1&7,l},function(c,l){var h,d=[];if(l===(0|l))d[0]=l;else for(l=""+l,h=0;h<l.length;++h)d[7&h]=d[7&h]<<15^l.charCodeAt(h)+d[h+1&7]<<13;for(;d.length<8;)d.push(0);for(h=0;h<8&&d[h]===0;++h);for(h==8?d[7]=-1:d[h],c.x=d,c.i=0,h=256;h>0;--h)c.next()}(u,i)}function o(i,u){return u.x=i.x.slice(),u.i=i.i,u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=((c.next()>>>11)+(c.next()>>>0)/4294967296)/2097152;while(d===0);return d},h.int32=c.next,h.quick=h,l&&(l.x&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xorshift7=a})(0,n)}),T$=So(function(n){(function(e,t,r){function s(i){var u=this;u.next=function(){var c,l,h=u.w,d=u.X,p=u.i;return u.w=h=h+1640531527|0,l=d[p+34&127],c=d[p=p+1&127],l^=l<<13,c^=c<<17,l^=l>>>15,c^=c>>>12,l=d[p]=l^c,u.i=p,l+(h^h>>>16)|0},function(c,l){var h,d,p,f,m,g=[],x=128;for(l===(0|l)?(d=l,l=null):(l+="\0",d=0,x=Math.max(x,l.length)),p=0,f=-32;f<x;++f)l&&(d^=l.charCodeAt((f+32)%l.length)),f===0&&(m=d),d^=d<<10,d^=d>>>15,d^=d<<4,d^=d>>>13,f>=0&&(m=m+1640531527|0,p=(h=g[127&f]^=d+m)==0?p+1:0);for(p>=128&&(g[127&(l&&l.length||0)]=-1),p=127,f=512;f>0;--f)d=g[p+34&127],h=g[p=p+1&127],d^=d<<13,h^=h<<17,d^=d>>>15,h^=h>>>12,g[p]=d^h;c.w=m,c.X=g,c.i=p}(u,i)}function o(i,u){return u.i=i.i,u.w=i.w,u.X=i.X.slice(),u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=((c.next()>>>11)+(c.next()>>>0)/4294967296)/2097152;while(d===0);return d},h.int32=c.next,h.quick=h,l&&(l.X&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xor4096=a})(0,n)}),E$=So(function(n){(function(e,t,r){function s(i){var u=this,c="";u.next=function(){var h=u.b,d=u.c,p=u.d,f=u.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,u.b=h=h<<20^h>>>12^d,u.c=d=d-p|0,u.d=p<<16^d>>>16^f,u.a=f-h|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,i===Math.floor(i)?(u.a=i/4294967296|0,u.b=0|i):c+=i;for(var l=0;l<c.length+20;l++)u.b^=0|c.charCodeAt(l),u.next()}function o(i,u){return u.a=i.a,u.b=i.b,u.c=i.c,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=((c.next()>>>11)+(c.next()>>>0)/4294967296)/2097152;while(d===0);return d},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.tychei=a})(0,n)}),No=So(function(n){(function(e,t){var r,s=this,o=256,a=6,i="random",u=t.pow(o,a),c=t.pow(2,52),l=2*c,h=o-1;function d(x,y,b){var v=[],w=m(function S(k,N){var I,E=[],F=typeof k;if(N&&F=="object")for(I in k)try{E.push(S(k[I],N-1))}catch{}return E.length?E:F=="string"?k:k+"\0"}((y=y==1?{entropy:!0}:y||{}).entropy?[x,g(e)]:x??function(){try{var S;return r&&(S=r.randomBytes)?S=S(o):(S=new Uint8Array(o),(s.crypto||s.msCrypto).getRandomValues(S)),g(S)}catch{var k=s.navigator,N=k&&k.plugins;return[+new Date,s,N,s.screen,g(e)]}}(),3),v),C=new p(v),T=function(){for(var S=C.g(a),k=u,N=0;S<c;)S=(S+N)*o,k*=o,N=C.g(1);for(;S>=l;)S/=2,k/=2,N>>>=1;return(S+N)/k};return T.int32=function(){return 0|C.g(4)},T.quick=function(){return C.g(4)/4294967296},T.double=T,m(g(C.S),e),(y.pass||b||function(S,k,N,I){return I&&(I.S&&f(I,C),S.state=function(){return f(C,{})}),N?(t[i]=S,k):S})(T,w,"global"in y?y.global:this==t,y.state)}function p(x){var y,b=x.length,v=this,w=0,C=v.i=v.j=0,T=v.S=[];for(b||(x=[b++]);w<o;)T[w]=w++;for(w=0;w<o;w++)T[w]=T[C=h&C+x[w%b]+(y=T[w])],T[C]=y;(v.g=function(S){for(var k,N=0,I=v.i,E=v.j,F=v.S;S--;)k=F[I=h&I+1],N=N*o+F[h&(F[I]=F[E=h&E+k])+(F[E]=k)];return v.i=I,v.j=E,N})(o)}function f(x,y){return y.i=x.i,y.j=x.j,y.S=x.S.slice(),y}function m(x,y){for(var b,v=x+"",w=0;w<v.length;)y[h&w]=h&(b^=19*y[h&w])+v.charCodeAt(w++);return g(y)}function g(x){return String.fromCharCode.apply(0,x)}if(t["seed"+i]=d,m(t.random(),e),n.exports){n.exports=d;try{r=require("crypto")}catch{}}})([],Math)});No.alea=I$,No.xor128=k$,No.xorwow=S$,No.xorshift7=N$,No.xor4096=T$,No.tychei=E$;var gl=No.alea,G0=V({addN_:function(n){_(Array.isArray(n),function(){return"The argument passed to tf.addN() must be a list of tensors"}),_(n.length>=1,function(){return"Must pass at least one tensor to tf.addN(), but got "+n.length});var e=n.map(function(s,o){return $(s,"tensors"+o,"addN")}),t=e[0];e.forEach(function(s){if(s.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(function(s){if(!Wt(s.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});var r=e;return H.runKernelFunc(function(s,o){return s.addN(e)},r,null,"AddN")}});function xl(){uv("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon")}function H0(n){return n.rank===0||n.rank===1?n.as4D(1,1,1,n.size):n.rank===2?n.as4D(1,1,n.shape[0],n.shape[1]):n.rank===3?n.as4D(1,n.shape[0],n.shape[1],n.shape[2]):n}function q0(n,e,t,r,s,o){o==null&&(o=.001);var a,i,u=$(n,"x","batchNorm"),c=$(e,"mean","batchNorm"),l=$(t,"variance","batchNorm");s!=null&&(a=$(s,"scale","batchNorm")),r!=null&&(i=$(r,"offset","batchNorm")),_(c.rank===l.rank,function(){return"Batch normalization gradient requires mean and variance to have equal ranks."}),_(i==null||c.rank===i.rank,function(){return"Batch normalization gradient requires mean and offset to have equal ranks."}),_(a==null||c.rank===a.rank,function(){return"Batch normalization gradient requires mean and scale to have equal ranks."});var h={x:u,scale:a,offset:i,mean:c,variance:l},d={varianceEpsilon:o};return H.runKernelFunc(function(p,f){var m=H0(u),g=p.batchNormalization(m,yl(c),yl(l),o,yl(a),yl(i));return f([u,c,l,a]),g},h,null,"FusedBatchNorm",d).reshape(u.shape)}function yl(n){return n==null?null:n.rank===0?n.as1D():n.rank===1?n:n.rank===2?n.as4D(1,1,n.shape[0],n.shape[1]):n.rank===3?n.as4D(1,n.shape[0],n.shape[1],n.shape[2]):n}var R$=V({batchNormalization_:function(n,e,t,r,s,o){return r===void 0&&(r=.001),xl(),q0(n,e,t,o,s,r)}}),wa=V({batchNorm_:q0});function j0(n,e,t,r,s,o){var a,i,u=$(n,"x","batchNorm"),c=$(e,"mean","batchNorm"),l=$(t,"variance","batchNorm");return s!=null&&(a=$(s,"scale","batchNorm")),r!=null&&(i=$(r,"offset","batchNorm")),_(u.rank===2,function(){return"Error in batchNorm3D: x must be rank 3 but got rank "+u.rank+"."}),_(c.rank===2||c.rank===1,function(){return"Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank "+c.rank+"."}),_(l.rank===2||l.rank===1,function(){return"Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank "+l.rank+"."}),a!=null&&_(a.rank===2||a.rank===1,function(){return"Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank "+a.rank+"."}),i!=null&&_(i.rank===2||i.rank===1,function(){return"Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank "+i.rank+"."}),wa(u,c,l,i,a,o)}var A$=V({batchNormalization2d_:function(n,e,t,r,s,o){return r===void 0&&(r=.001),xl(),j0(n,e,t,o,s,r)}}),$$=V({batchNorm2d_:j0});function K0(n,e,t,r,s,o){var a,i,u=$(n,"x","batchNorm"),c=$(e,"mean","batchNorm"),l=$(t,"variance","batchNorm");return s!=null&&(a=$(s,"scale","batchNorm")),r!=null&&(i=$(r,"offset","batchNorm")),_(u.rank===3,function(){return"Error in batchNorm3D: x must be rank 3 but got rank "+u.rank+"."}),_(c.rank===3||c.rank===1,function(){return"Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank "+c.rank+"."}),_(l.rank===3||l.rank===1,function(){return"Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank "+l.rank+"."}),a!=null&&_(a.rank===3||a.rank===1,function(){return"Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank "+a.rank+"."}),i!=null&&_(i.rank===3||i.rank===1,function(){return"Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank "+i.rank+"."}),wa(u,c,l,i,a,o)}var D$=V({batchNormalization3d_:function(n,e,t,r,s,o){return r===void 0&&(r=.001),xl(),K0(n,e,t,o,s,r)}}),F$=V({batchNorm3d_:K0});function X0(n,e,t,r,s,o){var a,i,u=$(n,"x","batchNorm"),c=$(e,"mean","batchNorm"),l=$(t,"variance","batchNorm");return s!=null&&(a=$(s,"scale","batchNorm")),r!=null&&(i=$(r,"offset","batchNorm")),_(u.rank===4,function(){return"Error in batchNorm4D: x must be rank 4 but got rank "+u.rank+"."}),_(c.rank===4||c.rank===1,function(){return"Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank "+c.rank+"."}),_(l.rank===4||l.rank===1,function(){return"Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank "+l.rank+"."}),a!=null&&_(a.rank===4||a.rank===1,function(){return"Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank "+a.rank+"."}),i!=null&&_(i.rank===4||i.rank===1,function(){return"Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank "+i.rank+"."}),wa(u,c,l,i,a,o)}var O$=V({batchNormalization4d_:function(n,e,t,r,s,o){return r===void 0&&(r=.001),xl(),X0(n,e,t,o,s,r)}}),_$=V({batchNorm4d_:X0}),Y0=V({broadcastTo_:function(n,e){var t=$(n,"broadcastTo","x"),r=t.shape;if(e.some(function(h){return!(h>0)||h%1!=0}))throw new Error("broadcastTo(): Invalid broadcast shape ["+e+"].");if(e.length<t.rank)throw new Error("broadcastTo(): shape.length="+e.length+" < input.rank="+t.rank+".");if(e.length>t.rank){for(var s=t.shape.slice();s.length<e.length;)s.unshift(1);t=t.reshape(s)}for(var o=t.shape,a=Array.from(e),i=e.length-1;i>=0;i--)if(o[i]===e[i])a[i]=1;else if(t.shape[i]!==1)throw new Error("broadcastTo(): ["+r+"] cannot be broadcast to ["+e+"].");var u=a.map(function(h,d){return h>1?d:-1}).filter(function(h){return h>=0});if(u.length===0)return t.clone();var c={x:t},l={shape:e,inputShape:o};return H.runKernelFunc(function(h){return h.tile(t,a)},c,function(h){return{x:function(){return h.sum(u,!0)}}},vv,l)}}),M$=V({clone_:function(n){var e=$(n,"x","clone",null);return H.runKernelFunc(function(){return H.makeTensorFromDataId(e.dataId,e.shape,e.dtype)},{x:e},null,wv)}}),Oi=V({logicalAnd_:function(n,e){var t=$(n,"a","logicalAnd","bool"),r=$(e,"b","logicalAnd","bool");return qe(t.shape,r.shape),H.runKernelFunc(function(s){return s.logicalAnd(t,r)},{a:t,b:r},null,"LogicalAnd")}}),Q0=V({logicalNot_:function(n){var e=$(n,"x","logicalNot","bool");return H.runKernelFunc(function(t){return t.logicalNot(e)},{$x:e})}}),Qp=V({logicalOr_:function(n,e){var t=$(n,"a","logicalOr","bool"),r=$(e,"b","logicalOr","bool");return qe(t.shape,r.shape),H.runKernelFunc(function(s){return s.logicalOr(t,r)},{$a:t,$b:r})}}),L$=V({logicalXor_:function(n,e){var t=$(n,"a","logicalXor","bool"),r=$(e,"b","logicalXor","bool");return qe(t.shape,r.shape),Qp(n,e).logicalAnd(Oi(n,e).logicalNot())}}),Os=V({where_:function(n,e,t){var r=$(e,"a","where"),s=$(t,"b","where"),o=$(n,"condition","where","bool");return rt(r.shape,s.shape,"Error in where: "),o.rank===1?_(o.shape[0]===r.shape[0],function(){return"The first dimension of `a` must match the size of `condition`."}):rt(o.shape,s.shape,"Error in where: "),H.runKernelFunc(function(a,i){var u=a.select(o,r,s);return i([o]),u},{$condition:o,$a:r,$b:s},function(a,i){var u=i[0];return{$condition:function(){return Ke(u).toFloat()},$a:function(){return a.mul(u.cast(a.dtype))},$b:function(){return a.mul(u.logicalNot().cast(a.dtype))}}})}}),Jp=function(n){return Ie(this,void 0,void 0,function(){var e,t,r;return ke(this,function(s){switch(s.label){case 0:return[4,(e=$(n,"condition","whereAsync","bool")).data()];case 1:return t=s.sent(),r=Wp(e.shape,t),n!==e&&e.dispose(),[2,r]}})})},Zp=V({divNoNan_:function(n,e){var t,r=$(n,"a","div"),s=$(e,"b","div");r=(t=vt(r,s))[0],s=t[1];var o=ds(r,s),a=Ke(o),i=s.equal(a);return Os(i,a,o)}}),To=V({tile_:function(n,e){var t=$(n,"x","tile",null);_(t.rank===e.length,function(){return"Error in transpose: rank of input "+t.rank+" must match length of reps "+e+"."});var r=[t],s={x:t},o={reps:e};return H.runKernelFunc(function(a,i){var u=a.tile(t,e);return i([t]),u},s,null,Cv,o,r)}}),J0=V({eye_:function(n,e,t,r){r===void 0&&(r="float32"),e==null&&(e=n);for(var s=Le([n,e],r),o=n<=e?n:e,a=0;a<o;++a)s.set(1,a,a);var i=s.toTensor().as2D(n,e);if(t==null)return i;if(t.length===1)return To(us(i,0),[t[0],1,1]);if(t.length===2)return To(us(us(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return To(us(us(us(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error("eye() currently supports only 1D and 2D batchShapes, but received "+t.length+"D.")}}),Z0=V({multinomial_:function(n,e,t,r){r===void 0&&(r=!1);var s=$(n,"logits","multinomial"),o=s.size,a=s.rank;if(o<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+o+".");if(a>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+a);t=t||Math.random();var i=a===1?s.as2D(1,-1):s,u=H.runKernelFunc(function(c){return c.multinomial(i,r,e,t)},{logits2D:i});return a===1?u.as1D():u}}),_i=V({oneHot_:function(n,e,t,r){if(t===void 0&&(t=1),r===void 0&&(r=0),e<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+e);var s=$(n,"indices","oneHot","int32"),o=s.shape.concat([e]),a={indices:s=s.flatten()},i={depth:e,onValue:t,offValue:r};return H.runKernelFunc(function(u,c){return c([s]),u.oneHot(s,e,t,r)},a,null,bv,i).reshape(o)}}),_s=V({pad_:function(n,e,t){t===void 0&&(t=0);var r=$(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");var s={paddings:e,constantValue:t},o={x:r};return H.runKernelFunc(function(a,i){return i([r]),a.pad(r,e,t)},o,null,Iv,s)}}),P$=V({pad1d_:function(n,e,t){return t===void 0&&(t=0),_(e.length===2,function(){return"Invalid number of paddings. Must be length of 2."}),_s(n,[e],t)}}),B$=V({pad2d_:function(n,e,t){return t===void 0&&(t=0),_(e.length===2&&e[0].length===2&&e[1].length===2,function(){return"Invalid number of paddings. Must be length of 2 each."}),_s(n,e,t)}}),z$=V({pad3d_:function(n,e,t){return t===void 0&&(t=0),_(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,function(){return"Invalid number of paddings. Must be length of 2 each."}),_s(n,e,t)}}),V$=V({pad4d_:function(n,e,t){return t===void 0&&(t=0),_(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,function(){return"Invalid number of paddings. Must be length of 2 each."}),_s(n,e,t)}}),W$=V({rand_:function(n,e,t){var r=ve(n),s=null;if(t==null||t==="float32")s=new Float32Array(r);else if(t==="int32")s=new Int32Array(r);else{if(t!=="bool")throw new Error("Unknown data type "+t);s=new Uint8Array(r)}for(var o=0;o<r;o++)s[o]=e();return H.makeTensor(s,n,t)}}),ef=function(){function n(e,t,r,s,o){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);var a=o||Math.random();this.random=gl(a.toString())}return n.prototype.nextValue=function(){if(!isNaN(this.nextVal)){var e=this.nextVal;return this.nextVal=NaN,e}for(var t,r,s=!1;!s;){var o=void 0,a=void 0,i=void 0;do i=(o=2*this.random()-1)*o+(a=2*this.random()-1)*a;while(i>=1||i===0);var u=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*o*u,r=this.mean+this.stdDev*a*u,this.truncated&&!this.isValidTruncated(t)||(s=!0)}return this.truncated&&!this.isValidTruncated(r)||(this.nextVal=this.convertValue(r)),this.convertValue(t)},n.prototype.convertValue=function(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)},n.prototype.isValidTruncated=function(e){return e<=this.upper&&e>=this.lower},n}(),U$=function(){function n(e,t,r,s){this.alpha=e,this.beta=1/t,this.dtype=r;var o=s||Math.random();this.randu=gl(o.toString()),this.randn=new ef(0,1,r,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}return n.prototype.nextValue=function(){for(var e,t,r,s,o,a;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,t=1-.331*(e=s*s)*e,r=.5*e+this.d*(1-a+Math.log(a)),(o=this.randu())<t||Math.log(o)<r)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)},n.prototype.convertValue=function(e){return this.dtype==="float32"?e:Math.round(e)},n}(),G$=function(){function n(e,t,r,s){var o=this;if(e===void 0&&(e=0),t===void 0&&(t=1),this.canReturnFloat=function(){return o.dtype==null||o.dtype==="float32"},this.min=e,this.range=t-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between "+e+" - "+t+" <= 1 and dtype is not float");this.random=gl(s)}return n.prototype.convertValue=function(e){return this.canReturnFloat()?e:Math.round(e)},n.prototype.nextValue=function(){return this.convertValue(this.min+this.range*this.random())},n}(),H$=V({randomGamma_:function(n,e,t,r,s){if(t===void 0&&(t=1),r===void 0&&(r="float32"),t==null&&(t=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error("Unsupported data type "+r);for(var o=new U$(e,t,r,s),a=Le(n,r),i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}}),q$=V({randomNormal_:function(n,e,t,r,s){if(e===void 0&&(e=0),t===void 0&&(t=1),r!=null&&r==="bool")throw new Error("Unsupported data type "+r);for(var o=new ef(e,t,r,!1,s),a=Le(n,r),i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}}),tf=V({randomUniform_:function(n,e,t,r,s){e===void 0&&(e=0),t===void 0&&(t=1),r===void 0&&(r="float32");for(var o=Le(n,r),a=new G$(e,t,null,s),i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}}),nf=V({square_:function(n){var e=$(n,"x","square"),t=[e];return H.runKernelFunc(function(r,s){return s([e]),r.square(e)},{x:e},null,"Square",{},t,[])}}),rf=V({squaredDifference_:function(n,e){var t,r=$(n,"a","squaredDifference"),s=$(e,"b","squaredDifference");t=vt(r,s),r=t[0],s=t[1],qe(r.shape,s.shape);var o={a:r,b:s},a=[r,s];return H.runKernelFunc(function(i,u){var c=i.squaredDifference(r,s);return u([r,s]),c},o,function(i,u){var c=u[0],l=u[1],h=ye(2);return{a:function(){return i.mul(c.sub(l).mul(h))},b:function(){return i.mul(l.sub(c).mul(h))}}},rl,{},a,[])}}),eb=V({truncatedNormal_:function(n,e,t,r,s){if(e===void 0&&(e=0),t===void 0&&(t=1),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");for(var o=new ef(e,t,r,!0,s),a=Le(n,r),i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}}),sf=V({equal_:function(n,e){var t,r=$(n,"a","equal"),s=$(e,"b","equal");return t=vt(r,s),r=t[0],s=t[1],qe(r.shape,s.shape),H.runKernelFunc(function(o){return o.equal(r,s)},{$a:r,$b:s})}}),j$=V({equalStrict_:function(n,e){var t=$(n,"a","equalStrict"),r=$(e,"b","equalStrict");return rt(t.shape,r.shape,"Error in equalStrict: "),t.equal(r)}}),tb=V({greater_:function(n,e){var t,r=$(n,"a","greater"),s=$(e,"b","greater");return t=vt(r,s),r=t[0],s=t[1],qe(r.shape,s.shape),H.runKernelFunc(function(o){return o.greater(r,s)},{a:r,b:s},null,"Greater")}}),of=V({greaterEqual_:function(n,e){var t,r=$(n,"a","greaterEqual"),s=$(e,"b","greaterEqual");return t=vt(r,s),r=t[0],s=t[1],qe(r.shape,s.shape),H.runKernelFunc(function(o,a){var i=o.greaterEqual(r,s);return a([r,s]),i},{a:r,b:s},function(o,a){var i=a[0],u=a[1];return{a:function(){return Ke(i)},b:function(){return Ke(u)}}},"GreaterEqual")}}),K$=V({greaterEqualStrict_:function(n,e){var t=$(n,"a","greaterEqualStrict"),r=$(e,"b","greaterEqualStrict");return rt(t.shape,r.shape,"Error in greaterEqualStrict: "),t.greaterEqual(r)}}),X$=V({greaterStrict_:function(n,e){var t=$(n,"a","greaterStrict"),r=$(e,"b","greaterStrict");return rt(t.shape,r.shape,"Error in greaterStrict: "),t.greater(r)}}),nb=V({less_:function(n,e){var t,r=$(n,"a","less"),s=$(e,"b","less");return t=vt(r,s),r=t[0],s=t[1],qe(r.shape,s.shape),H.runKernelFunc(function(o){return o.less(r,s)},{a:r,b:s},null,"Less")}}),rb=V({lessEqual_:function(n,e){var t,r=$(n,"a","lessEqual"),s=$(e,"b","lessEqual");return t=vt(r,s),r=t[0],s=t[1],qe(r.shape,s.shape),H.runKernelFunc(function(o,a){var i=o.lessEqual(r,s);return a([r,s]),i},{a:r,b:s},null,"LessEqual")}}),Y$=V({lessEqualStrict_:function(n,e){var t=$(n,"a","lessEqualStrict"),r=$(e,"b","lessEqualStrict");return rt(t.shape,r.shape,"Error in lessEqualStrict: "),t.lessEqual(r)}}),Q$=V({lessStrict_:function(n,e){var t=$(n,"a","lessStrict"),r=$(e,"b","lessStrict");return rt(t.shape,r.shape,"Error in lessStrict: "),t.less(r)}}),sb=V({notEqual_:function(n,e){var t,r=$(n,"a","notEqual"),s=$(e,"b","notEqual");return t=vt(r,s),r=t[0],s=t[1],qe(r.shape,s.shape),H.runKernelFunc(function(o){return o.notEqual(r,s)},{a:r,b:s},null,"NotEqual")}}),J$=V({notEqualStrict_:function(n,e){var t=$(n,"a","notEqualStrict"),r=$(e,"b","notEqualStrict");return rt(t.shape,r.shape,"Error in notEqualStrict: "),t.notEqual(r)}});function ob(n,e){for(var t=[],r=n;r<e;++r)t.push(r);return t}function ab(n){for(var e=[],t=0;t<n.length;++t)for(var r=0;r<n[t].length;++r)e.push(n[t][r]);return e}var vl=V({gather_:function(n,e,t){t===void 0&&(t=0);var r=$(n,"x","gather"),s=$(e,"indices","gather","int32");t=Ot(t,r.shape)[0];var o=function(a,i,u){for(var c=a.shape[u],l=[],h=1,d=1,p=0;p<u;p++)l.push(a.shape[p]),h*=a.shape[p];for(p=0;p<i.rank;p++)l.push(i.shape[p]);for(p=u+1;p<a.rank;p++)l.push(a.shape[p]),d*=a.shape[p];return{batchSize:h,sliceSize:d,dimSize:c,outputShape:l}}(r,s,t);return H.runKernelFunc(function(a,i){var u=a.gather(r,s.flatten(),t);return i([s]),u},{x:r,indices:s},function(a,i){var u=i[0];return{x:function(){var c=r.shape,l=u.size,h=c.slice(0,t),d=h.length,p=c.slice(t,c.length).slice(1),f=p.length,m=ob(0,d),g=ob(d+1,d+1+f),x=ab([h,[l],p]),y=a.reshape(x),b=u.reshape([l]),v=ab([[d],m,g]),w=y.transpose(v),C=ib(w,b,r.shape[t]),T=Np(v);return C=C.transpose(T)},indices:function(){return u}}},"Gather",{axis:t}).reshape(o.outputShape)}}),ib=V({unsortedSegmentSum_:function(n,e,t){var r=$(n,"x","unsortedSegmentSum"),s=$(e,"segmentIds","unsortedSegmentSum","int32");return _(Ct(t),function(){return"numSegments must be of dtype int"}),H.runKernelFunc(function(o,a){var i=o.unsortedSegmentSum(r,s,t);return a([s]),i},{$x:r},function(o,a){var i=a[0];return{$x:function(){return function(u,c){for(var l=ol(c,Ke(c)),h=vl(u,l),d=of(c,ye(0,"int32")),p=h.rank-d.rank,f=0;f<p;++f)d=us(d,f+1);d=Oi(d,bo(h.shape,"bool"));var m=Ke(h);return Os(d,h,m)}(o,i)}}})}}),Z$=function(n,e,t){return Ie(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h,d,p,f,m;return ke(this,function(g){switch(g.label){case 0:for(r=$(n,"tensor","boolMask"),s=$(e,"mask","boolMask","bool"),o=t??0,a=s.rank,i=r.shape,_(a>0,function(){return"mask cannot be scalar"}),rt(i.slice(o,o+a),s.shape,"mask's shape must match the first K dimensions of tensor's shape,"),u=1,c=o;c<o+a;c++)u*=i[c];return l=i.slice(0,o).concat([u],i.slice(o+a)),h=r.reshape(l),d=s.reshape([-1]),[4,Jp(d)];case 1:return p=g.sent(),f=p.squeeze([1]),m=vl(h,f,o),n!==r&&r.dispose(),e!==s&&s.dispose(),f.dispose(),h.dispose(),d.dispose(),p.dispose(),[2,m]}})})};function ub(n,e,t,r,s,o,a){o===void 0&&(o="NHWC"),_(n.length===e.rank,function(){return"Length of inShape ("+n.length+") and rank of dy ("+e.rank+") must match"});var i=n,u=e,c=!1;e.rank===3&&(c=!0,u=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]),i=[1,n[0],n[1],n[2]]),_(i.length===4,function(){return"Error in conv2dDerInput: inShape must be length 4, but got length "+i.length+"."}),_(u.rank===4,function(){return"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank}),_(t.rank===4,function(){return"Error in conv2dDerInput: filter must be rank 4, but got rank "+t.rank});var l=o==="NHWC"?i[3]:i[1],h=o==="NHWC"?u.shape[3]:u.shape[1];_(l===t.shape[2],function(){return"Error in conv2dDerInput: depth of input ("+l+") must match input depth for filter "+t.shape[2]+"."}),_(h===t.shape[3],function(){return"Error in conv2dDerInput: depth of output ("+h+") must match output depth for filter "+t.shape[3]+"."}),a!=null&&_(Ct(s),function(){return"Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+s+"."});var d=Lp(o),p=Co(i,t.shape,r,1,s,a,!1,d),f=H.runKernelFunc(function(m,g){var x=m.conv2dDerInput(u,t,p);return g([t,u]),x},{dy4D:u,filter:t},function(m,g){var x=g[0],y=g[1];return{dy4D:function(){return Ca(m,x,r,s,o,1,a)},filter:function(){return uf(m,y,x.shape,r,s,o,a)}}});return c?f.as3D(f.shape[1],f.shape[2],f.shape[3]):f}function af(n){var e=function(o){return typeof o=="number"?[o,o,o]:o.length===2?[o[0],o[1],1]:o}(n),t=e[0],r=e[1],s=e[2];return t===1&&r===1&&s===1}function cb(n,e,t,r,s){_(n.length===e.rank,function(){return"Length of inShape ("+n.length+") and rank of dy ("+e.rank+") must match"});var o=n,a=e,i=!1;e.rank===4&&(i=!0,a=e.as5D(1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]),o=[1,n[0],n[1],n[2],n[3]]);var u=o[4],c=a.shape[4];_(o.length===5,function(){return"Error in conv3dDerInput: inShape must be length 5, but got length "+o.length+"."}),_(a.rank===5,function(){return"Error in conv3dDerInput: dy must be rank 5, but got rank "+a.rank}),_(t.rank===5,function(){return"Error in conv3dDerInput: filter must be rank 5, but got rank "+t.rank}),_(u===t.shape[3],function(){return"Error in conv3dDerInput: depth of input ("+u+") must match input depth for filter "+t.shape[3]+"."}),_(c===t.shape[4],function(){return"Error in conv3dDerInput: depth of output ("+c+") must match output depth for filter "+t.shape[4]+"."});var l=ll(o,t.shape,r,1,s),h=H.runKernelFunc(function(d){return d.conv3dDerInput(a,t,l)},{dy5D:a});return i?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}var lb=V({conv1d_:function(n,e,t,r,s,o,a){s===void 0&&(s="NWC"),o===void 0&&(o=1);var i=$(n,"x","conv1d"),u=$(e,"filter","conv1d"),c=i,l=!1;i.rank===2&&(l=!0,c=i.as3D(1,i.shape[0],i.shape[1])),_(c.rank===3,function(){return"Error in conv1d: input must be rank 3, but got rank "+c.rank+"."}),_(u.rank===3,function(){return"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."}),a!=null&&_(Ct(r),function(){return"Error in conv1d: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+r+"."}),_(c.shape[2]===u.shape[1],function(){return"Error in conv1d: depth of input ("+c.shape[2]+") must match input depth for filter "+u.shape[1]+"."}),_(kn(t,o),function(){return"Error in conv1D: Either stride or dilation must be 1. Got stride "+t+" and dilation '"+o+"'"}),_(s==="NWC",function(){return"Error in conv1d: got dataFormat of "+s+" but only NWC is currently supported."});var h=u.as4D(1,u.shape[0],u.shape[1],u.shape[2]),d=c.as4D(c.shape[0],1,c.shape[1],c.shape[2]),p=Ca(d,h,[1,t],r,"NHWC",[1,o],a);return l?p.as2D(p.shape[2],p.shape[3]):p.as3D(p.shape[0],p.shape[2],p.shape[3])}}),Ca=V({conv2d_:function(n,e,t,r,s,o,a){s===void 0&&(s="NHWC"),o===void 0&&(o=[1,1]);var i=$(n,"x","conv2d"),u=$(e,"filter","conv2d"),c=i,l=!1;i.rank===3&&(l=!0,c=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),_(c.rank===4,function(){return"Error in conv2d: input must be rank 4, but got rank "+c.rank+"."}),_(u.rank===4,function(){return"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."}),a!=null&&_(Ct(r),function(){return"Error in conv2d: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+r+"."});var h=s==="NHWC"?c.shape[3]:c.shape[1];_(h===u.shape[2],function(){return"Error in conv2d: depth of input ("+h+") must match input depth for filter "+u.shape[2]+"."}),_(kn(t,o),function(){return"Error in conv2D: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+o+"'"});var d=Lp(s),p=Co(c.shape,u.shape,t,o,r,a,!1,d),f=[u,c],m=H.runKernelFunc(function(g,x){var y=g.conv2d(c,u,p);return x([u,c]),y},{x:c,filter:u},function(g,x){var y=x,b=y[0],v=y[1];return _(ga(o),function(){return"Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+o+"'"}),{x:function(){return db(v.shape,g,b,t,r,s)},filter:function(){return uf(v,g,b.shape,t,r,s)}}},"Conv2D",p,f);return l?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),hb=V({conv3d_:function(n,e,t,r,s,o){s===void 0&&(s="NDHWC"),o===void 0&&(o=[1,1,1]);var a=$(n,"x","conv3d"),i=$(e,"filter","conv3d"),u=a,c=!1;a.rank===4&&(c=!0,u=a.as5D(1,a.shape[0],a.shape[1],a.shape[2],a.shape[3])),_(u.rank===5,function(){return"Error in conv3d: input must be rank 5, but got rank "+u.rank+"."}),_(i.rank===5,function(){return"Error in conv3d: filter must be rank 5, but got rank "+i.rank+"."}),_(u.shape[4]===i.shape[3],function(){return"Error in conv3d: depth of input ("+u.shape[4]+") must match input depth for filter "+i.shape[3]+"."}),_(function(d,p){return af(d)||af(p)}(t,o),function(){return"Error in conv3D: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+o+"'"}),_(s==="NDHWC",function(){return"Error in conv3d: got dataFormat of "+s+" but only NDHWC is currently supported."});var l=ll(u.shape,i.shape,t,o,r),h=H.runKernelFunc(function(d,p){var f=d.conv3d(u,i,l);return p([u,i]),f},{x:u,$filter:i},function(d,p){_(af(o),function(){return"Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+o+"'"});var f=p[0],m=p[1];return{x:function(){return cb(f.shape,d,m,t,r)},$filter:function(){return function(g,x,y,b,v){var w=g;g.rank===4&&(w=g.as5D(1,g.shape[0],g.shape[1],g.shape[2],g.shape[3]));var C=x;C.rank===4&&(C=x.as5D(1,x.shape[0],x.shape[1],x.shape[2],x.shape[3])),_(w.rank===5,function(){return"Error in conv3dDerFilter: input must be rank 5, but got shape "+w.shape+"."}),_(C.rank===5,function(){return"Error in conv3dDerFilter: dy must be rank 5, but got shape "+C.shape+"."}),_(y.length===5,function(){return"Error in conv3dDerFilter: filterShape must be length 5, but got "+y+"."}),_(w.shape[4]===y[3],function(){return"Error in conv3dDerFilter: depth of input "+w.shape[4]+") must match input depth in filter ("+y[3]+"."}),_(C.shape[4]===y[4],function(){return"Error in conv3dDerFilter: depth of dy ("+C.shape[4]+") must match output depth for filter ("+y[4]+")."});var T=ll(w.shape,y,b,1,v);return H.runKernelFunc(function(S){return S.conv3dDerFilter(w,C,T)},{x5D:w,dy5D:C})}(f,d,m.shape,t,r)}}});return c?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),uf=V({conv2dDerFilter_:function(n,e,t,r,s,o,a){o===void 0&&(o="NHWC");var i=n;n.rank===3&&(i=n.as4D(1,n.shape[0],n.shape[1],n.shape[2]));var u=e;u.rank===3&&(u=e.as4D(1,e.shape[0],e.shape[1],e.shape[2])),_(i.rank===4,function(){return"Error in conv2dDerFilter: input must be rank 4, but got shape "+i.shape+"."}),_(u.rank===4,function(){return"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."}),_(t.length===4,function(){return"Error in conv2dDerFilter: filterShape must be length 4, but got "+t+"."});var c=o==="NHWC"?i.shape[3]:i.shape[1],l=o==="NHWC"?u.shape[3]:u.shape[1];_(c===t[2],function(){return"Error in conv2dDerFilter: depth of input "+c+") must match input depth in filter ("+t[2]+"."}),_(l===t[3],function(){return"Error in conv2dDerFilter: depth of dy ("+l+") must match output depth for filter ("+t[3]+")."}),a!=null&&_(Ct(s),function(){return"Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+s+"."});var h=Lp(o),d=Co(i.shape,t,r,1,s,a,!1,h);return H.runKernelFunc(function(p){return p.conv2dDerFilter(i,u,d)},{x4D:i,dy4D:u})}}),db=V({conv2dDerInput_:ub}),bl=V({depthwiseConv2d_:function(n,e,t,r,s,o,a){o===void 0&&(o=[1,1]);var i=$(n,"x","depthwiseConv2d"),u=$(e,"filter","depthwiseConv2d"),c=i,l=!1;i.rank===3&&(l=!0,c=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),_(c.rank===4,function(){return"Error in depthwiseConv2d: input must be rank 4, but got rank "+c.rank+"."}),_(u.rank===4,function(){return"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."}),_(c.shape[3]===u.shape[2],function(){return"Error in depthwiseConv2d: number of input channels ("+c.shape[3]+") must match the inChannels dimension in filter "+u.shape[2]+"."}),o==null&&(o=[1,1]),_(kn(t,o),function(){return"Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+o+"'"}),a!=null&&_(Ct(r),function(){return"Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+r+"."});var h=Co(c.shape,u.shape,t,o,r,a,!0),d=[c,u],p=H.runKernelFunc(function(f,m){var g=f.depthwiseConv2D(c,u,h);return m([c,u]),g},{x:c,filter:u},function(f,m){_(ga(o),function(){return"Error in gradient of depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '"+o+"'"});var g=m[0],x=m[1];return{x:function(){return pb(g.shape,f,x,h)},filter:function(){return fb(g,f,x.shape,h)}}},"DepthwiseConv2dNative",h,d);return l?p.as3D(p.shape[1],p.shape[2],p.shape[3]):p}}),pb=V({depthwiseConv2dDerInput_:function(n,e,t,r){var s=e,o=!1;e.rank===3&&(o=!0,s=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var a=H.runKernelFunc(function(i){return i.depthwiseConv2DDerInput(s,t,r)},{dy4D:s});return o?a.as3D(a.shape[1],a.shape[2],a.shape[3]):a}}),fb=V({depthwiseConv2dDerFilter_:function(n,e,t,r){var s=n;n.rank===3&&(s=n.as4D(1,n.shape[0],n.shape[1],n.shape[2]));var o=e;return o.rank===3&&(o=e.as4D(1,e.shape[0],e.shape[1],e.shape[2])),H.runKernelFunc(function(a){return a.depthwiseConv2DDerFilter(s,o,r)},{x4D:s,dy4D:o})}}),eD=V({separableConv2d_:function(n,e,t,r,s,o,a){o===void 0&&(o=[1,1]),a===void 0&&(a="NHWC");var i=$(n,"x","separableConv2d"),u=$(e,"depthwiseFilter","separableConv2d"),c=$(t,"pointwiseFilter","separableConv2d"),l=i,h=!1;if(i.rank===3&&(h=!0,l=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");_(l.rank===4,function(){return"Error in separableConv2d: input must be rank 4, but got rank "+l.rank+"."}),_(u.rank===4,function(){return"Error in separableConv2d: depthwise filter must be rank 4, but got rank "+u.rank+"."}),_(c.rank===4,function(){return"Error in separableConv2d: pointwise filter must be rank 4, but got rank "+u.rank+"."}),_(c.shape[0]===1,function(){return"Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got "+c.shape[0]+"."}),_(c.shape[1]===1,function(){return"Error in separableConv2d: the second dimension of pointwise filter must be 1, but got "+c.shape[1]+"."});var d=u.shape[2],p=u.shape[3];_(c.shape[2]===d*p,function(){return"Error in separableConv2d: the third dimension of pointwise filter must be "+d*p+", but got "+c.shape[2]+"."});var f=bl(l,u,r,s,a,o),m=Ca(f,c,1,"valid",a);return h?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),mb=V({conv2dTranspose_:function(n,e,t,r,s,o){return ub(t,$(n,"x","conv2dTranspose"),$(e,"filter","conv2dTranspose"),r,s,"NHWC",o)}}),tD=V({conv3dTranspose_:function(n,e,t,r,s){return cb(t,$(n,"x","conv3dTranspose"),$(e,"filter","conv3dTranspose"),r,s)}}),cf=V({matMul_:function(n,e,t,r){var s;t===void 0&&(t=!1),r===void 0&&(r=!1);var o=$(n,"a","matMul"),a=$(e,"b","matMul");s=vt(o,a),o=s[0],a=s[1];var i=t?o.shape[o.rank-2]:o.shape[o.rank-1],u=r?a.shape[a.rank-1]:a.shape[a.rank-2],c=t?o.shape[o.rank-1]:o.shape[o.rank-2],l=r?a.shape[a.rank-2]:a.shape[a.rank-1],h=o.shape.slice(0,-2),d=a.shape.slice(0,-2),p=ve(h),f=ve(d);_(o.rank>=2&&a.rank>=2&&o.rank===a.rank,function(){return"Error in matMul: inputs must have the same rank of at least 2, got ranks "+o.rank+" and "+a.rank+"."}),_(Wt(h,d),function(){return"Error in matMul: outer dimensions ("+h+") and ("+d+") of Tensors with shapes "+o.shape+" and "+a.shape+" must match."}),_(i===u,function(){return"Error in matMul: inner shapes ("+i+") and ("+u+") of Tensors with shapes "+o.shape+" and "+a.shape+" and transposeA="+t+" and transposeB="+r+" must match."});var m=o.shape.slice(0,-2).concat([c,l]),g=t?o.as3D(p,i,c):o.as3D(p,c,i),x=r?a.as3D(f,l,u):a.as3D(f,u,l),y={transposeA:t,transposeB:r};return H.runKernelFunc(function(b,v){var w=b.batchMatMul(g,x,t,r);return v([g,x]),w},{a:g,b:x},function(b,v){var w=v,C=w[0],T=w[1];return t||r?!t&&r?{a:function(){return b.matMul(T,!1,!1)},b:function(){return b.matMul(C,!0,!1)}}:t&&!r?{a:function(){return T.matMul(b,!1,!0)},b:function(){return C.matMul(b,!1,!1)}}:{a:function(){return T.matMul(b,!0,!0)},b:function(){return b.matMul(C,!0,!0)}}:{a:function(){return b.matMul(T,!1,!0)},b:function(){return C.matMul(b,!0,!1)}}},"BatchMatMul",y).reshape(m)}}),nD=V({dot_:function(n,e){var t=$(n,"t1","dot"),r=$(e,"t2","dot");_(!(t.rank!==1&&t.rank!==2||r.rank!==1&&r.rank!==2),function(){return"Error in dot: inputs must all be rank 1 or 2, but got ranks "+t.rank+" and "+r.rank+"."});var s=t.rank===1?t.size:t.shape[1],o=r.rank===1?r.size:r.shape[0];return _(s===o,function(){return"Error in dot: inner dimensions of inputs must match, but got "+s+" and "+o+"."}),t.rank===1&&r.rank===1?t.as2D(1,-1).matMul(r.as2D(-1,1)).asScalar():t.rank===1&&r.rank===2?t.as2D(1,-1).matMul(r.as2D(r.shape[0],r.shape[1])).as1D():t.rank===2&&r.rank===1?t.matMul(r.as2D(-1,1)).as1D():t.matMul(r.as2D(r.shape[0],r.shape[1]))}}),rD=V({outerProduct_:function(n,e){var t=$(n,"v1","outerProduct"),r=$(e,"v2","outerProduct");return _(t.rank===1&&r.rank===1,function(){return"Error in outerProduct: inputs must be rank 1, but got ranks "+t.rank+" and "+r.rank+"."}),t.as2D(-1,1).matMul(r.as2D(1,-1))}}),Ia=V({reverse_:function(n,e){var t=$(n,"x","reverse");if(t.rank===0)return t.clone();var r=Ot(e,t.shape);return H.runKernelFunc(function(s){return s.reverse(t,r)},{$x:t},function(s){return{$x:function(){return s.reverse(r)}}}).reshapeAs(t)}}),sD=V({reverse1d_:function(n){var e=$(n,"x","reverse");return _(e.rank===1,function(){return"Error in reverse1D: x must be rank 1 but got rank "+e.rank+"."}),Ia(e,0)}}),oD=V({reverse2d_:function(n,e){var t=$(n,"x","reverse");return _(t.rank===2,function(){return"Error in reverse2D: x must be rank 2 but got rank "+t.rank+"."}),Ia(t,e)}}),aD=V({reverse3d_:function(n,e){var t=$(n,"x","reverse");return _(t.rank===3,function(){return"Error in reverse3D: x must be rank 3 but got rank "+t.rank+"."}),Ia(t,e)}}),iD=V({reverse4d_:function(n,e){var t=$(n,"x","reverse");return _(t.rank===4,function(){return"Error in reverse4D: x must be rank 4 but got rank "+t.rank+"."}),Ia(t,e)}});function gb(n,e,t,r,s,o){var a=$(n,"x","maxPool"),i=a,u=!1;a.rank===3&&(u=!0,i=a.as4D(1,a.shape[0],a.shape[1],a.shape[2])),_(i.rank===4,function(){return"Error in maxPool: input must be rank 4 but got rank "+i.rank+"."}),_(kn(t,r),function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+r+"'"}),o!=null&&_(Ct(s),function(){return"Error in maxPool: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+s+"."});var c=wo(i.shape,e,t,r,s,o);if(c.filterWidth===1&&c.filterHeight===1&&Wt(c.inShape,c.outShape))return a.clone();var l=[i],h=H.runKernelFunc(function(d,p){var f=d.maxPool(i,c);return p([i,f]),f},{x:i},function(d,p){var f=p[0],m=p[1];return{x:function(){return function(g,x,y,b,v,w,C,T){var S=$(g,"dy","maxPoolBackprop"),k=$(x,"input","maxPoolBackprop"),N=$(y,"output","maxPoolBackprop");_(k.rank===S.rank,function(){return"Rank of input ("+k.rank+") does not match rank of dy ("+S.rank+")"}),_(kn(v,w),function(){return"Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides "+v+" and dilations '"+w+"'"}),_(S.rank===4,function(){return"Error in maxPoolBackprop: dy must be rank 4 but got rank "+S.rank+"."}),_(k.rank===4,function(){return"Error in maxPoolBackprop: input must be rank 4 but got rank "+k.rank+"."});var I=wo(k.shape,b,v,w,C,T);return H.runKernelFunc(function(E){return E.maxPoolBackprop(S,k,N,I)},{$dy:S,$input:k})}(d,f,m,e,t,r,s)}}},"MaxPool",c,l);return u?h.as3D(h.shape[1],h.shape[2],h.shape[3]):h}function xb(n,e,t,r,s,o){var a=$(n,"x","avgPool","float32");_(kn(t,r),function(){return"Error in avgPool: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+r+"'"});var i=a,u=!1;a.rank===3&&(u=!0,i=a.as4D(1,a.shape[0],a.shape[1],a.shape[2])),_(i.rank===4,function(){return"Error in avgPool: x must be rank 4 but got rank "+i.rank+"."}),o!=null&&_(Ct(s),function(){return"Error in avgPool: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+s+"."});var c=wo(i.shape,e,t,r,s,o);if(c.filterWidth===1&&c.filterHeight===1&&Wt(c.inShape,c.outShape))return a.clone();var l=H.runKernelFunc(function(h){return h.avgPool(i,c)},{x:i},function(h){return{x:function(){return function(d,p,f,m,g,x){var y=$(d,"dy","avgPoolBackprop"),b=$(p,"input","avgPoolBackprop");_(b.rank===y.rank,function(){return"Rank of input ("+b.rank+") does not match rank of dy ("+y.rank+")"}),_(kn(m,g),function(){return"Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides "+m+" and dilations '"+g+"'"});var v=b,w=y,C=!1;b.rank===3&&(C=!0,v=b.as4D(1,b.shape[0],b.shape[1],b.shape[2]),w=y.as4D(1,y.shape[0],y.shape[1],y.shape[2])),_(w.rank===4,function(){return"Error in avgPoolBackprop: dy must be rank 4 but got rank "+w.rank+"."}),_(v.rank===4,function(){return"Error in avgPoolBackprop: input must be rank 4 but got rank "+v.rank+"."});var T=wo(v.shape,f,m,g,x),S=H.runKernelFunc(function(k){return k.avgPoolBackprop(w,v,T)},{dy4D:w,input4D:v});return C?S.as3D(S.shape[1],S.shape[2],S.shape[3]):S}(h,i,e,t,r,s)}}},"AvgPool",c);return l=l.cast(a.dtype),u?l.as3D(l.shape[1],l.shape[2],l.shape[3]):l}var yb=V({maxPool_:function(n,e,t,r,s){return gb(n,e,t,1,r,s)}}),vb=V({avgPool_:function(n,e,t,r,s){return xb(n,e,t,1,r,s)}}),uD=V({pool_:function(n,e,t,r,s,o){s==null&&(s=[1,1]),o==null&&(o=1),r===0&&(r="valid");var a=$(n,"x","maxPool"),i=a,u=!1;a.rank===3&&(u=!0,i=a.as4D(1,a.shape[0],a.shape[1],a.shape[2])),_(kn(o,s),function(){return"Error in pool: Either strides or dilations must be 1. Got strides "+o+" and dilations '"+s+"'"});var c,l=wo(i.shape,e,o,s,r),h=[l.dilationHeight,l.dilationWidth];c=r==="same"?function(v,w){var C=v.map(function(k,N){return k+(k-1)*(w[N]-1)}).map(function(k){return k-1}),T=C.map(function(k){return Math.floor(k/2)}),S=C.map(function(k,N){return k-T[N]});return C.map(function(k,N){return[T[N],S[N]]})}([l.filterHeight,l.filterWidth],h):[[0,0],[0,0]];var d=h[0]===1&&h[1]===1,p=function(v,w,C){var T=C.map(function(O){return O[0]}),S=C.map(function(O){return O[1]}),k=v.concat(T,S),N=w.map(function(O,D){return(O-k[D]%O)%O}),I=S.map(function(O,D){return O+N[D]}),E=w.map(function(O,D){return[T[D],I[D]]}),F=w.map(function(O,D){return[0,N[D]]});return[E,F]}([l.inHeight,l.inWidth],h,c),f=p[0],m=p[1],g=d?r:"valid",x=d?i:Rp(i,h,f),y=(t==="avg"?function(){return xb(x,e,o,1,g)}:function(){return gb(x,e,o,1,g)})(),b=d?y:Ep(y,h,m);return u?b.as3D(b.shape[1],b.shape[2],b.shape[3]):b}}),bb=V({maxPool3d_:function(n,e,t,r,s,o,a){o===void 0&&(o="NDHWC");var i=$(n,"x","maxPool3d"),u=i,c=!1;i.rank===4&&(c=!0,u=i.as5D(1,i.shape[0],i.shape[1],i.shape[2],i.shape[3])),a==null&&(a=[1,1,1]),_(u.rank===5,function(){return"Error in maxPool3d: x must be rank 5 but got rank "+u.rank+"."}),_(o==="NDHWC",function(){return"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+o}),_(kn(t,a),function(){return"Error in maxPool3d: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+a+"'"}),s!=null&&_(Ct(r),function(){return"Error in maxPool3d: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+r+"."});var l=cl(u.shape,e,t,a,r,s,o),h=H.runKernelFunc(function(d,p){var f=d.maxPool3d(u,l);return p([u,f]),f},{x:u},function(d,p){var f=p[0],m=p[1];return{x:function(){return function(g,x,y,b,v,w,C,T){var S=$(g,"dy","maxPool3dBackprop"),k=$(x,"input","maxPool3dBackprop"),N=$(y,"output","maxPool3dBackprop"),I=S,E=k,F=N,O=!1;k.rank===4&&(O=!0,I=S.as5D(1,S.shape[0],S.shape[1],S.shape[2],S.shape[3]),E=k.as5D(1,k.shape[0],k.shape[1],k.shape[2],k.shape[3]),F=N.as5D(1,N.shape[0],N.shape[1],N.shape[2],N.shape[3])),_(I.rank===5,function(){return"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+I.rank+"."}),_(E.rank===5,function(){return"Error in maxPool3dBackprop: input must be rank 5 but got rank "+E.rank+"."}),_(F.rank===5,function(){return"Error in maxPool3dBackprop: output must be rank 5 but got rank "+F.rank+"."}),w==null&&(w=[1,1,1]),_(kn(v,w),function(){return"Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides "+v+" and dilations '"+w+"'"}),T!=null&&_(Ct(C),function(){return"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode "+T+" but got pad "+C+"."});var D=cl(E.shape,b,v,w,C,T),M=H.runKernelFunc(function(P){return P.maxPool3dBackprop(I,E,F,D)},{dy5D:I,input5D:E});return O?M.as4D(M.shape[1],M.shape[2],M.shape[3],M.shape[4]):M}(d,f,m,e,t,a,r,s)}}});return c?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),wb=V({avgPool3d_:function(n,e,t,r,s,o,a){o===void 0&&(o="NDHWC");var i=$(n,"x","avgPool3d","float32"),u=i,c=!1;i.rank===4&&(c=!0,u=i.as5D(1,i.shape[0],i.shape[1],i.shape[2],i.shape[3])),a==null&&(a=[1,1,1]),_(u.rank===5,function(){return"Error in avgPool3d: x must be rank 5 but got rank "+u.rank+"."}),_(o==="NDHWC",function(){return"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+o}),_(kn(t,a),function(){return"Error in avgPool3d: Either strides or dilations must be 1. Got strides "+t+" and dilations '"+a+"'"}),s!=null&&_(Ct(r),function(){return"Error in avgPool3d: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+r+"."});var l=cl(u.shape,e,t,a,r,s,o),h=H.runKernelFunc(function(d){return d.avgPool3d(u,l)},{x:u},function(d){return{x:function(){return function(p,f,m,g,x,y,b){var v=$(p,"dy","avgPool3dBackprop"),w=$(f,"input","avgPool3dBackprop"),C=v,T=w,S=!1;w.rank===4&&(S=!0,C=v.as5D(1,v.shape[0],v.shape[1],v.shape[2],v.shape[3]),T=w.as5D(1,w.shape[0],w.shape[1],w.shape[2],w.shape[3])),_(C.rank===5,function(){return"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+C.rank+"."}),_(T.rank===5,function(){return"Error in avgPool3dBackprop: input must be rank 5 but got rank "+T.rank+"."}),x==null&&(x=[1,1,1]),_(kn(g,x),function(){return"Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides "+g+" and dilations '"+x+"'"}),b!=null&&_(Ct(y),function(){return"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode "+b+" but got pad "+y+"."});var k=cl(T.shape,m,g,x,y,b),N=H.runKernelFunc(function(I){return I.avgPool3dBackprop(C,T,k)},{dy5D:C,input5D:T});return S?N.as4D(N.shape[1],N.shape[2],N.shape[3],N.shape[4]):N}(d,u,e,t,a,r,s)}}});return h=h.cast(u.dtype),c?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),Cb=V({maxPoolWithArgmax_:function(n,e,t,r,s){s===void 0&&(s=!1);var o=$(n,"x","maxPoolWithArgmax"),a={filterSize:e,strides:t,pad:r,includeBatchInIndex:s},i=H.runKernel("MaxPoolWithArgmax",{x:o},a);return{result:i[0],indexes:i[1]}}}),Vr=V({slice_:function(n,e,t){var r,s,o=$(n,"x","slice");if(o.rank===0)throw new Error("Slicing scalar is not possible");(r=typeof e=="number"?[e].concat(new Array(o.rank-1).fill(0)):e.length<o.rank?e.concat(new Array(o.rank-e.length).fill(0)):e.slice()).forEach(function(u){_(u!==-1,function(){return"slice() does not support negative begin indexing."})}),s=(s=t==null?new Array(o.rank).fill(-1):typeof t=="number"?[t].concat(new Array(o.rank-1).fill(-1)):t.length<o.rank?t.concat(new Array(o.rank-t.length).fill(-1)):t).map(function(u,c){return u>=0?u:(_(u===-1,function(){return"Negative size values should be exactly -1 but got "+u+" for the slice() size at index "+c+"."}),o.shape[c]-r[c])}),vR(o,r,s);var a=o.shape,i={begin:r,size:s};return H.runKernelFunc(function(u){return u.slice(o,r,s)},{x:o},function(u){for(var c=[],l=0;l<u.rank;l++)c.push([r[l],a[l]-r[l]-s[l]]);return{x:function(){return _s(u,c)}}},"Slice",i)}}),cD=V({slice1d_:function(n,e,t){var r=$(n,"x","slice1d");return _(r.rank===1,function(){return"slice1d expects a rank-1 tensor, but got a rank-"+r.rank+" tensor"}),Vr(r,[e],[t])}}),lD=V({slice2d_:function(n,e,t){var r=$(n,"x","slice2d");return _(r.rank===2,function(){return"slice2d expects a rank-2 tensor, but got a rank-"+r.rank+" tensor"}),Vr(r,e,t)}}),hD=V({slice3d_:function(n,e,t){var r=$(n,"x","slice3d");return _(r.rank===3,function(){return"slice3d expects a rank-3 tensor, but got a rank-"+r.rank+" tensor"}),Vr(r,e,t)}}),dD=V({slice4d_:function(n,e,t){var r=$(n,"x","slice4d");return _(r.rank===4,function(){return"slice4d expects a rank-4 tensor, but got a rank-"+r.rank+" tensor"}),Vr(r,e,t)}});function Ib(n,e,t,r,s){return e.rank<t.rank&&(e=e.reshape(Mn(e.shape,r))),n.rank<t.rank&&(n=n.reshape(Mn(n.shape,r))),{x:function(){var o=n.mul(t.equal(e).cast(n.dtype));return s==null?o:o.transpose(s)}}}var kb=V({all_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=$(n,"x","all","bool"),s=Ot(e,r.shape),o=s,a=Lr(o,r.rank);a!=null&&(r=r.transpose(a),o=Pr(o.length,r.rank));var i=H.runKernelFunc(function(c){return c.all(r,o)},{$x:r});if(t){var u=Mn(i.shape,s);return i.reshape(u)}return i}}),Sb=V({any_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=$(n,"x","any","bool"),s=Ot(e,r.shape),o=s,a=Lr(o,r.rank);a!=null&&(r=r.transpose(a),o=Pr(o.length,r.rank));var i=H.runKernelFunc(function(c){return c.any(r,o)},{$x:r});if(t){var u=Mn(i.shape,s);return i.reshape(u)}return i}}),Nb=V({argMax_:function(n,e){e===void 0&&(e=0);var t=$(n,"x","argMax");e==null&&(e=0);var r=Ot(e,t.shape),s=Lr(r,t.rank);s!=null&&(t=t.transpose(s),r=Pr(r.length,t.rank));var o={axis:r[0]},a=[t];return H.runKernelFunc(function(i,u){var c=i.argMax(t,r[0]);return u([t]),c},{x:t},function(i,u){var c=u[0];return{x:function(){return Ke(c)}}},"ArgMax",o,a)}}),Tb=V({argMin_:function(n,e){e===void 0&&(e=0);var t=$(n,"x","argMin");e==null&&(e=0);var r=Ot(e,t.shape),s=Lr(r,t.rank);return s!=null&&(t=t.transpose(s),r=Pr(r.length,t.rank)),H.runKernelFunc(function(o,a){var i=o.argMin(t,r[0]);return a([t]),i},{$x:t},function(o,a){var i=a[0];return{$x:function(){return Ke(i)}}})}}),pD=V({logSumExp_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=$(n,"x","logSumExp"),s=Ot(e,r.shape),o=r.max(s,!0),a=r.sub(o).exp().sum(s).log(),i=o.reshape(a.shape).add(a);if(t){var u=Mn(i.shape,s);return i.reshape(u)}return i}}),Eb=V({max_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=$(n,"x","max"),s=r,o=Ot(e,r.shape),a=o,i=Lr(a,r.rank);i!=null&&(r=r.transpose(i),a=Pr(a.length,r.rank));var u=[r],c=H.runKernelFunc(function(h,d){var p=h.max(r,a);return d([s,p]),p},{x:r},function(h,d){return Ib(h,d[1],d[0],o,i)},"Max",{axes:a},u,[!0]);if(t){var l=Mn(c.shape,o);c=c.reshape(l)}return c}}),Rb=V({mean_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=$(n,"x","mean"),s=Ot(e,r.shape),o=ve(fn(r.shape,s)[1]);return il(function(a){var i=ye(o);return{value:(i.dtype===a.dtype?a:a.cast(i.dtype)).div(i).sum(e,t),gradFunc:function(u){var c=a.shape.slice();return s.forEach(function(l){c[l]=1}),u.reshape(c).mul(bo(a.shape,"float32")).div(o)}}})(r)}}),Ab=V({min_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=$(n,"x","min"),s=r,o=Ot(e,r.shape),a=o,i=Lr(a,r.rank);i!=null&&(r=r.transpose(i),a=Pr(a.length,r.rank));var u=[r],c=H.runKernelFunc(function(h,d){var p=h.min(r,a);return d([s,p]),p},{x:r},function(h,d){return Ib(h,d[1],d[0],o,i)},"Min",{axes:a},u,[!0]);if(t){var l=Mn(c.shape,o);c=c.reshape(l)}return c}}),fD=V({moments_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=Ot(e,(n=$(n,"x","moments")).shape),s=n.mean(r,t),o=s.shape;t||(o=Mn(s.shape,r));var a=n.toFloat().sub(s.reshape(o)).square();return{mean:s,variance:a.mean(r,t)}}}),ps=V({sum_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=$(n,"x","sum");r.dtype==="bool"&&(r=r.toInt());var s=Ot(e,r.shape);return il(function(o){var a=Lr(s,o.rank),i=s,u=o;a!=null&&(u=o.transpose(a),i=Pr(i.length,o.rank));var c=function(p){var f=o.shape.slice();return s.forEach(function(m){f[m]=1}),p.reshape(f).mul(bo(o.shape,"float32"))},l={axes:i},h=H.runKernelFunc(function(p){return p.sum(u,i)},{x:u},function(p){return{x:function(){return c(p)}}},"Sum",l);if(t){var d=Mn(h.shape,s);h=h.reshape(d)}return{value:h,gradFunc:c}})(r)}}),lf=V({prod_:function(n,e,t){e===void 0&&(e=null),t===void 0&&(t=!1);var r=$(n,"x","prod");r.dtype==="bool"&&(r=r.toInt());var s=Ot(e,r.shape),o=Lr(s,r.rank),a=s,i=r;o!=null&&(i=r.transpose(o),a=Pr(a.length,r.rank));var u=H.runKernelFunc(function(l){return l.prod(i,a)},{permutedX:i});if(t){var c=Mn(u.shape,s);u=u.reshape(c)}return u}}),hf=V({elu_:function(n){var e=$(n,"x","elu");return H.runKernelFunc(function(t,r){var s=t.elu(e);return r([s]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){return H.runKernelFunc(function(o){return o.eluDer(t,s)},{dy:t,y:s})}}})}}),$b=V({leakyRelu_:function(n,e){e===void 0&&(e=.2);var t=$(n,"x","leakyRelu");return ol(ye(e).mul(t),t)}}),df=V({prelu_:function(n,e){var t=$(n,"x","prelu"),r=$(e,"alpha","prelu");return H.runKernelFunc(function(s,o){var a=s.prelu(t,r);return o([t,r]),a},{x:t,alpha:r},function(s,o){var a=o[0],i=o[1],u=a.greater(0);return{x:function(){return Os(u,s,s.mul(i))},alpha:function(){var c=Os(u,Ke(s),s.mul(a)),l=Ut(i.shape,s.shape);return l.length>0&&(c=c.sum(l)),c.reshape(i.shape)}}},"Prelu")}}),pf=V({relu_:function(n){var e=$(n,"x","relu");return e.dtype==="bool"?e.toInt():H.runKernelFunc(function(t,r){var s=t.relu(e);return r([e]),s},{x:e},function(t,r){var s=r[0];return{x:function(){return t.mulStrict(s.step().toFloat())}}},"Relu")}}),Db=V({relu6_:function(n){var e=$(n,"x","relu6");return e.dtype==="bool"?e.toInt():H.runKernelFunc(function(t,r){var s=t.relu6(e);return r([e]),s},{x:e},function(t,r){var s=r[0],o=s.lessEqual(6).mul(s.step());return{x:function(){return t.mulStrict(o.toFloat())}}},"Relu6")}}),Fb=V({selu_:function(n){var e=$(n,"x","selu");return H.runKernelFunc(function(t,r){var s=t.selu(e);return r([e]),s},{$x:e},function(t,r){var s=r[0];return{$x:function(){var o=s.greater(ye(0)),a=ye(Xp),i=ye(Yp),u=t.mul(i),c=t.mul(a).mul(s.toFloat().exp());return Os(o,u,c)}}})}}),Ob=V({localResponseNormalization_:function(n,e,t,r,s){e===void 0&&(e=5),t===void 0&&(t=1),r===void 0&&(r=1),s===void 0&&(s=.5);var o=$(n,"x","localResponseNormalization");_(o.rank===4||o.rank===3,function(){return`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank `+o.rank+"."}),_(Ct(e),function(){return"Error in localResponseNormalization: depthRadius must be an integer but got depthRadius "+e+"."});var a=o,i=!1;o.rank===3&&(i=!0,a=o.as4D(1,o.shape[0],o.shape[1],o.shape[2]));var u=H.runKernelFunc(function(c,l){var h=c.localResponseNormalization4D(a,e,t,r,s);return l([a,h]),h},{x4D:a},function(c,l){var h=l[0],d=l[1];return{x4D:function(){return H.runKernelFunc(function(p){return p.LRNGrad(c,h,d,e,t,r,s)},{})}}});return i?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),_b=V({norm_:function(n,e,t,r){e===void 0&&(e="euclidean"),t===void 0&&(t=null),r===void 0&&(r=!1);var s=function i(u,c,l){if(l===void 0&&(l=null),u.rank===0)return u.abs();if(u.rank!==1&&l===null)return i(u.reshape([-1]),c,l);if(u.rank===1||typeof l=="number"||Array.isArray(l)&&l.length===1){if(c===1)return u.abs().sum(l);if(c===1/0)return u.abs().max(l);if(c===-1/0)return u.abs().min(l);if(c==="euclidean"||c===2)return u.abs().pow(ye(2,"int32")).sum(l).sqrt();throw new Error("Error in norm: invalid ord value: "+c)}if(Array.isArray(l)&&l.length===2){if(c===1)return u.abs().sum(l[0]).max(l[1]-1);if(c===1/0)return u.abs().sum(l[1]).max(l[0]);if(c===-1/0)return u.abs().sum(l[1]).min(l[0]);if(c==="fro"||c==="euclidean")return u.square().sum(l).sqrt();throw new Error("Error in norm: invalid ord value: "+c)}throw new Error("Error in norm: invalid axis: "+l)}(n=$(n,"x","norm"),e,t),o=s.shape;if(r){var a=Ot(t,n.shape);o=Mn(s.shape,a)}return s.reshape(o)}}),mD=V({basicLSTMCell_:function(n,e,t,r,s,o){var a=$(n,"forgetBias","basicLSTMCell"),i=$(e,"lstmKernel","basicLSTMCell"),u=$(t,"lstmBias","basicLSTMCell"),c=$(r,"data","basicLSTMCell"),l=$(s,"c","basicLSTMCell"),h=$(o,"h","basicLSTMCell"),d=c.concat(h,1).matMul(i).add(u),p=d.shape[0],f=d.shape[1]/4,m=[p,f],g=d.slice([0,0],m),x=d.slice([0,f],m),y=d.slice([0,2*f],m),b=d.slice([0,3*f],m),v=g.sigmoid().mulStrict(x.tanh()).addStrict(l.mulStrict(a.add(y).sigmoid())),w=v.tanh().mulStrict(b.sigmoid());return[v,w]}}),gD=V({multiRNNCell_:function(n,e,t,r){for(var s=$(e,"data","multiRNNCell"),o=Yc(t,"c","multiRNNCell"),a=Yc(r,"h","multiRNNCell"),i=s,u=[],c=0;c<n.length;c++){var l=n[c](i,o[c],a[c]);u.push(l[0]),u.push(l[1]),i=l[1]}var h=[],d=[];for(c=0;c<u.length;c+=2)h.push(u[c]),d.push(u[c+1]);return[h,d]}}),xD=V({movingAverage_:function(n,e,t,r,s){s===void 0&&(s=!0);var o=$(n,"v","movingAverage"),a=$(e,"x","movingAverage"),i=$(t,"decay","movingAverage");mE(o,a),_(Wt(o.shape,a.shape),function(){return"Shape mismatch in v and x"});var u=ye(1),c=u.sub(i),l=a.sub(o).mul(c);if(s){_(r!=null,function(){return"When using zeroDebias: true, step is required."});var h=$(r,"step","movingAverage");l=l.div(u.sub(Ri(i,h)))}return o.add(l)}}),Mb=V({stridedSlice_:function(n,e,t,r,s,o,a,i,u){if(s===void 0&&(s=0),o===void 0&&(o=0),a===void 0&&(a=0),i===void 0&&(i=0),u===void 0&&(u=0),r==null&&(r=new Array(e.length)),a!==0)throw new Error("ellipsis mask is not yet supported");var c=$(n,"x","stridedSlice"),l=t0(i),h=c.shape.slice();l.forEach(function(g){e[g]=0,t[g]=1,h.splice(g,0,1)}),c=c.reshape(h);for(var d=0;d<c.rank;d++)e[d]=bR(s,e,r,c.shape,d),t[d]=wR(o,t,r,c.shape,d),r[d]=r[d]||1;var p=t0(u);p.forEach(function(g){t[g]=e[g]+1,r[g]=1});var f=_p(e,t,r),m=f.filter(function(g,x){return p.indexOf(x)===-1});return r.every(function(g){return g===1})?Vr(c,e,f).reshape(m):H.runKernelFunc(function(g){return g.stridedSlice(c,e,t,r)},{$x:c}).reshape(m)}}),Lb=V({topk_:function(n,e,t){e===void 0&&(e=1),t===void 0&&(t=!0);var r=$(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");var s=r.shape[r.shape.length-1];if(e>s)throw new Error("'k' passed to topk() must be <= the last dimension ("+s+") but got "+e);var o=H.runKernelFunc(function(a){return a.topk(r,e,t)},{$x:r});return{values:o[0],indices:o[1]}}}),Pb=V({scatterND_:function(n,e,t){var r=$(n,"indices","scatterND","int32"),s=$(e,"updates","scatterND");return yR(s,r,t),H.runKernelFunc(function(o){return o.scatterND(r,s,t)},{indices:r,updates:s},null,"ScatterNd",{shape:t})}}),wl=V({fft_:function(n){_(n.dtype==="complex64",function(){return"The dtype for tf.spectral.fft() must be complex64 but got "+n.dtype+"."});var e=n.shape[n.shape.length-1],t=n.size/e,r=n.as2D(t,e);return H.runKernelFunc(function(s){return s.fft(r)},{input:n}).reshape(n.shape)}}),Mi=V({ifft_:function(n){_(n.dtype==="complex64",function(){return"The dtype for tf.spectral.ifft() must be complex64 but got "+n.dtype+"."});var e=n.shape[n.shape.length-1],t=n.size/e,r=n.as2D(t,e);return H.runKernelFunc(function(s){return s.ifft(r)},{input:n}).reshape(n.shape)}}),Cl=V({rfft_:function(n,e){_(n.dtype==="float32",function(){return"The dtype for rfft() must be real value but got "+n.dtype});var t,r=n.shape[n.shape.length-1],s=n.size/r;if(e!=null&&e<r){var o=n.shape.map(function(x){return 0}),a=n.shape.map(function(x){return x});a[n.shape.length-1]=e,t=n.slice(o,a),r=e}else if(e!=null&&e>r){var i=n.shape.map(function(x){return x});i[n.shape.length-1]=e-r,t=n.concat(bt(i),n.shape.length-1),r=e}else t=n;var u=t.zerosLike(),c=Yt(t,u).as2D(s,r),l=wl(c),h=Math.floor(r/2)+1,d=jn(l),p=br(l),f=d.split([h,r-h],d.shape.length-1),m=p.split([h,r-h],p.shape.length-1),g=t.shape.slice();return g[t.shape.length-1]=h,Yt(f[0],m[0]).reshape(g)}}),ff=V({irfft_:function(n){var e=n.shape[n.shape.length-1],t=n.size/e;if(e<=2){var r=n.as2D(t,e),s=Mi(r);return jn(s)}var o=[t,2*(e-1)],a=jn(n).as2D(t,e),i=br(n).as2D(t,e),u=a.slice([0,1],[t,e-2]).reverse(1),c=i.slice([0,1],[t,e-2]).reverse(1).mul(ye(-1)),l=a.concat(u,1),h=i.concat(c,1);return r=Yt(l,h).as2D(o[0],o[1]),s=Mi(r),jn(s)}}),yD=Object.freeze({fft:wl,ifft:Mi,rfft:Cl,irfft:ff}),mf=V({sparseToDense_:function(n,e,t,r){r===void 0&&(r=0);var s=$(n,"sparseIndices","sparseToDense","int32"),o=$(e,"sparseValues","sparseToDense"),a=$(r,"defaultValue","sparseToDense",o.dtype);return function(i,u,c,l){if(i.dtype!=="int32")throw new Error("tf.sparseToDense() expects the indices to be int32 type, but the dtype was "+i.dtype+".");if(i.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix, but got shape "+i.shape+".");var h=i.rank>0?i.shape[0]:1,d=i.rank>1?i.shape[1]:1;if(c.length!==d)throw new Error("outputShape has incorrect number of elements:, "+c.length+", should be: "+d+".");var p=u.size;if(u.rank!==0&&(u.rank!==1||p!==h))throw new Error("sparseValues has incorrect shape "+u.shape+", should be [] or ["+h+"]");if(u.dtype!==l.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,o,t,a),H.runKernelFunc(function(i){return i.sparseToDense(s,o,t,a)},{$sparseIndices:s,$sparseValues:o,$defaultValue:a})}}),Bb=V({gatherND_:function(n,e){var t=$(e,"indices","gatherND","int32"),r=$(n,"x","gatherND");return H.runKernelFunc(function(s){return s.gatherND(r,t)},{x:r,indices:t},null,"GatherNd")}}),vD=V({diag_:function(n){var e=$(n,"x","diag").flatten(),t=n.shape.concat(n.shape);return H.runKernelFunc(function(r){return r.diag(e)},{$x:e}).reshape(t)}}),bD=V({dropout_:function(n,e,t,r){var s=$(n,"x","dropout");if(_(s.dtype==="float32",function(){return"x has to be a floating point tensor since it's going to be scaled, but got a "+s.dtype+" tensor instead."}),_(e>=0&&e<1,function(){return"rate must be a float in the range [0, 1), but got "+e+"."}),e===0)return n instanceof yt?s.clone():s;var o=function(u,c){if(c==null)return u.shape.slice();if(Wt(u.shape,c))return c;if(u.shape.length===c.length){for(var l=[],h=0;h<u.shape.length;h++)c[h]==null&&u.shape[h]!=null?l.push(u.shape[h]):l.push(c[h]);return l}return c}(s,t),a=1-e,i=tf(o,0,1,"float32",r).add(a).floor().div(a);return s.mul(i)}});function zb(n,e,t){for(var r=1-n%2,s=new Float32Array(n),o=0;o<n;++o){var a=2*Math.PI*o/(n+r-1);s[o]=e-t*Math.cos(a)}return is(s,"float32")}var gf=V({hannWindow_:function(n){return zb(n,.5,.5)}}),Vb=V({hammingWindow_:function(n){return zb(n,.54,.46)}}),xf=V({frame_:function(n,e,t,r,s){r===void 0&&(r=!1),s===void 0&&(s=0);for(var o=0,a=[];o+e<=n.size;)a.push(Vr(n,o,e)),o+=t;if(r)for(;o<n.size;){var i=o+e-n.size,u=rr([Vr(n,o,e-i),Qc([i],s)]);a.push(u),o+=t}return a.length===0?yo([],[0,e]):rr(a).as2D(a.length,e)}}),Wb=V({stft_:function(n,e,t,r,s){var o;s===void 0&&(s=gf),r==null&&(o=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(o)/Math.log(2)))));for(var a=xf(n,e,t),i=$t(a,s(e)),u=[],c=0;c<a.shape[0];c++)u.push(Cl(i.slice([c,0],[1,e]),r));return rr(u)}}),wD=Object.freeze({hannWindow:gf,hammingWindow:Vb,frame:xf,stft:Wb}),gn,CD=function(n,e,t){return t===void 0&&(t=1),Ie(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h,d,p,f,m,g;return ke(this,function(x){switch(x.label){case 0:return r=$(n,"predictions","inTopK"),s=$(e,"targets","inTopK"),_(r.rank>1,function(){return"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank}),_(r.rank-1===s.rank,function(){return"predictions rank should be 1 larger than targets rank, but got predictions rank "+r.rank+" and targets rank "+s.rank}),rt(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension."),o=r.shape[r.shape.length-1],_(t>0&&t<=o,function(){return"'k' passed to inTopK() must be > 0 && <= the predictions last dimension ("+o+"), but got "+t}),[4,r.data()];case 1:return a=x.sent(),[4,s.data()];case 2:for(i=x.sent(),u=[a.length/o,o],l=u[1],h=go("bool",c=u[0]),d=0;d<c;d++){for(p=d*l,f=a.subarray(p,p+l),m=[],g=0;g<f.length;g++)m.push({value:f[g],index:g});for(m.sort(function(y,b){return b.value-y.value}),h[d]=0,g=0;g<t;g++)if(m[g].index===i[d]){h[d]=1;break}}return n!==r&&r.dispose(),e!==s&&s.dispose(),[2,Qt(h,s.shape,"bool")]}})})};(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(gn||(gn={}));var ID=V({absoluteDifference_:function(n,e,t,r){r===void 0&&(r=gn.SUM_BY_NONZERO_WEIGHTS);var s=$(n,"labels","absoluteDifference"),o=$(e,"predictions","absoluteDifference"),a=null;t!=null&&(a=$(t,"weights","absoluteDifference")),rt(s.shape,o.shape,"Error in absoluteDifference: ");var i=s.sub(o).abs();return fs(i,a,r)}}),fs=V({computeWeightedLoss_:function(n,e,t){t===void 0&&(t=gn.SUM_BY_NONZERO_WEIGHTS);var r=$(n,"losses","computeWeightedLoss"),s=null;e!=null&&(s=$(e,"weights","computeWeightedLoss"));var o=s==null?r:r.mul(s);if(t===gn.NONE)return o;if(t===gn.SUM)return o.sum();if(t===gn.MEAN){if(s==null)return o.mean();var a=r.size/s.size,i=o.sum().div(s.sum());return a>1?i.div(ye(a)):i}if(t===gn.SUM_BY_NONZERO_WEIGHTS){if(s==null)return o.sum().div(ye(r.size));var u=s.mul(bo(r.shape)).notEqual(ye(0)).sum().toFloat();return o.sum().div(u)}throw Error("Unknown reduction: "+t)}}),kD=V({cosineDistance_:function(n,e,t,r,s){s===void 0&&(s=gn.SUM_BY_NONZERO_WEIGHTS);var o=$(n,"labels","cosineDistance"),a=$(e,"predictions","cosineDistance"),i=null;r!=null&&(i=$(r,"weights","cosineDistance")),rt(o.shape,a.shape,"Error in cosineDistance: ");var u=ye(1).sub(o.mul(a).sum(t,!0));return fs(u,i,s)}}),SD=V({hingeLoss_:function(n,e,t,r){r===void 0&&(r=gn.SUM_BY_NONZERO_WEIGHTS);var s=$(n,"labels","hingeLoss"),o=$(e,"predictions","hingeLoss"),a=null;t!=null&&(a=$(t,"weights","hingeLoss")),rt(s.shape,o.shape,"Error in hingeLoss: ");var i=ye(1);s=ye(2).mul(s).sub(i);var u=i.sub(s.mul(o)).relu();return fs(u,a,r)}}),ND=V({huberLoss_:function(n,e,t,r,s){r===void 0&&(r=1),s===void 0&&(s=gn.SUM_BY_NONZERO_WEIGHTS);var o=$(n,"labels","huberLoss"),a=$(e,"predictions","huberLoss"),i=null;t!=null&&(i=$(t,"weights","huberLoss")),rt(o.shape,a.shape,"Error in huberLoss: ");var u=ye(r),c=a.sub(o).abs(),l=Fp(c,u),h=c.sub(l),d=ye(.5).mul(l.square()).add(u.mul(h));return fs(d,i,s)}}),TD=V({logLoss_:function(n,e,t,r,s){r===void 0&&(r=1e-7),s===void 0&&(s=gn.SUM_BY_NONZERO_WEIGHTS);var o=$(n,"labels","logLoss"),a=$(e,"predictions","logLoss"),i=null;t!=null&&(i=$(t,"weights","logLoss")),rt(o.shape,a.shape,"Error in logLoss: ");var u=ye(1),c=ye(r),l=o.mul(a.add(c).log()).neg().sub(u.sub(o).mul(u.sub(a).add(c).log()));return fs(l,i,s)}}),ED=V({meanSquaredError_:function(n,e,t,r){r===void 0&&(r=gn.SUM_BY_NONZERO_WEIGHTS);var s=$(n,"labels","meanSquaredError"),o=$(e,"predictions","meanSquaredError"),a=null;t!=null&&(a=$(t,"weights","meanSquaredError")),rt(s.shape,o.shape,"Error in meanSquaredError: ");var i=s.squaredDifference(o);return fs(i,a,r)}}),RD=V({sigmoidCrossEntropy_:function(n,e,t,r,s){r===void 0&&(r=0),s===void 0&&(s=gn.SUM_BY_NONZERO_WEIGHTS);var o=$(n,"multiClassLabels","sigmoidCrossEntropy"),a=$(e,"logits","sigmoidCrossEntropy"),i=null;if(t!=null&&(i=$(t,"weights","sigmoidCrossEntropy")),rt(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){var u=ye(r),c=ye(1),l=ye(.5);o=o.mul(c.sub(u)).add(l.mul(u))}var h=function(d,p){var f=$(d,"labels","sigmoidCrossEntropyWithLogits"),m=$(p,"logits","sigmoidCrossEntropyWithLogits");rt(f.shape,m.shape,"Error in sigmoidCrossEntropyWithLogits: ");var g=m.relu(),x=m.mul(f),y=m.abs().neg().exp().log1p();return g.sub(x).add(y)}(o,a);return fs(h,i,s)}}),AD=V({softmaxCrossEntropy_:function(n,e,t,r,s){r===void 0&&(r=0),s===void 0&&(s=gn.SUM_BY_NONZERO_WEIGHTS);var o=$(n,"onehotLabels","softmaxCrossEntropy"),a=$(e,"logits","softmaxCrossEntropy"),i=null;if(t!=null&&(i=$(t,"weights","softmaxCrossEntropy")),rt(o.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){var u=ye(r),c=ye(1),l=ye(o.shape[1]);o=o.mul(c.sub(u)).add(u.div(l))}var h=function(d,p,f){if(f===void 0&&(f=-1),f===-1&&(f=p.rank-1),f!==p.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank "+p.rank+" and dim was "+f);return il(function(m,g,x){var y=g.logSumExp([f],!0),b=g.toFloat().sub(y);return x([m,b]),{value:b.mul(m).neg().sum([f]),gradFunc:function(v,w){var C=w[0],T=w[1],S=Mn(v.shape,[f]);return[v.reshape(S).mul(C.toFloat().sub(T.exp())),v.reshape(S).mul(T.exp().sub(C.toFloat()))]}}})(d,p)}(o,a);return fs(h,i,s)}}),$D=Object.freeze({get Reduction(){return gn},absoluteDifference:ID,computeWeightedLoss:fs,cosineDistance:kD,hingeLoss:SD,huberLoss:ND,logLoss:TD,meanSquaredError:ED,sigmoidCrossEntropy:RD,softmaxCrossEntropy:AD});function Ub(n,e){return e===void 0&&(e=!1),H.tidy(function(){if(n.shape.length!==2)throw new Error("qr2d() requires a 2D Tensor, but got a "+n.shape.length+"D Tensor.");for(var t=n.shape[0],r=n.shape[1],s=J0(t),o=n.clone(),a=yo([[1]],[1,1]),i=a.clone(),u=t>=r?r:t,c=function(h){var d,p=o,f=i,m=s;d=H.tidy(function(){var g=o.slice([h,h],[t-h,1]),x=g.norm(),y=o.slice([h,h],[1,1]),b=yo([[-1]]).where(y.greater(0),yo([[1]])),v=y.sub(b.mul(x)),w=g.div(v);i=w.shape[0]===1?a.clone():a.concat(w.slice([1,0],[w.shape[0]-1,w.shape[1]]),0);var C=b.matMul(v).div(x).neg(),T=o.slice([h,0],[t-h,r]),S=C.mul(i),k=i.transpose();if(h===0)o=T.sub(S.matMul(k.matMul(T)));else{var N=T.sub(S.matMul(k.matMul(T)));o=o.slice([0,0],[h,r]).concat(N,0)}var I=S.transpose(),E=s.slice([0,h],[t,s.shape[1]-h]);if(h===0)s=E.sub(E.matMul(i).matMul(I));else{var F=E.sub(E.matMul(i).matMul(I));s=s.slice([0,0],[t,h]).concat(F,1)}return[i,o,s]}),i=d[0],o=d[1],s=d[2],_n([p,f,m])},l=0;l<u;++l)c(l);return!e&&t>r&&(s=s.slice([0,0],[t,r]),o=o.slice([0,0],[r,r])),[s,o]})}var DD=V({bandPart_:function(n,e,t){if(e%1!=0)throw new Error("bandPart(): numLower must be an integer, got "+e+".");if(t%1!=0)throw new Error("bandPart(): numUpper must be an integer, got "+t+".");var r=$(n,"a","bandPart");if(r.rank<2)throw new Error("bandPart(): Rank must be at least 2, got "+r.rank+".");var s=r.shape,o=r.shape.slice(-2),a=o[0],i=o[1];if(!(e<=a))throw new Error("bandPart(): numLower ("+e+") must not be greater than the number of rows ("+a+").");if(!(t<=i))throw new Error("bandPart(): numUpper ("+t+") must not be greater than the number of columns ("+i+").");e<0&&(e=a),t<0&&(t=i);var u=Ti(0,a,1,"int32").reshape([-1,1]),c=Ti(0,i,1,"int32"),l=hs(u,c),h=Oi(l.lessEqual(ye(+e,"int32")),l.greaterEqual(ye(-t,"int32"))),d=bt([a,i],r.dtype);return cs(Ei(r.reshape([-1,a,i])).map(function(p){return Os(h,p,d)})).reshape(s)}}),FD=V({gramSchmidt_:function(n){var e;if(Array.isArray(n)){e=!1,_(n!=null&&n.length>0,function(){return"Gram-Schmidt process: input must not be null, undefined, or empty"});for(var t=n[0].shape[0],r=function(u){_(n[u].shape[0]===t,function(){return"Gram-Schmidt: Non-unique lengths found in the input vectors: ("+n[u].shape[0]+" vs. "+t+")"})},s=1;s<n.length;++s)r(s)}else e=!0,n=Jc(n,n.shape[0],0).map(function(u){return Ap(u,[0])});_(n.length<=n[0].shape[0],function(){return"Gram-Schmidt: Number of vectors ("+n.length+") exceeds number of dimensions ("+n[0].shape[0]+")."});var o=[],a=n,i=function(u){o.push(H.tidy(function(){var c=a[u];if(u>0)for(var l=0;l<u;++l){var h=ps(o[l].mulStrict(c)).mul(o[l]);c=c.sub(h)}return c.div(_b(c,"euclidean"))}))};for(s=0;s<n.length;++s)i(s);return e?cs(o,0):o}}),OD=V({qr_:function(n,e){if(e===void 0&&(e=!1),n.rank<2)throw new Error("qr() requires input tensor to have a rank >= 2, but got rank "+n.rank);if(n.rank===2)return Ub(n,e);var t=n.shape.slice(0,n.shape.length-2).reduce(function(a,i){return a*i}),r=Ei(n.reshape([t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],o=[];return r.forEach(function(a){var i=Ub(a,e),u=i[0],c=i[1];s.push(u),o.push(c)}),[cs(s,0).reshape(n.shape),cs(o,0).reshape(n.shape)]}}),_D=Object.freeze({bandPart:DD,gramSchmidt:FD,qr:OD});function Il(n,e,t,r,s,o){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),o==null&&(o=0);var a=n.shape[0];return t=Math.min(t,a),_(0<=r&&r<=1,function(){return"iouThreshold must be in [0, 1], but was '"+r+"'"}),_(n.rank===2,function(){return"boxes must be a 2D tensor, but was of rank '"+n.rank+"'"}),_(n.shape[1]===4,function(){return"boxes must have 4 columns, but 2nd dimension was "+n.shape[1]}),_(e.rank===1,function(){return"scores must be a 1D tensor"}),_(e.shape[0]===a,function(){return"scores has incompatible shape with boxes. Expected "+a+", but was "+e.shape[0]}),_(0<=o&&o<=1,function(){return"softNmsSigma must be in [0, 1], but was '"+o+"'"}),{maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}var MD=V({resizeBilinear_:function(n,e,t){t===void 0&&(t=!1);var r=$(n,"images","resizeBilinear");_(r.rank===3||r.rank===4,function(){return"Error in resizeBilinear: x must be rank 3 or 4, but got rank "+r.rank+"."}),_(e.length===2,function(){return"Error in resizeBilinear: new shape must 2D, but got shape "+e+"."});var s=r,o=!1;r.rank===3&&(o=!0,s=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var a=e[0],i=e[1],u=H.runKernelFunc(function(c,l){return l([s]),c.resizeBilinear(s,a,i,t)},{x:s},function(c,l){return{x:function(){return H.runKernelFunc(function(h){return h.resizeBilinearBackprop(c,l[0],t)},{})}}},"ResizeBilinear",{alignCorners:t,newHeight:a,newWidth:i});return o?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),LD=V({resizeNearestNeighbor_:function(n,e,t){t===void 0&&(t=!1);var r=$(n,"images","resizeNearestNeighbor");_(r.rank===3||r.rank===4,function(){return"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank "+r.rank+"."}),_(e.length===2,function(){return"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+e+"."}),_(r.dtype==="float32"||r.dtype==="int32",function(){return"`images` must have `int32` or `float32` as dtype"});var s=r,o=!1;r.rank===3&&(o=!0,s=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var a=e[0],i=e[1],u=H.runKernelFunc(function(c,l){return l([s]),c.resizeNearestNeighbor(s,a,i,t)},{batchImages:s},function(c,l){return{batchImages:function(){return H.runKernelFunc(function(h){return h.resizeNearestNeighborBackprop(c,l[0],t)},{})}}});return o?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),PD=V({nonMaxSuppression_:function(n,e,t,r,s){r===void 0&&(r=.5),s===void 0&&(s=Number.NEGATIVE_INFINITY);var o=$(n,"boxes","nonMaxSuppression"),a=$(e,"scores","nonMaxSuppression"),i=Il(o,a,t,r,s);t=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;var u={maxOutputSize:t,iouThreshold:r,scoreThreshold:s};return H.runKernelFunc(function(c){return c.nonMaxSuppression(o,a,t,r,s)},{boxes:o,scores:a},null,"NonMaxSuppressionV3",u)}}),BD=function(n,e,t,r,s){return r===void 0&&(r=.5),s===void 0&&(s=Number.NEGATIVE_INFINITY),Ie(this,void 0,void 0,function(){var o,a,i,u,c,l,h;return ke(this,function(d){switch(d.label){case 0:return o=$(n,"boxes","nonMaxSuppressionAsync"),a=$(e,"scores","nonMaxSuppressionAsync"),i=Il(o,a,t,r,s),t=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold,[4,Promise.all([o.data(),a.data()])];case 1:return u=d.sent(),c=u[0],l=u[1],h=zp(c,l,t,r,s),o!==n&&o.dispose(),a!==e&&a.dispose(),[2,h]}})})},zD=V({nonMaxSuppressionWithScore_:function(n,e,t,r,s,o){r===void 0&&(r=.5),s===void 0&&(s=Number.NEGATIVE_INFINITY),o===void 0&&(o=0);var a=$(n,"boxes","nonMaxSuppression"),i=$(e,"scores","nonMaxSuppression"),u=Il(a,i,t,r,s,o),c={maxOutputSize:t=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:o=u.softNmsSigma},l=H.runKernel("NonMaxSuppressionV5",{boxes:a,scores:i},c);return{selectedIndices:l[0],selectedScores:l[1]}}}),VD=function(n,e,t,r,s,o){return r===void 0&&(r=.5),s===void 0&&(s=Number.NEGATIVE_INFINITY),o===void 0&&(o=0),Ie(this,void 0,void 0,function(){var a,i,u,c,l,h,d;return ke(this,function(p){switch(p.label){case 0:return a=$(n,"boxes","nonMaxSuppressionAsync"),i=$(e,"scores","nonMaxSuppressionAsync"),u=Il(a,i,t,r,s,o),t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma,[4,Promise.all([a.data(),i.data()])];case 1:return c=p.sent(),l=c[0],h=c[1],d=Vp(l,h,t,r,s,o),a!==n&&a.dispose(),i!==e&&i.dispose(),[2,d]}})})},WD=V({cropAndResize_:function(n,e,t,r,s,o){var a=$(n,"image","cropAndResize"),i=$(e,"boxes","cropAndResize","float32"),u=$(t,"boxInd","cropAndResize","int32");s=s||"bilinear",o=o||0;var c=i.shape[0];return _(a.rank===4,function(){return"Error in cropAndResize: image must be rank 4,but got rank "+a.rank+"."}),_(i.rank===2&&i.shape[1]===4,function(){return"Error in cropAndResize: boxes must be have size ["+c+",4] but had shape "+i.shape+"."}),_(u.rank===1&&u.shape[0]===c,function(){return"Error in cropAndResize: boxInd must be have size ["+c+"] but had shape "+i.shape+"."}),_(r.length===2,function(){return"Error in cropAndResize: cropSize must be of length 2, but got length "+r.length+"."}),_(r[0]>=1&&r[1]>=1,function(){return"cropSize must be atleast [1,1], but was "+r}),_(s==="bilinear"||s==="nearest",function(){return"method must be bilinear or nearest, but was "+s}),H.runKernelFunc(function(l,h){return l.cropAndResize(a,i,u,r,s,o)},{images:a,boxes:i,boxInd:u},null,"CropAndResize",{method:s,extrapolationValue:o,cropSize:r})}}),ka=Object.freeze({resizeBilinear:MD,resizeNearestNeighbor:LD,nonMaxSuppression:PD,nonMaxSuppressionAsync:BD,nonMaxSuppressionWithScore:zD,nonMaxSuppressionWithScoreAsync:VD,cropAndResize:WD}),yf=function(n,e){return!(n>0)||e==="linear"},vf=function(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return n.mul(e.step());throw new Error("Gradient for activation "+t+" has not been implemented yet.")},bf=function(n,e){var t=e,r=Ut(n.shape,e.shape);return r.length>0&&(t=t.sum(r)),t.reshape(n.shape)},wf=function(n,e,t){if(e==="linear")return n;if(e==="relu")return pf(n);if(e==="elu")return hf(n);if(e==="relu6")return Db(n);if(e==="prelu")return df(n,t);throw new Error("Unknown fused activation "+e+".")},UD=V({fusedMatMul_:function(n){var e,t=n.a,r=n.b,s=n.transposeA,o=s!==void 0&&s,a=n.transposeB,i=a!==void 0&&a,u=n.bias,c=n.activation,l=c===void 0?"linear":c,h=n.preluActivationWeights;if(yf(H.state.gradientDepth,l)===!1){var d=cf(t,r,o,i);return u!=null&&(d=ls(d,u)),wf(d,l,h)}var p=$(t,"a","fused matMul"),f=$(r,"b","fused matMul");e=vt(p,f),p=e[0],f=e[1];var m=o?p.shape[p.rank-2]:p.shape[p.rank-1],g=i?f.shape[f.rank-1]:f.shape[f.rank-2],x=o?p.shape[p.rank-1]:p.shape[p.rank-2],y=i?f.shape[f.rank-2]:f.shape[f.rank-1],b=p.shape.slice(0,-2),v=f.shape.slice(0,-2),w=ve(b),C=ve(v);_(p.rank>=2&&f.rank>=2&&p.rank===f.rank,function(){return"Error in fused matMul: inputs must have the same rank of at least 2, got ranks "+p.rank+" and "+f.rank+"."}),_(Wt(b,v),function(){return"Error in fused matMul: outer dimensions ("+b+") and ("+v+") of Tensors with shapes "+p.shape+" and "+f.shape+" must match."}),_(m===g,function(){return"Error in fused matMul: inner shapes ("+m+") and ("+g+") of Tensors with shapes "+p.shape+" and "+f.shape+" and transposeA="+o+" and transposeB="+i+" must match."});var T,S,k=p.shape.slice(0,-2).concat([x,y]),N=o?p.as3D(w,m,x):p.as3D(w,x,m),I=i?f.as3D(C,y,g):f.as3D(C,g,y);u!=null&&qe(k,(T=vt(T=$(u,"bias","fused matMul"),p)[0]).shape),h!=null&&(S=$(h,"prelu weights","fused matMul"));var E={a:N,b:I};u!=null&&(E.bias=T),h!=null&&(E.preluActivationWeights=S);var F=[N,I];return H.runKernelFunc(function(O,D){var M=O.fusedBatchMatMul({a:N,b:I,transposeA:o,transposeB:i,bias:T,activation:l,preluActivationWeights:S});return D([N,I,M]),M},E,function(O,D){var M=D[0],P=D[1],L=D[2],z=vf(O,L,l),W={};return u!=null&&(W={bias:function(){return bf(T,z)}}),Object.assign(o||i?!o&&i?{a:function(){return z.matMul(P,!1,!1)},b:function(){return z.matMul(M,!0,!1)}}:o&&!i?{a:function(){return P.matMul(z,!1,!0)},b:function(){return M.matMul(z,!1,!1)}}:{a:function(){return P.matMul(z,!0,!0)},b:function(){return z.matMul(M,!0,!0)}}:{a:function(){return z.matMul(P,!1,!0)},b:function(){return M.matMul(z,!0,!1)}},W)},"_FusedMatMul",{transposeA:o,transposeB:i,activation:l},F,[!0]).reshape(k)}}),GD=V({fusedConv2d_:function(n){var e=n.x,t=n.filter,r=n.strides,s=n.pad,o=n.dataFormat,a=o===void 0?"NHWC":o,i=n.dilations,u=i===void 0?[1,1]:i,c=n.dimRoundingMode,l=n.bias,h=n.activation,d=h===void 0?"linear":h,p=n.preluActivationWeights;if(d=d||"linear",yf(H.state.gradientDepth,d)===!1){var f=Ca(e,t,r,s,a,u,c);return l!=null&&(f=ls(f,l)),wf(f,d,p)}var m=$(e,"x","conv2d"),g=$(t,"filter","conv2d"),x=m,y=!1;m.rank===3&&(y=!0,x=m.as4D(1,m.shape[0],m.shape[1],m.shape[2])),_(x.rank===4,function(){return"Error in fused conv2d: input must be rank 4, but got rank "+x.rank+"."}),_(g.rank===4,function(){return"Error in fused conv2d: filter must be rank 4, but got rank "+g.rank+"."}),c!=null&&_(Ct(s),function(){return"Error in fused conv2d: pad must be an integer when using, dimRoundingMode "+c+" but got pad "+s+"."}),_(x.shape[3]===g.shape[2],function(){return"Error in conv2d: depth of input ("+x.shape[3]+") must match input depth for filter "+g.shape[2]+"."}),_(kn(r,u),function(){return"Error in conv2D: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+u+"'"}),_(a==="NHWC",function(){return"Error in conv2d: got dataFormat of "+a+" but only NHWC is currently supported."});var b,v,w=Co(x.shape,g.shape,r,u,s,c);l!=null&&(b=vt(b=$(l,"bias","fused conv2d"),m)[0],qe(w.outShape,b.shape)),p!=null&&(v=$(p,"prelu weights","fused conv2d"));var C={x,filter:g};l!=null&&(C.bias=b),p!=null&&(C.preluActivationWeights=v);var T=[g,x],S=H.runKernelFunc(function(k,N){var I=k.fusedConv2d({input:x,filter:g,convInfo:w,bias:b,activation:d,preluActivationWeights:v});return N([g,x,I]),I},C,function(k,N){var I=N,E=I[0],F=I[1],O=I[2],D=vf(k,O,d);_(ga(u),function(){return"Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+u+"'"});var M={};return l!=null&&(M={bias:function(){return bf(b,D)}}),Object.assign({x:function(){return db(F.shape,D,E,r,s)},filter:function(){return uf(F,D,E.shape,r,s)}},M)},"FusedConv2D",{convInfo:w,activation:d},T,[!0]);return y?S.as3D(S.shape[1],S.shape[2],S.shape[3]):S}}),HD=V({fusedDepthwiseConv2d_:function(n){var e=n.x,t=n.filter,r=n.strides,s=n.pad,o=n.dataFormat,a=o===void 0?"NHWC":o,i=n.dilations,u=i===void 0?[1,1]:i,c=n.dimRoundingMode,l=n.bias,h=n.activation,d=h===void 0?"linear":h,p=n.preluActivationWeights;if(yf(H.state.gradientDepth,d)===!1){var f=bl(e,t,r,s,a,u,c);return l!=null&&(f=ls(f,l)),wf(f,d,p)}var m=$(e,"x","depthwiseConv2d"),g=$(t,"filter","depthwiseConv2d"),x=m,y=!1;m.rank===3&&(y=!0,x=m.as4D(1,m.shape[0],m.shape[1],m.shape[2])),_(x.rank===4,function(){return"Error in fused depthwiseConv2d: input must be rank 4, but got rank "+x.rank+"."}),_(g.rank===4,function(){return"Error in fused depthwiseConv2d: filter must be rank 4, but got rank "+g.rank+"."}),_(x.shape[3]===g.shape[2],function(){return"Error in fused depthwiseConv2d: number of input channels ("+x.shape[3]+") must match the inChannels dimension in filter "+g.shape[2]+"."}),u==null&&(u=[1,1]),_(kn(r,u),function(){return"Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+u+"'"}),c!=null&&_(Ct(s),function(){return"Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode "+c+" but got pad "+s+"."});var b,v,w=Co(x.shape,g.shape,r,u,s,c,!0);l!=null&&(b=vt(b=$(l,"bias","fused conv2d"),m)[0],qe(w.outShape,b.shape)),p!=null&&(v=$(p,"prelu weights","fused depthwiseConv2d"));var C={x,filter:g};l!=null&&(C.bias=b),p!=null&&(C.preluActivationWeights=v);var T=[g,x],S=H.runKernelFunc(function(k,N){var I=k.fusedDepthwiseConv2D({input:x,filter:g,convInfo:w,bias:b,activation:d,preluActivationWeights:v});return N([g,x,I]),I},C,function(k,N){_(ga(u),function(){return"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '"+u+"'"});var I=N[0],E=N[1],F=N[2],O=vf(k,F,d),D={};return l!=null&&(D={bias:function(){return bf(b,O)}}),Object.assign({x:function(){return pb(E.shape,O,I,w)},filter:function(){return fb(E,O,I.shape,w)}},D)},"FusedDepthwiseConv2D",{convInfo:w,activation:d},T,[!0]);return y?S.as3D(S.shape[1],S.shape[2],S.shape[3]):S}}),kl=Object.freeze({matMul:UD,conv2d:GD,depthwiseConv2d:HD}),qD=Object.freeze({image:ka,linalg:_D,losses:$D,spectral:yD,fused:kl,signal:wD,add:ls,addN:G0,batchNorm:wa,batchNormalization:R$,batchNorm2d:$$,batchNormalization2d:A$,batchNorm3d:F$,batchNormalization3d:D$,batchNorm4d:_$,batchNormalization4d:O$,broadcastTo:Y0,clone:M$,div:ds,divNoNan:Zp,eye:J0,multinomial:Z0,oneHot:_i,pad:_s,pad1d:P$,pad2d:B$,pad3d:z$,pad4d:V$,rand:W$,randomGamma:H$,randomNormal:q$,randomUniform:tf,square:nf,squaredDifference:rf,tile:To,truncatedNormal:eb,conv1d:lb,conv2d:Ca,conv3d:hb,depthwiseConv2d:bl,separableConv2d:eD,conv2dTranspose:mb,conv3dTranspose:tD,op:V,booleanMaskAsync:Z$,complex:Yt,real:jn,imag:br,concat:rr,concat1d:QE,concat2d:JE,concat3d:ZE,concat4d:eR,split:Jc,matMul:cf,dot:nD,outerProduct:rD,reverse:Ia,reverse1d:sD,reverse2d:oD,reverse3d:aD,reverse4d:iD,maxPool:yb,avgPool:vb,pool:uD,maxPool3d:bb,avgPool3d:wb,maxPoolWithArgmax:Cb,slice:Vr,slice1d:cD,slice2d:lD,slice3d:hD,slice4d:dD,abs:kv,acos:Sv,acosh:Nv,asin:Tv,asinh:Ev,atan:Rv,atanh:Av,ceil:$v,clipByValue:Dv,cos:Fv,cosh:Ov,erf:_v,exp:Mv,expm1:Lv,floor:Pv,log:Bv,log1p:zv,logSigmoid:rR,neg:sl,reciprocal:Vv,round:Wv,rsqrt:$p,sigmoid:Uv,sign:Gv,isNaN:sR,isInf:oR,isFinite:aR,sin:Hv,sinh:qv,softplus:jv,sqrt:Kv,step:iR,tan:Xv,tanh:Yv,all:kb,any:Sb,argMax:Nb,argMin:Tb,logSumExp:pD,max:Eb,mean:Rb,min:Ab,moments:fD,sum:ps,prod:lf,equal:sf,equalStrict:j$,greater:tb,greaterEqual:of,greaterEqualStrict:K$,greaterStrict:X$,less:nb,lessEqual:rb,lessEqualStrict:Y$,lessStrict:Q$,notEqual:sb,notEqualStrict:J$,addStrict:uR,atan2:Qv,divStrict:cR,floorDiv:Dp,maximum:ol,maximumStrict:lR,minimum:Fp,minimumStrict:hR,mod:Jv,modStrict:dR,mul:$t,mulStrict:pR,pow:Ri,powStrict:fR,squaredDifferenceStrict:mR,sub:hs,subStrict:gR,elu:hf,leakyRelu:$b,prelu:df,relu:pf,relu6:Db,selu:Fb,logicalAnd:Oi,logicalNot:Q0,logicalOr:Qp,logicalXor:L$,where:Os,whereAsync:Jp,buffer:Le,print:tR,batchToSpaceND:Ep,cast:pv,cumsum:nR,depthToSpace:fv,expandDims:us,reshape:Br,spaceToBatchND:Rp,squeeze:Ap,stack:cs,unstack:Ei,setdiff1dAsync:mv,fill:Qc,linspace:dv,ones:bo,range:Ti,scalar:ye,tensor:Qt,tensor1d:is,tensor2d:yo,tensor3d:hv,tensor4d:vo,tensor5d:KE,tensor6d:XE,variable:YE,zeros:bt,onesLike:Tp,zerosLike:Ke,transpose:sr,softmax:ul,logSoftmax:s0,localResponseNormalization:Ob,norm:_b,gather:vl,unsortedSegmentSum:ib,basicLSTMCell:mD,multiRNNCell:gD,movingAverage:xD,stridedSlice:Mb,topk:Lb,scatterND:Pb,fft:wl,ifft:Mi,rfft:Cl,irfft:ff,sparseToDense:mf,gatherND:Bb,diag:vD,dropout:bD,hannWindow:gf,hammingWindow:Vb,frame:xf,stft:Wb,inTopKAsync:CD});function ie(n,e){Array.isArray(n)||(n=[n]),n.forEach(function(t){t!=null&&_(t.dtype!=="complex64",function(){return e+" does not support complex64 tensors."})})}function Cf(n,e,t,r,s,o){for(var a=s.strideHeight,i=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,l=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Le(s.outShape,t),g=m.values,x=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],b=s.outShape[3],v=0;v<s.batchSize;++v)for(var w=v*x,C=v*r[0],T=0;T<s.inChannels;++T)for(var S=0;S<s.outHeight;++S)for(var k=S*a-d,N=Math.max(0,k),I=Math.min(s.inHeight,l+k),E=w+S*y,F=0;F<s.outWidth;++F){for(var O=F*i-p,D=Math.max(0,O),M=Math.min(s.inWidth,h+O),P=f,L=0,z=0,W=N;W<I;W+=u){for(var j=C+W*r[1],Y=D;Y<M;Y+=c){var J=n[j+Y*r[2]+T];o==="max"&&J>P?P=J:o==="avg"&&(L+=J,z++)}if(isNaN(P))break}g[E+F*b+T]=o==="avg"?L/z:P}return m}function Gb(n,e,t,r,s,o){s===void 0&&(s=!1),o===void 0&&(o=!1);for(var a=Le(r.outShape,"int32"),i=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Le(e,t,n),g=0;g<r.batchSize;++g)for(var x=0;x<r.inChannels;++x)for(var y=0;y<r.outHeight;++y){for(var b=y*i-p,v=b;v<0;)v+=c;for(var w=Math.min(r.inHeight,h+b),C=0;C<r.outWidth;++C){for(var T=C*u-f,S=T;S<0;)S+=l;for(var k=Math.min(r.inWidth,d+T),N=Number.NEGATIVE_INFINITY,I=-1,E=v;E<w;E+=c)for(var F=E-b,O=S;O<k;O+=l){var D=O-T,M=m.get(g,E,O,x);M>N&&(N=M,I=s?o?((g*r.inHeight+E)*r.inWidth+O)*r.inChannels+x:(E*r.inWidth+O)*r.inChannels+x:F*d+D)}a.set(I,g,y,C,x)}}return a}function If(n,e,t,r){if(t==="linear")return n.linear(e);if(t==="relu")return n.relu(e);if(t==="elu")return n.elu(e);if(t==="relu6")return n.relu6(e);if(t==="prelu")return n.prelu(e,r);throw new Error("Activation "+t+" has not been implemented for the CPU backend.")}var jD=function(n){function e(){var t=n.call(this)||this;return t.blockSize=48,t.firstUse=!0,t.data=new o0(t,H),t}return xr(e,n),e.prototype.write=function(t,r,s){this.firstUse&&(this.firstUse=!1,se().get("IS_NODE")&&Xc(`
============================
Hi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.
============================`));var o={};return this.data.set(o,{values:t,dtype:s}),o},e.prototype.move=function(t,r,s,o){this.data.set(t,{values:r,dtype:o})},e.prototype.numDataIds=function(){return this.data.numDataIds()},e.prototype.read=function(t){return Ie(this,void 0,void 0,function(){return ke(this,function(r){return[2,this.readSync(t)]})})},e.prototype.readSync=function(t){var r=this.data.get(t),s=r.dtype,o=r.complexTensors;return s==="complex64"?Bp(this.readSync(o.real.dataId),this.readSync(o.imag.dataId)):this.data.get(t).values},e.prototype.bufferSync=function(t){var r=this.readSync(t.dataId),s=r;if(t.dtype==="string")try{s=r.map(function(o){return vi(o)})}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Le(t.shape,t.dtype,s)},e.prototype.makeOutput=function(t,r,s){var o=this.write(t,r,s);return H.makeTensorFromDataId(o,r,s,this)},e.prototype.disposeData=function(t){if(this.data.has(t)){var r=this.data.get(t).complexTensors;r!=null&&(r.real.dispose(),r.imag.dispose()),this.data.delete(t)}},e.prototype.time=function(t){return Ie(this,void 0,void 0,function(){var r;return ke(this,function(s){return r=vr(),t(),[2,{kernelMs:vr()-r}]})})},e.prototype.memory=function(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}},e.prototype.complex=function(t,r){var s=this.makeOutput(null,t.shape,"complex64");return this.data.get(s.dataId).complexTensors={real:H.keep(t.clone()),imag:H.keep(r.clone())},s},e.prototype.real=function(t){return this.data.get(t.dataId).complexTensors.real.clone()},e.prototype.imag=function(t){return this.data.get(t.dataId).complexTensors.imag.clone()},e.prototype.slice=function(t,r,s){if(ie(t,"slice"),n0(t.shape,r,s)){var o=r0(r,t.strides),a=ve(s);return Qt(this.readSync(t.dataId).subarray(o,o+a),s,t.dtype)}for(var i=Le(s,t.dtype),u=this.bufferSync(t),c=0;c<i.size;++c){var l=i.indexToLoc(c).map(function(h,d){return h+r[d]});i.values[c]=u.get.apply(u,l)}return i.toTensor()},e.prototype.stridedSlice=function(t,r,s,o){ie(t,"stridedSlice");var a=_p(r,s,o);if(a.some(function(p){return p===0}))return Qt([],a);for(var i=Le(a,t.dtype),u=this.bufferSync(t),c=0;c<i.size;c++){for(var l=i.indexToLoc(c),h=new Array(l.length),d=0;d<h.length;d++)h[d]=l[d]*o[d]+r[d];i.set.apply(i,[u.get.apply(u,h)].concat(l))}return i.toTensor()},e.prototype.diag=function(t){for(var r=this.readSync(t.dataId),s=Le([t.size,t.size],t.dtype),o=s.values,a=0;a<r.length;a++)o[a*t.size+a]=r[a];return s.toTensor()},e.prototype.unstack=function(t,r){for(var s=t.shape[r],o=new Array(t.rank-1),a=0,i=0;i<t.rank;i++)i!==r&&(o[a++]=t.shape[i]);var u=new Array(t.rank).fill(0),c=t.shape.slice();c[r]=1;var l=new Array(s);for(i=0;i<l.length;i++)u[r]=i,l[i]=this.slice(t,u,c).reshape(o);return l},e.prototype.reverse=function(t,r){ie(t,"reverse");for(var s=Le(t.shape,t.dtype),o=this.bufferSync(t),a=function(u){var c=s.indexToLoc(u),l=c.slice();r.forEach(function(h){return l[h]=t.shape[h]-1-l[h]}),s.set.apply(s,[o.get.apply(o,l)].concat(c))},i=0;i<s.size;i++)a(i);return s.toTensor()},e.prototype.concat=function(t,r){var s=this;if(t[0].dtype==="complex64"){var o=t.map(function(p){return jn(p)}),a=t.map(function(p){return br(p)});return Yt(this.concat(o,r),this.concat(a,r))}var i=t.map(function(p){var f=ve(p.shape.slice(r));return p.as2D(-1,f)}),u=fa(i.map(function(p){return p.shape}),1),c=Le(u,t[0].dtype).values;if(i[0].shape[0]===1){var l=0;i.forEach(function(p){c.set(s.readSync(p.dataId),l),l+=p.size})}else{var h=0;i.forEach(function(p){for(var f=s.readSync(p.dataId),m=0,g=0;g<p.shape[0];++g)for(var x=g*u[1]+h,y=0;y<p.shape[1];++y)c[x+y]=f[m++];h+=p.shape[1]})}var d=fa(t.map(function(p){return p.shape}),r);return Qt(c,d,t[0].dtype)},e.prototype.neg=function(t){return ie(t,"neg"),this.multiply(ye(-1),t)},e.prototype.add=function(t,r){return t.dtype==="complex64"||r.dtype==="complex64"?this.broadcastedBinaryComplexOp(t.cast("complex64"),r.cast("complex64"),function(s,o,a,i){return{real:s+a,imag:o+i}}):this.broadcastedBinaryOp(t,r,on(t.dtype,r.dtype),function(s,o){return s+o})},e.prototype.addN=function(t){var r=this;ie(t,"addN");for(var s=t.map(function(l){return r.readSync(l.dataId)}),o=Le(t[0].shape,t[0].dtype),a=o.values,i=0;i<t.length;i++)for(var u=s[i],c=0;c<a.length;c++)a[c]+=u[c];return o.toTensor()},e.prototype.softmax=function(t,r){var s=Ot([r],t.shape),o=this.max(t,s),a=Mn(o.shape,s),i=this.subtract(t,o.reshape(a)),u=this.exp(i),c=this.sum(u,s).reshape(a);return ds(u,c)},e.prototype.subtract=function(t,r){return t.dtype==="complex64"||r.dtype==="complex64"?this.broadcastedBinaryComplexOp(t.cast("complex64"),r.cast("complex64"),function(s,o,a,i){return{real:s-a,imag:o-i}}):this.broadcastedBinaryOp(t,r,on(t.dtype,r.dtype),function(s,o){return s-o})},e.prototype.pow=function(t,r){return ie([t,r],"pow"),this.broadcastedBinaryOp(t,r,t.dtype,function(s,o){return Math.pow(s,o)})},e.prototype.batchMatMul=function(t,r,s,o){ie([t,r],"matMul");for(var a=s?t.shape[1]:t.shape[2],i=s?t.shape[2]:t.shape[1],u=o?r.shape[1]:r.shape[2],c=t.shape[0],l=this.readSync(t.dataId),h=this.readSync(r.dataId),d=s?[t.strides[0],1,t.strides[1]]:[t.strides[0],t.strides[1],1],p=d[0],f=d[1],m=d[2],g=o?[1,r.strides[1],r.strides[0]]:[r.strides[1],1,r.strides[0]],x=g[0],y=g[1],b=g[2],v=i*u,w=Le([c,i,u],t.dtype),C=w.values,T=this.blockSize,S=0;S<c;S++)for(var k=0;k<i;k+=T)for(var N=0;N<u;N+=T)for(var I=0;I<a;I+=T)for(var E=Math.min(k+T,i),F=Math.min(N+T,u),O=Math.min(I+T,a),D=k;D<E;D++)for(var M=N;M<F;M++){for(var P=0,L=I;L<O;L++)P+=l[S*p+D*f+L*m]*h[L*x+M*y+S*b];C[S*v+(D*u+M)]+=P}return w.toTensor()},e.prototype.fusedBatchMatMul=function(t){var r=t.a,s=t.b,o=t.transposeA,a=t.transposeB,i=t.bias,u=t.activation,c=t.preluActivationWeights,l=this.batchMatMul(r,s,o,a);return i&&(l=this.add(l,i)),u&&(l=If(this,l,u,c)),l},e.prototype.multiply=function(t,r){return t.dtype==="complex64"||r.dtype==="complex64"?this.broadcastedBinaryComplexOp(t.cast("complex64"),r.cast("complex64"),function(s,o,a,i){return{real:s*a-o*i,imag:s*i+o*a}}):this.broadcastedBinaryOp(t,r,on(t.dtype,r.dtype),function(s,o){return s*o})},e.prototype.floorDiv=function(t,r){return ie([t,r],"floorDiv"),this.broadcastedBinaryOp(t,r,"int32",function(s,o){return Math.floor(s/o)})},e.prototype.sum=function(t,r){ie(t,"sum"),qn("sum",r,t.rank);for(var s=fn(t.shape,r),o=s[0],a=s[1],i=bt(o,on(t.dtype,"int32")),u=ve(a),c=this.readSync(i.dataId),l=this.readSync(t.dataId),h=0;h<c.length;++h){for(var d=h*u,p=0,f=0;f<u;++f)p+=l[d+f];c[h]=p}return i},e.prototype.prod=function(t,r){ie(t,"sum");for(var s=fn(t.shape,r),o=s[0],a=s[1],i=bt(o,on(t.dtype,"int32")),u=ve(a),c=this.readSync(i.dataId),l=this.readSync(t.dataId),h=0;h<c.length;++h){for(var d=h*u,p=1,f=0;f<u;++f)p*=l[d+f];c[h]=p}return i},e.prototype.unsortedSegmentSum=function(t,r,s){ie(t,"unsortedSegmentSum");for(var o=[],a=t.rank-r.rank,i=0;i<a;++i)r=r.expandDims(i+1);for(i=0;i<s;++i){var u=ye(i,"int32"),c=sf(u,r).asType("float32").mul(t).sum(0);o.push(c)}return cs(o)},e.prototype.argMin=function(t,r){ie(t,"argMin");var s=[r];qn("argMin",s,t.rank);for(var o=fn(t.shape,s),a=o[0],i=o[1],u=bt(a,"int32"),c=ve(i),l=this.readSync(u.dataId),h=this.readSync(t.dataId),d=0;d<l.length;++d){for(var p=d*c,f=h[p],m=0,g=0;g<c;++g){var x=h[p+g];x<f&&(f=x,m=g)}l[d]=m}return u},e.prototype.argMax=function(t,r){ie(t,"argMax");var s=[r];qn("argMax",s,t.rank);for(var o=fn(t.shape,s),a=o[0],i=o[1],u=bt(a,"int32"),c=ve(i),l=this.readSync(u.dataId),h=this.readSync(t.dataId),d=0;d<l.length;++d){for(var p=d*c,f=h[p],m=0,g=0;g<c;++g){var x=h[p+g];x>f&&(f=x,m=g)}l[d]=m}return u},e.prototype.cumsum=function(t,r,s,o){if(ie(t,"cumsum"),r!==t.rank-1)throw new Error("backend.cumsum in CPU expects an inner-most axis="+(t.rank-1)+" but got axis="+r);for(var a=on(t.dtype,"int32"),i=bt(t.shape,a),u=this.readSync(i.dataId),c=this.readSync(t.dataId),l=t.shape[t.rank-1],h=o?function(g,x){return g+l-x-1}:function(g,x){return g+x},d=0;d<c.length;d+=l)for(var p=0;p<l;p++){var f=h(d,p);if(p===0)u[f]=s?0:c[f];else{var m=h(d,p-1);u[f]=s?c[m]+u[m]:c[f]+u[m]}}return i},e.prototype.equal=function(t,r){return ie([t,r],"equal"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s===o?1:0})},e.prototype.notEqual=function(t,r){return ie([t,r],"notEqual"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s!==o?1:0})},e.prototype.less=function(t,r){return ie([t,r],"less"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s<o?1:0})},e.prototype.lessEqual=function(t,r){return ie([t,r],"lessEqual"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s<=o?1:0})},e.prototype.greater=function(t,r){return ie([t,r],"greater"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s>o?1:0})},e.prototype.greaterEqual=function(t,r){return ie([t,r],"greaterEqual"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s>=o?1:0})},e.prototype.logicalNot=function(t){ie(t,"logicalNot");for(var r=this.readSync(t.dataId),s=new Uint8Array(r.length),o=0;o<r.length;++o)s[o]=r[o]?0:1;return this.makeOutput(s,t.shape,"bool")},e.prototype.logicalAnd=function(t,r){return ie([t,r],"logicalAnd"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s&&o})},e.prototype.logicalOr=function(t,r){return ie([t,r],"logicalOr"),this.broadcastedBinaryOp(t,r,"bool",function(s,o){return s||o})},e.prototype.select=function(t,r,s){ie([t,r,s],"select");for(var o=this.readSync(t.dataId),a=this.readSync(r.dataId),i=this.readSync(s.dataId),u=bt(r.shape,on(r.dtype,s.dtype)),c=this.readSync(u.dataId),l=0,h=t.rank===0||t.rank>1||r.rank===1?1:ve(r.shape.slice(1)),d=0;d<o.length;d++)for(var p=0;p<h;p++)o[d]===1?c[l++]=a[d]:c[l++]=i[d];return u},e.prototype.where=function(t){ie([t],"where");var r=this.readSync(t.dataId);return Wp(t.shape,r)},e.prototype.topk=function(t,r,s){return ie(t,"topk"),m0(this.readSync(t.dataId),t.shape,t.dtype,r)},e.prototype.min=function(t,r){ie(t,"min"),qn("min",r,t.rank);for(var s=fn(t.shape,r),o=s[0],a=s[1],i=bt(o,t.dtype),u=ve(a),c=this.readSync(i.dataId),l=this.readSync(t.dataId),h=0;h<c.length;++h){for(var d=h*u,p=l[d],f=0;f<u;++f){var m=l[d+f];m<p&&(p=m)}c[h]=p}return i},e.prototype.minimum=function(t,r){return ie([t,r],"minimum"),this.broadcastedBinaryOp(t,r,t.dtype,function(s,o){return Math.min(s,o)})},e.prototype.mod=function(t,r){return ie([t,r],"mod"),this.broadcastedBinaryOp(t,r,t.dtype,function(s,o){var a=s%o;return s<0&&o<0||s>=0&&o>=0?a:(a+o)%o})},e.prototype.max=function(t,r){ie(t,"max"),qn("max",r,t.rank);for(var s=fn(t.shape,r),o=s[0],a=s[1],i=bt(o,t.dtype),u=ve(a),c=this.readSync(i.dataId),l=this.readSync(t.dataId),h=0;h<c.length;++h){for(var d=h*u,p=l[d],f=0;f<u;++f){var m=l[d+f];m>p&&(p=m)}c[h]=p}return i},e.prototype.maximum=function(t,r){return ie([t,r],"maximum"),this.broadcastedBinaryOp(t,r,t.dtype,function(s,o){return Math.max(s,o)})},e.prototype.all=function(t,r){ie(t,"all"),qn("all",r,t.rank);for(var s=fn(t.shape,r),o=s[0],a=s[1],i=bt(o,t.dtype),u=ve(a),c=this.readSync(i.dataId),l=this.readSync(t.dataId),h=0;h<c.length;++h){for(var d=h*u,p=l[d],f=0;f<u;++f){var m=l[d+f];p=p&&m}c[h]=p}return i},e.prototype.any=function(t,r){ie(t,"any"),qn("any",r,t.rank);for(var s=fn(t.shape,r),o=s[0],a=s[1],i=bt(o,t.dtype),u=ve(a),c=this.readSync(i.dataId),l=this.readSync(t.dataId),h=0;h<c.length;++h){for(var d=h*u,p=l[d],f=0;f<u;++f){var m=l[d+f];p=p||m}c[h]=p}return i},e.prototype.squaredDifference=function(t,r){return ie([t,r],"squaredDifference"),this.broadcastedBinaryOp(t,r,t.dtype,function(s,o){var a=s-o;return a*a})},e.prototype.ceil=function(t){ie(t,"ceil");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o)s[o]=Math.ceil(r[o]);return this.makeOutput(s,t.shape,"float32")},e.prototype.floor=function(t){ie(t,"floor");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o)s[o]=Math.floor(r[o]);return this.makeOutput(s,t.shape,"float32")},e.prototype.sign=function(t){ie(t,"x");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o)r[o]<0?s[o]=-1:r[o]>0?s[o]=1:s[o]=0;return this.makeOutput(s,t.shape,"float32")},e.prototype.isNaN=function(t){ie(t,"x");for(var r=this.readSync(t.dataId),s=new Uint8Array(r.length),o=0;o<r.length;++o)Number.isNaN(r[o])&&(s[o]=1);return this.makeOutput(s,t.shape,"bool")},e.prototype.isInf=function(t){ie(t,"x");for(var r=this.readSync(t.dataId),s=new Uint8Array(r.length),o=0;o<r.length;++o)Math.abs(r[o])===1/0&&(s[o]=1);return this.makeOutput(s,t.shape,"bool")},e.prototype.isFinite=function(t){ie(t,"x");for(var r=this.readSync(t.dataId),s=new Uint8Array(r.length),o=0;o<r.length;++o)Number.isFinite(r[o])&&(s[o]=1);return this.makeOutput(s,t.shape,"bool")},e.prototype.round=function(t){ie(t,"round");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o){var a=Math.floor(r[o]);r[o]-a<.5?s[o]=Math.floor(r[o]):r[o]-a>.5?s[o]=Math.ceil(r[o]):s[o]=a%2==0?a:a+1}return this.makeOutput(s,t.shape,"float32")},e.prototype.exp=function(t){ie(t,"exp");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o)s[o]=Math.exp(r[o]);return this.makeOutput(s,t.shape,"float32")},e.prototype.expm1=function(t){ie(t,"expm1");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o)s[o]=Math.expm1(r[o]);return this.makeOutput(s,t.shape,"float32")},e.prototype.log=function(t){ie(t,"log");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o){var a=r[o];s[o]=Math.log(a)}return this.makeOutput(s,t.shape,"float32")},e.prototype.log1p=function(t){ie(t,"log1p");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o){var a=r[o];s[o]=Math.log1p(a)}return this.makeOutput(s,t.shape,"float32")},e.prototype.sqrt=function(t){ie(t,"sqrt");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o){var a=r[o];s[o]=Math.sqrt(a)}return this.makeOutput(s,t.shape,"float32")},e.prototype.rsqrt=function(t){ie(t,"rsqrt");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o){var a=r[o];s[o]=1/Math.sqrt(a)}return this.makeOutput(s,t.shape,"float32")},e.prototype.reciprocal=function(t){ie(t,"reciprocal");for(var r=this.readSync(t.dataId),s=new Float32Array(r.length),o=0;o<r.length;++o)s[o]=1/r[o];return this.makeOutput(s,t.shape,"float32")},e.prototype.linear=function(t){return t},e.prototype.relu=function(t){ie(t,"relu");for(var r=bt(t.shape,t.dtype),s=this.readSync(r.dataId),o=this.readSync(t.dataId),a=0;a<o.length;++a)s[a]=Math.max(0,o[a]);return r},e.prototype.relu6=function(t){ie(t,"relu");for(var r=bt(t.shape,t.dtype),s=this.readSync(r.dataId),o=this.readSync(t.dataId),a=0;a<o.length;++a)s[a]=Math.min(Math.max(0,o[a]),6);return r},e.prototype.prelu=function(t,r){return ie([t,r],"prelu"),this.broadcastedBinaryOp(t,r,t.dtype,function(s,o){return s<0?o*s:s})},e.prototype.elu=function(t){ie(t,"elu");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o){var a=s[o];r[o]=a>=0?a:Math.exp(a)-1}return this.makeOutput(r,t.shape,"float32")},e.prototype.eluDer=function(t,r){ie([t,r],"eluDer");for(var s=new Float32Array(r.size),o=this.readSync(r.dataId),a=this.readSync(t.dataId),i=0;i<o.length;++i){var u=o[i];s[i]=u>=1?a[i]:a[i]*(u+1)}return this.makeOutput(s,r.shape,"float32")},e.prototype.selu=function(t){ie(t,"selu");for(var r=Xp,s=Yp,o=new Float32Array(t.size),a=this.readSync(t.dataId),i=0;i<a.length;++i){var u=a[i];o[i]=u>=0?s*u:r*(Math.exp(u)-1)}return this.makeOutput(o,t.shape,"float32")},e.prototype.clip=function(t,r,s){ie(t,"clip");for(var o=new Float32Array(t.size),a=this.readSync(t.dataId),i=0;i<a.length;++i){var u=a[i];o[i]=u>s?s:u<r?r:u}return this.makeOutput(o,t.shape,"float32")},e.prototype.abs=function(t){for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.abs(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.complexAbs=function(t){for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<t.size;++o){var a=s[2*o],i=s[2*o+1];r[o]=Math.hypot(a,i)}return this.makeOutput(r,t.shape,"float32")},e.prototype.int=function(t){ie(t,"int");for(var r=new Int32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=s[o];return this.makeOutput(r,t.shape,"int32")},e.prototype.sigmoid=function(t){ie(t,"sigmoid");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=1/(1+Math.exp(-s[o]));return this.makeOutput(r,t.shape,"float32")},e.prototype.softplus=function(t){ie(t,"softplus");for(var r=Math.log(11920928955078125e-23)+2,s=new Float32Array(t.size),o=this.readSync(t.dataId),a=0;a<o.length;++a){var i=o[a]>-r,u=o[a]<r,c=Math.exp(o[a]),l=void 0;l=u?c:i?o[a]:Math.log(1+c),s[a]=l}return this.makeOutput(s,t.shape,"float32")},e.prototype.sin=function(t){ie(t,"sin");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.sin(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.cos=function(t){ie(t,"cos");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.cos(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.tan=function(t){ie(t,"tan");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.tan(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.asin=function(t){ie(t,"asin");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.asin(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.acos=function(t){ie(t,"acos");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.acos(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.atan=function(t){ie(t,"atan");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.atan(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.atan2=function(t,r){return ie([t,r],"atan2"),this.broadcastedBinaryOp(t,r,t.dtype,function(s,o){return Math.atan2(s,o)})},e.prototype.sinh=function(t){ie(t,"sinh");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.sinh(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.cosh=function(t){ie(t,"cosh");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.cosh(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.tanh=function(t){ie(t,"tanh");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Uy(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.asinh=function(t){ie(t,"asinh");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.asinh(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.acosh=function(t){ie(t,"acosh");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.acosh(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.atanh=function(t){ie(t,"atanh");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o)r[o]=Math.atanh(s[o]);return this.makeOutput(r,t.shape,"float32")},e.prototype.erf=function(t){ie(t,"erf");for(var r=new Float32Array(t.size),s=this.readSync(t.dataId),o=0;o<s.length;++o){var a=Math.sign(s[o]),i=Math.abs(s[o]),u=1/(1+.3275911*i);r[o]=a*(1-((((1.061405429*u-1.453152027)*u+1.421413741)*u-.284496736)*u+.254829592)*u*Math.exp(-i*i))}return this.makeOutput(r,t.shape,"float32")},e.prototype.step=function(t,r){r===void 0&&(r=0),ie(t,"step");for(var s=new Float32Array(t.size),o=this.readSync(t.dataId),a=0;a<o.length;++a){var i=o[a];isNaN(i)?s[a]=NaN:s[a]=i>0?1:r}return this.makeOutput(s,t.shape,"float32")},e.prototype.fusedConv2d=function(t){var r=t.input,s=t.filter,o=t.convInfo,a=t.bias,i=t.activation,u=t.preluActivationWeights,c=this.conv2d(r,s,o);return a&&(c=this.add(c,a)),i&&(c=If(this,c,i,u)),c},e.prototype.conv2d=function(t,r,s){ie([t,r],"conv2d");for(var o=s.filterHeight,a=s.filterWidth,i=s.dilationHeight,u=s.dilationWidth,c=s.padInfo.left,l=s.padInfo.top,h=s.dataFormat==="channelsLast",d=Le(s.outShape,t.dtype),p=t.strides[0],f=h?t.strides[1]:t.strides[2],m=h?t.strides[2]:1,g=h?1:t.strides[1],x=d.strides[0],y=h?d.strides[1]:d.strides[2],b=h?d.strides[2]:1,v=h?1:d.strides[1],w=this.readSync(t.dataId),C=this.readSync(r.dataId),T=d.values,S=0;S<s.batchSize;++S)for(var k=S*p,N=S*x,I=0;I<s.outHeight;++I)for(var E=N+I*y,F=I*s.strideHeight-l,O=0;O<o;O++){var D=F+O*i;if(!(D<0||D>=s.inHeight))for(var M=O*r.strides[0],P=k+D*f,L=0;L<s.outWidth;++L)for(var z=E+L*b,W=L*s.strideWidth-c,j=0;j<a;j++){var Y=W+j*u;if(!(Y<0||Y>=s.inWidth))for(var J=P+Y*m,ae=M+j*r.strides[1],oe=0;oe<s.inChannels;++oe){for(var ue=w[J+oe*g],he=0;he<s.outChannels;++he)T[z+he*v]+=ue*C[ae+he];ae+=s.outChannels}}}return d.toTensor()},e.prototype.conv3d=function(t,r,s){for(var o=s.filterDepth,a=s.filterHeight,i=s.filterWidth,u=s.dilationDepth,c=s.dilationHeight,l=s.dilationWidth,h=s.padInfo.front,d=s.padInfo.left,p=s.padInfo.top,f=Le(s.outShape,t.dtype),m=this.readSync(t.dataId),g=this.readSync(r.dataId),x=f.values,y=0;y<s.batchSize;++y)for(var b=y*t.strides[0],v=y*f.strides[0],w=0;w<s.outDepth;++w)for(var C=v+w*f.strides[1],T=w*s.strideDepth-h,S=0;S<o;S++){var k=T+S*u;if(!(k<0||k>=s.inDepth))for(var N=S*r.strides[0],I=b+k*t.strides[1],E=0;E<s.outHeight;++E)for(var F=C+E*f.strides[2],O=E*s.strideHeight-p,D=0;D<a;D++){var M=O+D*c;if(!(M<0||M>=s.inHeight))for(var P=N+D*r.strides[1],L=I+M*t.strides[2],z=0;z<s.outWidth;++z)for(var W=F+z*s.outChannels,j=z*s.strideWidth-d,Y=0;Y<i;Y++){var J=j+Y*l;if(!(J<0||J>=s.inWidth))for(var ae=P+Y*r.strides[2],oe=L+J*s.inChannels,ue=ae,he=0;he<s.inChannels;++he){for(var pe=m[oe+he],de=0;de<s.outChannels;++de)x[W+de]+=pe*g[ue+de];ue+=s.outChannels}}}}return f.toTensor()},e.prototype.conv2dDerInput=function(t,r,s){ie([t,r],"conv2dDerInput");for(var o=Le(s.inShape,"float32"),a=o.values,i=this.readSync(t.dataId),u=this.readSync(r.dataId),c=r.strides,l=c[0],h=c[1],d=c[2],p=s.batchSize,f=s.filterHeight,m=s.filterWidth,g=s.inChannels,x=s.inHeight,y=s.inWidth,b=s.outChannels,v=s.outHeight,w=s.outWidth,C=s.strideHeight,T=s.strideWidth,S=s.dataFormat,k=f-1-s.padInfo.top,N=m-1-s.padInfo.left,I=S==="channelsLast",E=o.strides[0],F=I?o.strides[1]:o.strides[2],O=I?o.strides[2]:1,D=I?1:o.strides[1],M=t.strides[0],P=I?t.strides[1]:t.strides[2],L=I?t.strides[2]:1,z=I?1:t.strides[1],W=0;W<p;++W)for(var j=0;j<g;++j)for(var Y=0;Y<x;++Y)for(var J=Y-k,ae=Math.max(0,Math.ceil(J/C)),oe=Math.min(v,(f+J)/C),ue=0;ue<y;++ue){for(var he=ue-N,pe=Math.max(0,Math.ceil(he/T)),de=Math.min(w,(m+he)/T),Ce=0,me=ae;me<oe;++me)for(var Ne=me*C-J,Te=pe;Te<de;++Te)for(var Me=M*W+P*me+L*Te,Fe=l*(f-1-Ne)+h*(m-1-(Te*T-he))+d*j,$e=0;$e<b;++$e)Ce+=i[Me+z*$e]*u[Fe+$e];a[E*W+F*Y+O*ue+D*j]=Ce}return o.toTensor()},e.prototype.conv3dDerInput=function(t,r,s){for(var o=Le(s.inShape,"float32"),a=o.values,i=o.strides,u=i[0],c=i[1],l=i[2],h=i[3],d=this.readSync(t.dataId),p=t.strides,f=p[0],m=p[1],g=p[2],x=p[3],y=this.readSync(r.dataId),b=r.strides,v=b[0],w=b[1],C=b[2],T=b[3],S=s.batchSize,k=s.filterDepth,N=s.filterHeight,I=s.filterWidth,E=s.inChannels,F=s.inDepth,O=s.inHeight,D=s.inWidth,M=s.outChannels,P=s.outDepth,L=s.outHeight,z=s.outWidth,W=s.strideDepth,j=s.strideHeight,Y=s.strideWidth,J=k-1-s.padInfo.front,ae=N-1-s.padInfo.top,oe=I-1-s.padInfo.left,ue=0;ue<S;++ue)for(var he=0;he<E;++he)for(var pe=0;pe<F;++pe)for(var de=pe-J,Ce=Math.max(0,Math.ceil(de/W)),me=Math.min(P,(k+de)/W),Ne=0;Ne<O;++Ne)for(var Te=Ne-ae,Me=Math.max(0,Math.ceil(Te/j)),Fe=Math.min(L,(N+Te)/j),$e=0;$e<D;++$e){for(var Je=$e-oe,je=Math.max(0,Math.ceil(Je/Y)),wt=Math.min(z,(I+Je)/Y),mt=0,rn=Ce;rn<me;++rn)for(var At=rn*W-de,pn=Me;pn<Fe;++pn)for(var sn=pn*j-Te,Kt=je;Kt<wt;++Kt)for(var gr=f*ue+m*rn+g*pn+x*Kt,Fn=v*(k-1-At)+w*(N-1-sn)+C*(I-1-(Kt*Y-Je))+T*he,Xt=0;Xt<M;++Xt)mt+=d[gr+Xt]*y[Fn+Xt];a[u*ue+c*pe+l*Ne+h*$e+he]=mt}return o.toTensor()},e.prototype.conv2dDerFilter=function(t,r,s){ie([t,r],"conv2dDerFilter");for(var o=s.strideHeight,a=s.strideWidth,i=s.filterHeight,u=s.filterWidth,c=s.dataFormat==="channelsLast",l=Le(s.filterShape,"float32"),h=s.padInfo.left,d=s.padInfo.top,p=this.bufferSync(t),f=this.bufferSync(r),m=0;m<i;++m)for(var g=Math.max(0,Math.ceil((d-m)/o)),x=Math.min(s.outHeight,(s.inHeight+d-m)/o),y=0;y<u;++y)for(var b=Math.max(0,Math.ceil((h-y)/a)),v=Math.min(s.outWidth,(s.inWidth+h-y)/a),w=0;w<s.inChannels;++w)for(var C=0;C<s.outChannels;++C){for(var T=0,S=0;S<s.batchSize;++S)for(var k=g;k<x;++k)for(var N=m+k*o-d,I=b;I<v;++I){var E=y+I*a-h;T+=c?p.get(S,N,E,w)*f.get(S,k,I,C):p.get(S,w,N,E)*f.get(S,C,k,I)}l.set(T,m,y,w,C)}return l.toTensor()},e.prototype.conv3dDerFilter=function(t,r,s){for(var o=s.strideDepth,a=s.strideHeight,i=s.strideWidth,u=s.filterDepth,c=s.filterHeight,l=s.filterWidth,h=Le(s.filterShape,"float32"),d=h.values,p=h.strides,f=p[0],m=p[1],g=p[2],x=p[3],y=this.readSync(r.dataId),b=r.strides,v=b[0],w=b[1],C=b[2],T=b[3],S=this.readSync(t.dataId),k=t.strides,N=k[0],I=k[1],E=k[2],F=k[3],O=s.padInfo.front,D=s.padInfo.left,M=s.padInfo.top,P=0;P<u;++P)for(var L=Math.max(0,Math.ceil((O-P)/o)),z=Math.min(s.outDepth,(s.inDepth+O-P)/o),W=P*f,j=0;j<c;++j)for(var Y=Math.max(0,Math.ceil((M-j)/a)),J=Math.min(s.outHeight,(s.inHeight+M-j)/a),ae=j*m+W,oe=0;oe<l;++oe)for(var ue=Math.max(0,Math.ceil((D-oe)/i)),he=Math.min(s.outWidth,(s.inWidth+D-oe)/i),pe=oe*g+ae,de=0;de<s.inChannels;++de)for(var Ce=de*x+pe,me=0;me<s.outChannels;++me){for(var Ne=0,Te=0;Te<s.batchSize;++Te)for(var Me=Te*N,Fe=Te*v,$e=L;$e<z;++$e)for(var Je=(P+$e*o-O)*I+Me,je=$e*w+Fe,wt=Y;wt<J;++wt)for(var mt=(j+wt*a-M)*E+Je,rn=wt*C+je,At=ue;At<he;++At){var pn=At*T+rn;Ne+=S[(oe+At*i-D)*F+mt+de]*y[pn+me]}d[Ce+me]=Ne}return h.toTensor()},e.prototype.fusedDepthwiseConv2D=function(t){var r=t.input,s=t.filter,o=t.convInfo,a=t.bias,i=t.activation,u=t.preluActivationWeights,c=this.depthwiseConv2D(r,s,o);return a&&(c=this.add(c,a)),i&&(c=If(this,c,i,u)),c},e.prototype.depthwiseConv2D=function(t,r,s){ie([t,r],"depthwiseConv2D");for(var o=s.filterHeight,a=s.filterWidth,i=s.dilationHeight,u=s.dilationWidth,c=s.padInfo.left,l=s.padInfo.top,h=s.outChannels/s.inChannels,d=Le(s.outShape,t.dtype),p=this.readSync(t.dataId),f=this.readSync(r.dataId),m=d.values,g=0;g<s.batchSize;++g)for(var x=g*t.strides[0],y=g*d.strides[0],b=0;b<s.outHeight;++b)for(var v=y+b*d.strides[1],w=b*s.strideHeight-c,C=0;C<o;++C){var T=w+C*i;if(!(T<0||T>=s.inHeight))for(var S=C*r.strides[0],k=x+T*t.strides[1],N=0;N<s.outWidth;++N)for(var I=v+N*d.strides[2],E=N*s.strideWidth-l,F=0;F<a;++F){var O=E+F*u;if(!(O<0||O>=s.inWidth))for(var D=S+F*r.strides[1],M=k+O*s.inChannels,P=I,L=D,z=0;z<s.inChannels;++z){for(var W=p[M+z],j=0;j<h;++j)m[P+j]+=W*f[L+j];P+=h,L+=h}}}return d.toTensor()},e.prototype.depthwiseConv2DDerInput=function(t,r,s){ie([t,r],"depthwiseConv2DDerInput");for(var o=Le(s.inShape,"float32"),a=o.values,i=o.strides,u=i[0],c=i[1],l=i[2],h=this.readSync(t.dataId),d=t.strides,p=d[0],f=d[1],m=d[2],g=this.readSync(r.dataId),x=r.strides,y=x[0],b=x[1],v=x[2],w=s.batchSize,C=s.filterHeight,T=s.filterWidth,S=s.inChannels,k=s.inHeight,N=s.inWidth,I=s.outChannels,E=s.outHeight,F=s.outWidth,O=s.strideHeight,D=s.strideWidth,M=C-1-s.padInfo.top,P=T-1-s.padInfo.left,L=I/S,z=0;z<w;++z)for(var W=0;W<S;++W)for(var j=0;j<k;++j)for(var Y=j-M,J=Math.max(0,Math.ceil(Y/O)),ae=Math.min(E,(C+Y)/O),oe=0;oe<N;++oe){for(var ue=oe-P,he=Math.max(0,Math.ceil(ue/D)),pe=Math.min(F,(T+ue)/D),de=0,Ce=J;Ce<ae;++Ce)for(var me=Ce*O-Y,Ne=he;Ne<pe;++Ne)for(var Te=p*z+f*Ce+m*Ne,Me=y*(C-1-me)+b*(T-1-(Ne*D-ue))+v*W,Fe=0;Fe<L;++Fe)de+=h[Te+(W*L+Fe)]*g[Me+Fe];a[u*z+c*j+l*oe+W]=de}return o.toTensor()},e.prototype.depthwiseConv2DDerFilter=function(t,r,s){ie([t,r],"depthwiseConv2DDerFilter");for(var o=s.strideHeight,a=s.strideWidth,i=s.filterHeight,u=s.filterWidth,c=Le(s.filterShape,"float32"),l=s.padInfo.left,h=s.padInfo.top,d=s.outChannels/s.inChannels,p=this.bufferSync(t),f=this.bufferSync(r),m=0;m<i;++m)for(var g=Math.max(0,Math.ceil((h-m)/o)),x=Math.min(s.outHeight,(s.inHeight+h-m)/o),y=0;y<u;++y)for(var b=Math.max(0,Math.ceil((l-y)/a)),v=Math.min(s.outWidth,(s.inWidth+l-y)/a),w=0;w<s.outChannels;++w){for(var C=Math.trunc(w/d),T=w%d,S=0,k=0;k<s.batchSize;++k)for(var N=g;N<x;++N)for(var I=m+N*o-h,E=b;E<v;++E){var F=y+E*a-l;S+=p.get(k,I,F,C)*f.get(k,N,E,w)}c.set(S,m,y,C,T)}return c.toTensor()},e.prototype.tile=function(t,r){return ie(t,"tile"),f0(this.bufferSync(t),r)},e.prototype.pad=function(t,r,s){ie(t,"pad");var o=r.map(function(d,p){return d[0]+t.shape[p]+d[1]}),a=r.map(function(d){return d[0]}),i=this.bufferSync(t),u=Le(o,t.dtype);s!==0&&u.values.fill(s);for(var c=0;c<t.size;c++){var l=i.indexToLoc(c),h=l.map(function(d,p){return d+a[p]});u.set.apply(u,[i.get.apply(i,l)].concat(h))}return u.toTensor()},e.prototype.gather=function(t,r,s){ie([t,r],"gather");var o=t.shape.slice(),a=this.readSync(r.dataId);o[s]=a.length;for(var i=Le(o,t.dtype),u=this.bufferSync(t),c=0;c<i.size;++c){var l=i.indexToLoc(c),h=l.slice();h[s]=a[l[s]];var d=u.locToIndex(h);i.values[c]=u.values[d]}return i.toTensor()},e.prototype.batchToSpaceND=function(t,r,s){ie([t],"batchToSpaceND");var o=r.reduce(function(h,d){return h*d}),a=Zc(t.shape,r,o),i=el(a.length,r.length),u=tl(t.shape,r,o),c=gv(s,r.length),l=xv(u,s,r.length);return sr(t.reshape(a),i).reshape(u).slice(c,l)},e.prototype.spaceToBatchND=function(t,r,s){ie([t],"spaceToBatchND");var o=r.reduce(function(d,p){return d*p}),a=[[0,0]];a.push.apply(a,s);for(var i=1+r.length;i<t.shape.length;++i)a.push([0,0]);var u=t.pad(a),c=Zc(u.shape,r,o,!1),l=el(c.length,r.length,!1),h=tl(u.shape,r,o,!1);return sr(u.reshape(c),l).reshape(h)},e.prototype.maxPool=function(t,r){return ie(t,"maxPool"),Cf(this.readSync(t.dataId),t.shape,t.dtype,t.strides,r,"max").toTensor()},e.prototype.maxPoolBackprop=function(t,r,s,o){ie([r,s],"maxPoolBackprop");for(var a=this.readSync(r.dataId),i=Le(o.outShape,r.dtype,Gb(a,r.shape,r.dtype,o).values),u=o.strideHeight,c=o.strideWidth,l=o.dilationHeight,h=o.dilationWidth,d=o.effectiveFilterHeight,p=o.effectiveFilterWidth,f=p-1-o.padInfo.left,m=d-1-o.padInfo.top,g=Le(r.shape,"float32"),x=this.bufferSync(t),y=0;y<o.batchSize;++y)for(var b=0;b<o.inChannels;++b)for(var v=0;v<o.inHeight;++v)for(var w=0;w<o.inWidth;++w){for(var C=v-m,T=w-f,S=0,k=0;k<d;k+=l){var N=(C+k)/u;if(!(N<0||N>=o.outHeight||Math.floor(N)!==N))for(var I=0;I<p;I+=h){var E=(T+I)/c;if(!(E<0||E>=o.outWidth||Math.floor(E)!==E)){var F=d*p-1-i.get(y,N,E,b)===k*p+I?1:0;F!==0&&(S+=x.get(y,N,E,b)*F)}}}g.set(S,y,v,w,b)}return g.toTensor()},e.prototype.avgPoolBackprop=function(t,r,s){ie([t,r],"avgPoolBackprop");for(var o=s.strideHeight,a=s.strideWidth,i=s.filterHeight,u=s.filterWidth,c=s.dilationHeight,l=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=d-1-s.padInfo.left,f=h-1-s.padInfo.top,m=Le(r.shape,"float32"),g=1/(i*u),x=this.bufferSync(t),y=0;y<s.batchSize;++y)for(var b=0;b<s.inChannels;++b)for(var v=0;v<s.inHeight;++v)for(var w=0;w<s.inWidth;++w){for(var C=v-f,T=w-p,S=0,k=0;k<h;k+=c){var N=(C+k)/o;if(!(N<0||N>=s.outHeight||Math.floor(N)!==N))for(var I=0;I<d;I+=l){var E=(T+I)/a;E<0||E>=s.outWidth||Math.floor(E)!==E||(S+=x.get(y,N,E,b))}}m.set(S*g,y,v,w,b)}return m.toTensor()},e.prototype.pool3d=function(t,r,s){ie(t,"pool3d");for(var o=r.strideDepth,a=r.strideHeight,i=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,l=r.dilationWidth,h=r.effectiveFilterDepth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.front,m=r.padInfo.top,g=r.padInfo.left,x=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=this.readSync(t.dataId),b=Le(r.outShape,t.dtype),v=b.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[2]*r.outShape[3]*r.outShape[4],T=r.outShape[3]*r.outShape[4],S=r.outShape[4],k=0;k<r.batchSize;++k)for(var N=k*w,I=k*t.strides[0],E=0;E<r.inChannels;++E)for(var F=0;F<r.outDepth;++F){for(var O=F*o-f,D=O;D<0;)D+=u;for(var M=Math.min(r.inDepth,h+O),P=N+F*C,L=0;L<r.outHeight;++L){for(var z=L*a-m,W=z;W<0;)W+=c;for(var j=Math.min(r.inHeight,d+z),Y=P+L*T,J=0;J<r.outWidth;++J){for(var ae=J*i-g,oe=ae;oe<0;)oe+=l;for(var ue=Math.min(r.inWidth,p+ae),he=Y+J*S,pe=x,de=0,Ce=0,me=D;me<M;me+=u){for(var Ne=I+me*t.strides[1],Te=W;Te<j;Te+=c){for(var Me=Ne+Te*t.strides[2],Fe=oe;Fe<ue;Fe+=l){var $e=y[Me+Fe*t.strides[3]+E];if(s==="max"&&$e>pe?pe=$e:s==="avg"&&(de+=$e,Ce++),isNaN(pe))break}if(isNaN(pe))break}if(isNaN(pe))break}v[he+E]=s==="avg"?de/Ce:pe}}}return b.toTensor()},e.prototype.avgPool3d=function(t,r){return ie(t,"avgPool3d"),this.pool3d(t,r,"avg").toFloat()},e.prototype.avgPool3dBackprop=function(t,r,s){ie([t,r],"avgPool3dBackprop");for(var o=s.strideDepth,a=s.strideHeight,i=s.strideWidth,u=s.filterDepth,c=s.filterHeight,l=s.filterWidth,h=s.dilationDepth,d=s.dilationHeight,p=s.dilationWidth,f=s.effectiveFilterDepth,m=s.effectiveFilterHeight,g=s.effectiveFilterWidth,x=f-1-s.padInfo.front,y=g-1-s.padInfo.left,b=m-1-s.padInfo.top,v=Le(r.shape,"float32"),w=1/(u*c*l),C=this.bufferSync(t),T=0;T<s.batchSize;++T)for(var S=0;S<s.inChannels;++S)for(var k=0;k<s.inDepth;++k)for(var N=0;N<s.inHeight;++N)for(var I=0;I<s.inWidth;++I){for(var E=k-x,F=N-b,O=I-y,D=0,M=0;M<f;M+=h){var P=(E+M)/o;if(!(P<0||P>=s.outDepth||Math.floor(P)!==P))for(var L=0;L<m;L+=d){var z=(F+L)/a;if(!(z<0||z>=s.outHeight||Math.floor(z)!==z))for(var W=0;W<g;W+=p){var j=(O+W)/i;j<0||j>=s.outWidth||Math.floor(j)!==j||(D+=C.get(T,P,z,j,S))}}}v.set(D*w,T,k,N,I,S)}return v.toTensor()},e.prototype.maxPool3d=function(t,r){return ie(t,"maxPool3d"),this.pool3d(t,r,"max").toFloat()},e.prototype.maxPool3dPositions=function(t,r){for(var s=Le(r.outShape,"int32"),o=r.strideDepth,a=r.strideHeight,i=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,l=r.dilationWidth,h=r.effectiveFilterDepth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.front,m=r.padInfo.top,g=r.padInfo.left,x=this.bufferSync(t),y=0;y<r.batchSize;++y)for(var b=0;b<r.inChannels;++b)for(var v=0;v<r.outDepth;++v){for(var w=v*o-f,C=w;C<0;)C+=u;for(var T=Math.min(r.inDepth,h+w),S=0;S<r.outHeight;++S){for(var k=S*a-m,N=k;N<0;)N+=c;for(var I=Math.min(r.inHeight,d+k),E=0;E<r.outWidth;++E){for(var F=E*i-g,O=F;O<0;)O+=l;for(var D=Math.min(r.inWidth,p+F),M=Number.NEGATIVE_INFINITY,P=-1,L=C;L<T;L+=u)for(var z=L-w,W=N;W<I;W+=c)for(var j=W-k,Y=O;Y<D;Y+=l){var J=Y-F,ae=x.get(y,L,W,Y,b);ae>=M&&(M=ae,P=z*d*p+j*d+J)}s.set(P,y,v,S,E,b)}}}return s.toTensor()},e.prototype.maxPool3dBackprop=function(t,r,s,o){ie([r,s],"maxPool3dBackprop");for(var a=this.maxPool3dPositions(r,o),i=o.strideDepth,u=o.strideHeight,c=o.strideWidth,l=o.dilationDepth,h=o.dilationHeight,d=o.dilationWidth,p=o.effectiveFilterDepth,f=o.effectiveFilterHeight,m=o.effectiveFilterWidth,g=p-1-o.padInfo.front,x=m-1-o.padInfo.left,y=f-1-o.padInfo.top,b=Le(r.shape,"float32"),v=this.bufferSync(a),w=this.bufferSync(t),C=0;C<o.batchSize;++C)for(var T=0;T<o.inChannels;++T)for(var S=0;S<o.inDepth;++S)for(var k=0;k<o.inHeight;++k)for(var N=0;N<o.inWidth;++N){for(var I=S-g,E=k-y,F=N-x,O=0,D=0;D<p;D+=l){var M=(I+D)/i;if(!(M<0||M>=o.outDepth||Math.floor(M)!==M))for(var P=0;P<f;P+=h){var L=(E+P)/u;if(!(L<0||L>=o.outHeight||Math.floor(L)!==L))for(var z=0;z<m;z+=d){var W=(F+z)/c;if(!(W<0||W>=o.outWidth||Math.floor(W)!==W)){var j=p*f*m-1-v.get(C,M,L,W,T)===D*f*m+P*m+z?1:0;j!==0&&(O+=w.get(C,M,L,W,T)*j)}}}}b.set(O,C,S,k,N,T)}return b.toTensor()},e.prototype.cast=function(t,r){return u0(t,r,this)},e.prototype.reshape=function(t,r){return Pp(t,r)},e.prototype.avgPool=function(t,r){return ie(t,"avgPool"),ie(t,"maxPool"),Cf(this.readSync(t.dataId),t.shape,t.dtype,t.strides,r,"avg").toTensor().toFloat()},e.prototype.resizeBilinear=function(t,r,s,o){ie(t,"resizeBilinear");for(var a=t.shape,i=a[0],u=a[1],c=a[2],l=a[3],h=this.readSync(t.dataId),d=new Float32Array(ve([i,r,s,l])),p=[o&&r>1?u-1:u,o&&s>1?c-1:c],f=[o&&r>1?r-1:r,o&&s>1?s-1:s],m=0,g=p[0]/f[0],x=p[1]/f[1],y=0;y<i;y++)for(var b=0;b<r;b++)for(var v=g*b,w=Math.floor(v),C=v-w,T=Math.min(u-1,Math.ceil(v)),S=y*t.strides[0]+w*t.strides[1],k=y*t.strides[0]+T*t.strides[1],N=0;N<s;N++)for(var I=x*N,E=Math.floor(I),F=I-E,O=Math.min(c-1,Math.ceil(I)),D=S+E*t.strides[2],M=k+E*t.strides[2],P=S+O*t.strides[2],L=k+O*t.strides[2],z=0;z<l;z++){var W=h[D+z],j=h[M+z],Y=W+(h[P+z]-W)*F,J=Y+(j+(h[L+z]-j)*F-Y)*C;d[m++]=J}return Qt(d,[i,r,s,l])},e.prototype.resizeBilinearBackprop=function(t,r,s){ie([t,r],"resizeBilinearBackprop");for(var o=r.shape,a=o[0],i=o[1],u=o[2],c=o[3],l=t.shape,h=l[1],d=l[2],p=new Float32Array(a*i*u*c),f=[s&&h>1?i-1:i,s&&d>1?u-1:u],m=[s&&h>1?h-1:h,s&&d>1?d-1:d],g=f[0]/m[0],x=f[1]/m[1],y=this.readSync(t.dataId),b=0,v=0;v<a;v++)for(var w=v*r.strides[0],C=0;C<h;C++)for(var T=C*g,S=Math.floor(T),k=Math.min(Math.ceil(T),i-1),N=w+S*r.strides[1],I=w+k*r.strides[1],E=T-S,F=1-E,O=0;O<d;O++)for(var D=O*x,M=Math.floor(D),P=Math.min(Math.ceil(D),u-1),L=D-M,z=1-L,W=N+M*r.strides[2],j=N+P*r.strides[2],Y=I+M*r.strides[2],J=I+P*r.strides[2],ae=F*z,oe=F*L,ue=E*z,he=E*L,pe=0;pe<c;pe++){var de=y[b++];p[W+pe]+=de*ae,p[j+pe]+=de*oe,p[Y+pe]+=de*ue,p[J+pe]+=de*he}return vo(p,[a,u,i,c],r.dtype)},e.prototype.resizeNearestNeighbor=function(t,r,s,o){ie(t,"resizeNearestNeighbor");for(var a=t.shape,i=a[0],u=a[1],c=a[2],l=a[3],h=this.readSync(t.dataId),d=new Float32Array(i*r*s*l),p=[o&&r>1?u-1:u,o&&s>1?c-1:c],f=[o&&r>1?r-1:r,o&&s>1?s-1:s],m=p[0]/f[0],g=p[1]/f[1],x=0,y=0;y<i;y++)for(var b=y*t.strides[0],v=0;v<r;v++)for(var w=m*v,C=b+Math.min(u-1,o?Math.round(w):Math.floor(w))*t.strides[1],T=0;T<s;T++)for(var S=g*T,k=C+Math.min(c-1,o?Math.round(S):Math.floor(S))*t.strides[2],N=0;N<l;N++){var I=h[k+N];d[x++]=I}return Qt(d,[i,r,s,l],t.dtype)},e.prototype.resizeNearestNeighborBackprop=function(t,r,s){ie([t,r],"resizeNearestNeighborBackprop");for(var o=r.shape,a=o[0],i=o[1],u=o[2],c=o[3],l=t.shape,h=l[1],d=l[2],p=new Float32Array(a*i*u*c),f=this.readSync(t.dataId),m=[s&&h>1?i-1:i,s&&d>1?u-1:u],g=[s&&h>1?h-1:h,s&&d>1?d-1:d],x=m[0]/g[0],y=m[1]/g[1],b=1/x,v=1/y,w=2*Math.ceil(b)+2,C=2*Math.ceil(v)+2,T=0;T<a;T++)for(var S=T*r.strides[0],k=0;k<i;k++)for(var N=S+k*r.strides[1],I=Math.floor(k*b),E=Math.floor(I-w/2),F=0;F<u;F++)for(var O=N+F*r.strides[2],D=Math.floor(F*v),M=Math.floor(D-C/2),P=0;P<c;P++){for(var L=0,z=0;z<w;z++){var W=z+E;if(!(W<0||W>=h)){var j=S+W*t.strides[1],Y=W*x;if(k===Math.min(i-1,s?Math.round(Y):Math.floor(Y)))for(var J=0;J<C;J++){var ae=J+M;if(!(ae<0||ae>=d)){var oe=j+ae*t.strides[2],ue=ae*y;F===Math.min(u-1,s?Math.round(ue):Math.floor(ue))&&(L+=f[oe+P])}}}}p[O+P]=L}return vo(p,r.shape,r.dtype)},e.prototype.batchNormalization=function(t,r,s,o,a,i){ie([t,r,s,a,i],"batchNorm");for(var u=this.readSync(t.dataId),c=this.readSync(r.dataId),l=this.readSync(s.dataId),h=a?this.readSync(a.dataId):new Float32Array([1]),d=i?this.readSync(i.dataId):new Float32Array([0]),p=new Float32Array(u.length),f=d.length,m=h.length,g=l.length,x=c.length,y=0,b=0,v=0,w=0,C=0;C<u.length;++C)p[C]=d[y++]+(u[C]-c[b++])*h[v++]/Math.sqrt(l[w++]+o),y>=f&&(y=0),b>=x&&(b=0),v>=m&&(v=0),w>=g&&(w=0);return vo(p,t.shape)},e.prototype.localResponseNormalization4D=function(t,r,s,o,a){ie(t,"localResponseNormalization4D");var i=t.shape[3],u=i-1,c=this.readSync(t.dataId),l=t.size,h=new Float32Array(l);function d(g){for(var x=g%i,y=g-x+Math.max(0,x-r),b=g-x+Math.min(x+r,u),v=0;y<=b;y++){var w=c[y];v+=w*w}return v}for(var p=0;p<l;p++){var f=d(p),m=c[p]*Math.pow(s+o*f,-a);h[p]=m}return vo(h,t.shape)},e.prototype.LRNGrad=function(t,r,s,o,a,i,u){ie(t,"LRNGrad");for(var c=t.shape[3],l=this.readSync(t.dataId),h=this.readSync(r.dataId),d=this.readSync(s.dataId),p=new Float32Array(t.size),f=t.size,m=0;m<f;m++){for(var g=m%c,x=m-g+Math.max(0,g-o),y=m-g+Math.min(c,g+o+1),b=0,v=x;v<y;v++)b+=Math.pow(h[v],2);for(b=i*b+a,v=x;v<y;v++){var w=-2*i*u*h[v]*d[m]/b;m===v&&(w+=Math.pow(b,-u)),w*=l[m],p[v]+=w}}return vo(p,t.shape)},e.prototype.multinomial=function(t,r,s,o){ie(t,"multinomial");for(var a=r?t:ul(t),i=a.shape[0],u=a.shape[1],c=bt([i,s],"int32"),l=this.readSync(c.dataId),h=this.readSync(a.dataId),d=0;d<i;++d){var p=d*u,f=new Float32Array(u-1);f[0]=h[p];for(var m=1;m<f.length;++m)f[m]=f[m-1]+h[p+m];for(var g=gl(o.toString()),x=d*s,y=0;y<s;++y){var b=g();l[x+y]=f.length;for(var v=0;v<f.length;v++)if(b<f[v]){l[x+y]=v;break}}}return c},e.prototype.oneHot=function(t,r,s,o){ie(t,"oneHot");var a=new Float32Array(t.size*r);a.fill(o);for(var i=this.readSync(t.dataId),u=0;u<t.size;++u)i[u]>=0&&i[u]<r&&(a[u*r+i[u]]=s);return yo(a,[t.size,r],"int32")},e.prototype.nonMaxSuppression=function(t,r,s,o,a){return ie(t,"nonMaxSuppression"),zp(this.readSync(t.dataId),this.readSync(r.dataId),s,o,a)},e.prototype.fft=function(t){return this.fftBatch(t,!1)},e.prototype.ifft=function(t){return this.fftBatch(t,!0)},e.prototype.fftBatch=function(t,r){for(var s=t.shape[0],o=t.shape[1],a=Le(t.shape,"float32"),i=Le(t.shape,"float32"),u=jn(t).as2D(s,o),c=br(t).as2D(s,o),l=0;l<s;l++)for(var h=u.slice([l,0],[1,o]),d=c.slice([l,0],[1,o]),p=Yt(h,d),f=this.readSync(this.fftImpl(p,r).dataId),m=0;m<o;m++){var g=l0(f,m);a.values[l*o+m]=g.real,i.values[l*o+m]=g.imag}return Yt(a.toTensor(),i.toTensor()).as2D(s,o)},e.prototype.fftImpl=function(t,r){var s=t.as1D(),o=s.size;if(this.isExponentOf2(o)){var a=this.fftRadix2(s,o,r).as2D(t.shape[0],t.shape[1]);return r&&(a=Yt(jn(a).div(ye(o)),br(a).div(ye(o)))),a}var i=this.readSync(t.dataId),u=function(c){for(var l=new Float32Array(c.length/2),h=new Float32Array(c.length/2),d=0;d<c.length;d+=2)l[d/2]=c[d],h[d/2]=c[d+1];return{real:l,imag:h}}(this.fourierTransformByMatmul(i,o,r));return Yt(u.real,u.imag).as2D(t.shape[0],t.shape[1])},e.prototype.isExponentOf2=function(t){return(t&t-1)==0},e.prototype.fftRadix2=function(t,r,s){if(r===1)return t;var o=this.readSync(t.dataId),a=r/2,i=function(x){for(var y=Math.ceil(x.length/4),b=new Float32Array(y),v=new Float32Array(y),w=0;w<x.length;w+=4)b[Math.floor(w/4)]=x[w],v[Math.floor(w/4)]=x[w+1];return{real:b,imag:v}}(o),u=Yt(i.real,i.imag).as1D(),c=function(x){for(var y=Math.floor(x.length/4),b=new Float32Array(y),v=new Float32Array(y),w=2;w<x.length;w+=4)b[Math.floor(w/4)]=x[w],v[Math.floor(w/4)]=x[w+1];return{real:b,imag:v}}(o),l=Yt(c.real,c.imag).as1D();u=this.fftRadix2(u,a,s),l=this.fftRadix2(l,a,s);var h=function(x,y){for(var b=new Float32Array(x/2),v=new Float32Array(x/2),w=0;w<Math.ceil(x/2);w++){var C=(y?2:-2)*Math.PI*(w/x);b[w]=Math.cos(C),v[w]=Math.sin(C)}return{real:b,imag:v}}(r,s),d=Yt(h.real,h.imag).mul(l),p=u.add(d),f=u.sub(d),m=jn(p).concat(jn(f)),g=br(p).concat(br(f));return Yt(m,g).as1D()},e.prototype.fourierTransformByMatmul=function(t,r,s){for(var o=new Float32Array(2*r),a=0;a<r;a++){for(var i=0,u=0,c=0;c<r;c++){var l=kR(a*c,r,s),h=l0(t,c);i+=h.real*l.real-h.imag*l.imag,u+=h.real*l.imag+h.imag*l.real}s&&(i/=r,u/=r),IR(o,i,u,a)}return o},e.prototype.depthToSpace=function(t,r,s){_(s==="NHWC",function(){return"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+s}),_(r>1,function(){return"blockSize should be > 1 for depthToSpace, but was: "+r});for(var o=t.shape[0],a=t.shape[1],i=t.shape[2],u=t.shape[3],c=a*r,l=i*r,h=u/(r*r),d=this.readSync(t.dataId),p=new Float32Array(o*c*l*h),f=0,m=0;m<o;++m)for(var g=0;g<c;++g)for(var x=Math.floor(g/r),y=g%r,b=0;b<l;++b)for(var v=Math.floor(b/r),w=(y*r+b%r)*h,C=0;C<h;++C){var T=C+w+u*(v+i*(x+a*m));p[f++]=d[T]}return vo(p,[o,c,l,h])},e.prototype.broadcastedBinaryOp=function(t,r,s,o){var a=qe(t.shape,r.shape),i=Le(a,s),u=this.readSync(t.dataId),c=this.readSync(r.dataId),l=Fs(t.shape,a),h=Fs(r.shape,a),d=i.values;if(l.length+h.length===0)for(var p=0;p<d.length;++p)d[p]=o(u[p%u.length],c[p%c.length]);else{var f=this.bufferSync(t),m=this.bufferSync(r),g=function(x){var y=i.indexToLoc(x),b=y.slice(-t.rank);l.forEach(function(T){return b[T]=0});var v=f.locToIndex(b),w=y.slice(-r.rank);h.forEach(function(T){return w[T]=0});var C=m.locToIndex(w);d[x]=o(u[v],c[C])};for(p=0;p<d.length;++p)g(p)}return i.toTensor()},e.prototype.broadcastedBinaryComplexOp=function(t,r,s){var o=qe(t.shape,r.shape),a=Le(o,"float32"),i=Le(o,"float32"),u=this.readSync(t.dataId),c=this.readSync(r.dataId),l=Fs(t.shape,o),h=Fs(r.shape,o),d=a.values,p=i.values;if(l.length+h.length===0)for(var f=0;f<d.length;f++){var m=f%u.length,g=f%c.length,x=s(u[2*m],u[2*m+1],c[2*g],c[2*g+1]);d[f]=x.real,p[f]=x.imag}else{var y=this.bufferSync(this.data.get(t.dataId).complexTensors.real),b=this.bufferSync(this.data.get(r.dataId).complexTensors.real),v=function(w){var C=a.indexToLoc(w),T=C.slice(-t.rank);l.forEach(function(E){return T[E]=0});var S=y.locToIndex(T),k=C.slice(-r.rank);h.forEach(function(E){return k[E]=0});var N=b.locToIndex(k),I=s(u[2*S],u[2*S+1],c[2*N],c[2*N+1]);d[w]=I.real,p[w]=I.imag};for(f=0;f<d.length;f++)v(f)}return this.complex(a.toTensor(),i.toTensor())},e.prototype.split=function(t,r,s){return p0(t,r,s)},e.prototype.dispose=function(){},e.prototype.floatPrecision=function(){return 32},e.prototype.epsilon=function(){return 1e-7},e.prototype.cropAndResize=function(t,r,s,o,a,i){for(var u=t.shape,c=u[0],l=u[1],h=u[2],d=u[3],p=r.shape[0],f=o[0],m=o[1],g=Le([p,f,m,d],"float32"),x=this.readSync(r.dataId),y=this.readSync(s.dataId),b=this.readSync(t.dataId),v=t.strides,w=g.strides,C=0;C<p;C++){var T=4*C,S=x[T],k=x[T+1],N=x[T+2],I=x[T+3],E=y[C];if(!(E>=c))for(var F=f>1?(N-S)*(l-1)/(f-1):0,O=m>1?(I-k)*(h-1)/(m-1):0,D=0;D<f;D++){var M=f>1?S*(l-1)+D*F:.5*(S+N)*(l-1);if(M<0||M>l-1)for(var P=0;P<m;P++)for(var L=0;L<d;L++){var z=L+P*w[2]+D*w[1]+C*w[0];g.values[z]=i}else if(a==="bilinear"){var W=Math.floor(M),j=Math.ceil(M),Y=M-W;for(P=0;P<m;P++)if((me=m>1?k*(h-1)+P*O:.5*(k+I)*(h-1))<0||me>h-1)for(L=0;L<d;L++)z=L+P*w[2]+D*w[1]+C*w[0],g.values[z]=i;else{var J=Math.floor(me),ae=Math.ceil(me),oe=me-J;for(L=0;L<d;L++){var ue=b[z=L+J*v[2]+W*v[1]+E*v[0]],he=b[z=L+ae*v[2]+W*v[1]+E*v[0]],pe=b[z=L+J*v[2]+j*v[1]+E*v[0]],de=ue+(he-ue)*oe,Ce=pe+(b[z=L+ae*v[2]+j*v[1]+E*v[0]]-pe)*oe;z=L+P*w[2]+D*w[1]+C*w[0],g.values[z]=de+(Ce-de)*Y}}}else for(P=0;P<m;++P){var me;if((me=m>1?k*(h-1)+P*O:.5*(k+I)*(h-1))<0||me>h-1)for(L=0;L<d;L++)z=L+P*w[2]+D*w[1]+C*w[0],g.values[z]=i;else{var Ne=Math.round(me),Te=Math.round(M);for(L=0;L<d;L++){var Me=L+Ne*v[2]+Te*v[1]+E*v[0],Fe=L+P*w[2]+D*w[1]+C*w[0];g.values[Fe]=b[Me]}}}}}return g.toTensor()},e.prototype.sparseToDense=function(t,r,s,o){var a=al(0,t,s),i=a.sliceRank,u=a.numUpdates,c=a.sliceSize,l=a.strides,h=a.outputSize;return this.scatter(t,r,s,h,c,u,i,l,o,!1)},e.prototype.gatherND=function(t,r){var s=r.shape,o=s[s.length-1],a=Zv(t,r),i=a[0],u=a[1],c=a[2],l=a[3];if(u===0)return Qt([],i,t.dtype);for(var h=new Ii([u,c],t.dtype),d=this.readSync(r.dataId),p=this.readSync(t.dataId),f=0;f<u;f++){for(var m=[],g=0,x=0;x<o;x++){var y=d[f*o+x];g+=y*l[x],m.push(y)}if(g<0||g>=t.size/c)throw new Error("Invalid indices: "+m+" does not index into "+t.shape);for(var b=0;b<c;b++)h.values[f*c+b]=p[g*c+b]}return h.toTensor().reshape(i)},e.prototype.scatterND=function(t,r,s){var o=al(0,t,s),a=o.sliceRank,i=o.numUpdates,u=o.sliceSize,c=o.strides,l=o.outputSize,h=ye(0);return this.scatter(t,r,s,l,u,i,a,c,h,!0)},e.prototype.fill=function(t,r,s){var o=yi(s=s||da(r),ve(t));return o.fill(r),H.makeTensor(o,t,s,this)},e.prototype.onesLike=function(t){if(t.dtype==="string")throw new Error("onesLike is not supported for string tensors");return this.fill(t.shape,1,t.dtype)},e.prototype.zerosLike=function(t){var r=yi(t.dtype,ve(t.shape));return this.makeOutput(r,t.shape,t.dtype)},e.prototype.linspace=function(t,r,s){return c0(t,r,s)},e.prototype.scatter=function(t,r,s,o,a,i,u,c,l,h){var d=[o/a,a],p=this.readSync(t.dataId),f=this.readSync(r.dataId);if(o===0)return Qt([],s,r.dtype);var m=new Ii(d,r.dtype);m.values.fill(this.readSync(l.dataId)[0]);for(var g=0;g<i;g++){for(var x=[],y=0,b=0;b<u;b++){var v=p[g*u+b];x.push(v),y+=v*c[b]}if(y<0||y>=o/a)throw new Error("Invalid indices: "+x+" does not index into "+s);for(var w=0;w<a;w++)h?m.values[y*a+w]+=f[g*a+w]:m.values[y*a+w]=r.rank===0?f[0]:f[g*a+w]}return m.toTensor().reshape(s)},e}(a0);function Hb(n,e){return{kernelName:n,backendName:"cpu",kernelFunc:function(t){var r=t.inputs,s=t.backend,o=r,a=o.a,i=o.b,u=s;ie([a,i],n);var c=u.data.get(a.dataId).values,l=u.data.get(i.dataId).values,h=e(a.shape,i.shape,c,l,a.dtype),d=h[0],p=h[1];return{dataId:u.write(d,p,a.dtype),shape:p,dtype:a.dtype}}}}function qb(n){return function(e,t,r,s,o){var a=qe(e,t),i=a.length,u=On(a),c=go(o,ve(a)),l=e.length,h=t.length,d=On(e),p=On(t),f=Fs(e,a),m=Fs(t,a);if(f.length+m.length===0)for(var g=0;g<c.length;++g)c[g]=n(r[g%r.length],s[g%s.length]);else{var x=function(y){var b=lp(y,i,u),v=b.slice(-l);f.forEach(function(S){return v[S]=0});var w=zc(v,l,d),C=b.slice(-h);m.forEach(function(S){return C[S]=0});var T=zc(C,h,p);c[y]=n(r[w],s[T])};for(g=0;g<c.length;++g)x(g)}return[c,a]}}H.registerBackend("cpu",function(){return new jD},1);var KD=qb(function(n,e){return n/e}),XD=Hb(nl,KD),YD={kernelName:"MaxPoolWithArgmax",backendName:"cpu",kernelFunc:function(n){var e=n.inputs,t=n.attrs,r=n.backend,s=e.x,o=t,a=o.filterSize,i=o.strides,u=o.pad,c=o.includeBatchInIndex,l=r;ie(s,"MaxPoolWithArgmax");var h=l.data.get(s.dataId).values,d=wo(s.shape,a,i,[1,1],u),p=function(y,b,v,w,C){var T=Cf(y,0,v,On(b),C,"max"),S=Gb(y,b,v,C,!0,w);return[T.values,S.values]}(h,s.shape,s.dtype,c,d),f=p[0],m=p[1],g=l.write(f,d.outShape,s.dtype),x=l.write(m,d.outShape,s.dtype);return[{dataId:g,shape:d.outShape,dtype:s.dtype},{dataId:x,shape:d.outShape,dtype:"int32"}]}},QD={kernelName:"NonMaxSuppressionV5",backendName:"cpu",kernelFunc:function(n){var e=n.inputs,t=n.backend,r=n.attrs,s=e,o=s.boxes,a=s.scores,i=r,u=i.maxOutputSize,c=i.iouThreshold,l=i.scoreThreshold,h=i.softNmsSigma,d=t;ie(o,"NonMaxSuppressionWithScore");var p=Vp(d.data.get(o.dataId).values,d.data.get(a.dataId).values,u,c,l,h);return[p.selectedIndices,p.selectedScores]}},JD={kernelName:"Square",backendName:"cpu",kernelFunc:function(n){var e=n.inputs,t=n.backend,r=e.x,s=t;ie(r,"square");for(var o=s.data.get(r.dataId).values,a=new Float32Array(o.length),i=0;i<o.length;++i){var u=o[i];a[i]=u*u}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ZD=qb(function(n,e){var t=n-e;return t*t});function jb(n,e,t,r,s){for(var o=ve(e),a=e.length,i=On(e),u=On(s),c=go(t,ve(s)),l=0;l<o;++l){for(var h=lp(l,a,i),d=new Array(h.length),p=0;p<d.length;p++)d[p]=h[r[p]];c[zc(d,a,u)]=n[l]}return c}for(var kf=0,Kb=[QD,JD,Hb(rl,ZD),XD,{kernelName:"Transpose",backendName:"cpu",kernelFunc:function(n){var e=n.inputs,t=n.attrs,r=n.backend,s=e.x,o=t.perm,a=r;ie(s,"transpose");for(var i=s.shape.length,u=new Array(i),c=0;c<u.length;c++)u[c]=s.shape[o[c]];var l=jb(a.data.get(s.dataId).values,s.shape,s.dtype,o,u);return{dataId:a.write(l,u,s.dtype),shape:u,dtype:s.dtype}}},YD];kf<Kb.length;kf++)By(Kb[kf]);for(var Sa,eF=function(n){this.variableNames=["A"];var e=mn(),t=n[0],r=n[1];this.outputShape=n,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(`+r+".0, "+t+`.0);

        vec4 values = `+e.texture2D+`(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `},tF=function(n){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var e=mn(),t=n[0],r=n[1];this.outputShape=n,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(`+r+".0, "+t+`.0);
            vec4 values = `+e.texture2D+`(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        `+e.output+` = result;
      }
    `},nF=function(n,e){this.variableNames=["A"];for(var t=new Array(n.length),r=0;r<t.length;r++)t[r]=n[e[r]];this.outputShape=t,this.rank=t.length;var s=ht(this.rank),o=function(a){var i=a.length;if(i>6)throw Error("Transpose for rank "+i+" is not yet supported");for(var u=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],c=new Array(i),l=0;l<a.length;l++)c[a[l]]=u[l];return c.join()}(e);this.userCode=`
    void main() {
      `+s+` resRC = getOutputCoords();
      setOutput(getA(`+o+`));
    }
    `},rF=function(n,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;for(var t=new Array(n.length),r=0;r<t.length;r++)t[r]=n[e[r]];if(this.outputShape=t,this.rank=t.length,this.rank>6)throw Error("Packed transpose for rank "+this.rank+" is not yet supported.");var s=ht(this.rank),o=g0("rc",this.rank),a=new Array(this.rank);for(r=0;r<e.length;r++)a[e[r]]=o[r];var i="vec2("+a.slice(-2).join()+")",u="++"+o[this.rank-1]+" < "+t[this.rank-1],c="getChannel(getA("+a.join()+"), "+i+")";this.userCode=`
    void main() {
      `+s+` rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = `+c+`;
      if(`+u+`) {
        result[1] = `+c+`;
      }
      --`+o[this.rank-1]+`;
      if(++`+o[this.rank-2]+" < "+t[this.rank-2]+`) {
        result[2] = `+c+`;
        if(`+u+`) {
          result[3] = `+c+`;
        }
      }
      setOutput(result);
    }
    `},Sf=0,Xb=[{kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(n){var e=n.inputs,t=n.backend,r=n.attrs,s=e.pixels,o=r.numChannels,a=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,u=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=u[0],l=u[1],h=[l,c],d=[l,c,o];(i||a)&&(Sa==null&&(Sa=document.createElement("canvas").getContext("2d")),Sa.canvas.width=c,Sa.canvas.height=l,Sa.drawImage(s,0,0,c,l),s=Sa.canvas);var p=t.makeTensorInfo(h,"int32");t.texData.get(p.dataId).usage=Gn.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(p.dataId),s);var f=se().getBool("WEBGL_PACK")?new tF(d):new eF(d),m=t.runWebGLProgram(f,[p],"int32");return t.disposeData(p.dataId),m}},{kernelName:nl,backendName:"webgl",kernelFunc:function(n){var e=n.inputs,t=n.backend,r=e;return function(s,o,a){var i=new It(GR,s.shape,o.shape);return se().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&(i=new zr(HR,s.shape,o.shape,!0)),a.runWebGLProgram(i,[s,o],"float32")}(r.a,r.b,t)}},{kernelName:"NonMaxSuppressionV5",backendName:"webgl",kernelFunc:function(n){var e=n.inputs,t=n.backend,r=n.attrs;Xc("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");var s=e,o=s.boxes,a=s.scores,i=r,u=i.maxOutputSize,c=i.iouThreshold,l=i.scoreThreshold,h=i.softNmsSigma,d=t,p=Vp(d.readSync(o.dataId),d.readSync(a.dataId),u,c,l,h);return[p.selectedIndices,p.selectedScores]}},{kernelName:"Square",backendName:"webgl",kernelFunc:function(n){var e=n.inputs,t=n.backend,r=e.x,s=t,o=new ze(r.shape,"return x * x;");return s.runWebGLProgram(o,[r],r.dtype)}},{kernelName:rl,backendName:"webgl",kernelFunc:function(n){var e=n.inputs,t=n.backend,r=e,s=r.a,o=r.b,a=t,i=se().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zr("return (a - b) * (a - b);",s.shape,o.shape):new It("return (a - b) * (a - b);",s.shape,o.shape);return a.compileAndRun(i,[s,o])}},{kernelName:"Transpose",backendName:"webgl",kernelFunc:function(n){for(var e,t=n.inputs,r=n.attrs,s=n.backend,o=t.x,a=r.perm,i=s,u=o.shape.length,c=new Array(u),l=0;l<c.length;l++)c[l]=o.shape[a[l]];if(i.shouldExecuteOnCPU([o])){var h=jb(i.texData.get(o.dataId).values,o.shape,o.dtype,a,c);e=i.makeTensorInfo(c,o.dtype),i.texData.get(e.dataId).values=h}else e=function(d,p,f){var m=se().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rF(d.shape,p):new nF(d.shape,p);return f.runWebGLProgram(m,[d],d.dtype)}(o,a,i);return e}},{kernelName:"MaxPoolWithArgmax",backendName:"webgl",kernelFunc:function(n){var e=n.inputs,t=n.attrs,r=n.backend,s=e.x,o=t,a=o.filterSize,i=o.strides,u=o.pad,c=o.includeBatchInIndex,l=r;_(s.shape.length===4,function(){return"Error in maxPool: input must be rank 4 but got rank "+s.shape.length+"."});var h=[1,1];_(kn(i,h),function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+i+" and dilations '"+h+"'"});var d=wo(s.shape,a,i,h,u),p=function(f,m,g,x){var y=new Di(g,"max",!1),b=x.runWebGLProgram(y,[f],"float32");return y=new Di(g,"max",!0,!0,m),[b,x.runWebGLProgram(y,[f],"float32")]}(s,c,d,l);return[p[0],p[1]]}}];Sf<Xb.length;Sf++)By(Xb[Sf]);for(var Nf=0,Yb=[{kernelName:yv,inputsToSave:["a","b"],gradFunc:function(n,e){var t=e[0],r=e[1],s=qe(t.shape,r.shape);return{a:function(){var o=n,a=Ut(t.shape,s);return a.length>0&&(o=o.sum(a)),o.reshape(t.shape)},b:function(){var o=n,a=Ut(r.shape,s);return a.length>0&&(o=o.sum(a)),o.reshape(r.shape)}}}},{kernelName:"AddN",saveAllInputs:!0,gradFunc:function(n,e){var t={};return e.forEach(function(r,s){t[s]=function(){return n.clone()}}),t}},{kernelName:vv,gradFunc:function(n,e,t){for(var r=t,s=r.inputShape,o=r.shape,a=Array.from(o),i=s.length-1;i>=0;i--)if(s[i]===o[i])a[i]=1;else if(s[i]!==1)throw new Error("broadcastTo(): ["+s+"] cannot be broadcast to ["+o+"].");var u=[];for(i=0;i<a.length;i++)a[i]>1&&u.push(i);return{x:function(){return n.sum(u,!0)}}}},{kernelName:nl,inputsToSave:["a","b"],gradFunc:function(n,e){var t=e[0],r=e[1],s=qe(t.shape,r.shape);return{a:function(){var o=ds(n,r.toFloat()),a=Ut(t.shape,s);return a.length>0?ps(o,a).reshape(t.shape):o},b:function(){var o=n.mul(t.toFloat()),a=Ut(r.shape,s);a.length>0&&(o=ps(o,a).reshape(r.shape));var i=nf(r);return sl(ds(o,i.toFloat()))}}}},{kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:function(n,e,t){var r=t.varianceEpsilon,s=e[0],o=e[1],a=e[2],i=e[3],u=H0(s),c=i??ye(1),l=Ut(o.shape,u.shape),h=[];if(o.rank===1){for(var d=0;d<u.shape.length-1;++d)h.push(u.shape[d]);h.push(1)}var p=hs(s,o),f=$t(n,c),m=$p(ls(a,ye(r))),g=$t($t($t(m,m),m),ye(-.5));return{x:function(){return o.rank===1?Br($t($t(n,To(m.as4D(1,1,1,o.shape[0]),h)),c),s.shape):Br($t($t(n,m),c),s.shape)},mean:function(){var x=$t($t(m,ye(-1)),f);return o.rank===1&&(x=ps(x,l)),Br(x,o.shape)},variance:function(){var x=$t($t(g,p),f);return o.rank===1&&(x=ps(x,l)),Br(x,o.shape)},scale:function(){var x=$t(p,m),y=$t(n,x);return o.rank===1&&(y=ps(y,l)),Br(y,o.shape)},offset:function(){var x=n;return o.rank===1&&(x=ps(x,l)),Br(x,o.shape)}}}},{kernelName:wv,gradFunc:function(n){return{x:function(){return n.toFloat()}}}},{kernelName:bv,inputsToSave:["indices"],gradFunc:function(n,e){var t=e[0];return{indices:function(){return bt(t.shape,"float32")}}}},{kernelName:Iv,inputsToSave:["x"],gradFunc:function(n,e,t){var r=e[0],s=t.paddings.map(function(o){return o[0]});return{x:function(){return n.slice(s,r.shape)}}}},{kernelName:"Square",inputsToSave:["x"],gradFunc:function(n,e){var t=e[0];return{x:function(){return n.mul(t.toFloat().mul(2))}}}},{kernelName:rl,inputsToSave:["a","b"],gradFunc:function(n,e){var t=e[0],r=e[1],s=ye(2);return{a:function(){return $t(n,$t(s,hs(t,r)))},b:function(){return $t(n,$t(s,hs(r,t)))}}}},{kernelName:Cv,inputsToSave:["x"],gradFunc:function(n,e,t){var r=e[0],s=t.reps;return{x:function(){var o=Ke(r);if(r.rank===1)for(var a=0;a<s[0];++a)o=o.add(n.slice([a*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(a=0;a<s[0];++a)for(var i=0;i<s[1];++i)o=o.add(n.slice([a*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(a=0;a<s[0];++a)for(i=0;i<s[1];++i)for(var u=0;u<s[2];++u)o=o.add(n.slice([a*r.shape[0],i*r.shape[1],u*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(r.rank!==4)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(a=0;a<s[0];++a)for(i=0;i<s[1];++i)for(u=0;u<s[2];++u)for(var c=0;c<s[3];++c)o=o.add(n.slice([a*r.shape[0],i*r.shape[1],u*r.shape[2],c*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return o}}}},{kernelName:"Transpose",gradFunc:function(n,e,t){var r=Np(t.perm);return{x:function(){return sr(n,r)}}}}];Nf<Yb.length;Nf++)lE(Yb[Nf]);var sF=function(){function n(){}return n.prototype.fetch=function(e,t){return fetch(e,t)},n.prototype.now=function(){return performance.now()},n.prototype.encode=function(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error("Browser's encoder only supports utf-8, but got "+t);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)},n.prototype.decode=function(e,t){return new TextDecoder(t).decode(e)},n}();se().get("IS_BROWSER")&&se().setPlatform("browser",new sF);var Tf,oF=function(){return require("node-fetch")},aF=function(){function n(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}return n.prototype.fetch=function(e,t){return se().global.fetch!=null?se().global.fetch(e,t):(Tf==null&&(Tf=oF()),Tf(e,t))},n.prototype.now=function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6},n.prototype.encode=function(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)},n.prototype.decode=function(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)},n}();se().get("IS_NODE")&&se().setPlatform("node",new aF);var Ef={float32:4,int32:4,uint16:2,uint8:1,bool:1},Sl=4;function Qb(n,e){for(var t={},r=0,s=function(i){var u=i.name,c=i.dtype,l=i.shape,h=ve(l),d=void 0;if("quantization"in i){var p=i.quantization;if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error("Weight "+i.name+" has unknown quantization dtype "+p.dtype+". Supported quantization dtypes are: 'uint8' and 'uint16'.");var f=Ef[p.dtype],m=n.slice(r,r+h*f),g=p.dtype==="uint8"?new Uint8Array(m):new Uint16Array(m);if(c==="float32")d=Float32Array.from(g,function(C){return C*p.scale+p.min});else{if(c!=="int32")throw new Error("Unsupported dtype in weight '"+u+"': "+c);d=Int32Array.from(g,function(C){return Math.round(C*p.scale+p.min)})}r+=h*f}else if(c==="string"){var x=ve(i.shape);d=[];for(var y=0;y<x;y++){var b=new Uint32Array(n.slice(r,r+Sl))[0];r+=Sl;var v=new Uint8Array(n.slice(r,r+b));d.push(v),r+=b}}else{var w=Ef[c];if(m=n.slice(r,r+h*w),c==="float32")d=new Float32Array(m);else if(c==="int32")d=new Int32Array(m);else{if(c!=="bool")throw new Error("Unsupported dtype in weight '"+u+"': "+c);d=new Uint8Array(m)}r+=h*w}t[u]=Qt(d,l,c)},o=0,a=e;o<a.length;o++)s(a[o]);return t}function iF(n){if(n===null)throw new Error("Invalid input value: "+JSON.stringify(n));var e=0,t=[];n.forEach(function(o){if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+o.constructor.name)});var r=new Uint8Array(e),s=0;return t.forEach(function(o){r.set(new Uint8Array(o.buffer),s),s+=o.byteLength}),r.buffer}var Rf=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Jb(n){return Rf?Buffer.byteLength(n):new Blob([n]).size}function Af(n){var e=0;n.forEach(function(s){e+=s.byteLength});var t=new Uint8Array(e),r=0;return n.forEach(function(s){t.set(new Uint8Array(s),r),r+=s.byteLength}),t.buffer}function Zb(n){for(n=n.trim();n.endsWith("/");)n=n.slice(0,n.length-1);var e=n.split("/");return e[e.length-1]}function Li(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:Jb(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:Jb(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}var Kn=function(){function n(){this.saveRouters=[],this.loadRouters=[]}return n.getInstance=function(){return n.instance==null&&(n.instance=new n),n.instance},n.registerSaveRouter=function(e){n.getInstance().saveRouters.push(e)},n.registerLoadRouter=function(e){n.getInstance().loadRouters.push(e)},n.getSaveHandlers=function(e){return n.getHandlers(e,"save")},n.getLoadHandlers=function(e,t){return n.getHandlers(e,"load",t)},n.getHandlers=function(e,t,r){var s=[];return(t==="load"?n.getInstance().loadRouters:n.getInstance().saveRouters).forEach(function(o){var a=o(e,r);a!==null&&s.push(a)}),s},n}(),Na="://",Ms=function(){function n(){this.managers={}}return n.getInstance=function(){return n.instance==null&&(n.instance=new n),n.instance},n.registerManager=function(e,t){_(e!=null,function(){return"scheme must not be undefined or null."}),e.endsWith(Na)&&(e=e.slice(0,e.indexOf(Na))),_(e.length>0,function(){return"scheme must not be an empty string."});var r=n.getInstance();_(r.managers[e]==null,function(){return"A model store manager is already registered for scheme '"+e+"'."}),r.managers[e]=t},n.getManager=function(e){var t=this.getInstance().managers[e];if(t==null)throw new Error("Cannot find model manager for scheme '"+e+"'");return t},n.getSchemes=function(){return Object.keys(this.getInstance().managers)},n}();function Nl(n){if(n.indexOf(Na)===-1)throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+Ms.getSchemes().join(","));return{scheme:n.split(Na)[0],path:n.split(Na)[1]}}function e1(n,e,t){return t===void 0&&(t=!1),Ie(this,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h;return ke(this,function(d){switch(d.label){case 0:return _(n!==e,function(){return"Old path and new path are the same: '"+n+"'"}),_((r=Kn.getLoadHandlers(n)).length>0,function(){return"Copying failed because no load handler is found for source URL "+n+"."}),_(r.length<2,function(){return"Copying failed because more than one ("+r.length+") load handlers for source URL "+n+"."}),s=r[0],_((o=Kn.getSaveHandlers(e)).length>0,function(){return"Copying failed because no save handler is found for destination URL "+e+"."}),_(o.length<2,function(){return"Copying failed because more than one ("+r.length+") save handlers for destination URL "+e+"."}),a=o[0],i=Nl(n).scheme,u=Nl(n).path,c=i===Nl(n).scheme,[4,s.load()];case 1:return l=d.sent(),t&&c?[4,Ms.getManager(i).removeModel(u)]:[3,3];case 2:d.sent(),d.label=3;case 3:return[4,a.save(l)];case 4:return h=d.sent(),!t||c?[3,6]:[4,Ms.getManager(i).removeModel(u)];case 5:d.sent(),d.label=6;case 6:return[2,h.modelArtifactsInfo]}})})}var Eo="models_store",Ls="model_info_store";function t1(){if(!se().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");var n=window||self,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function $f(n){var e=n.result;e.createObjectStore(Eo,{keyPath:"modelPath"}),e.createObjectStore(Ls,{keyPath:"modelPath"})}var Ta=function(){function n(e){if(this.indexedDB=t1(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}return n.prototype.save=function(e){return Ie(this,void 0,void 0,function(){return ke(this,function(t){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return[2,this.databaseAction(this.modelPath,e)]})})},n.prototype.load=function(){return Ie(this,void 0,void 0,function(){return ke(this,function(e){return[2,this.databaseAction(this.modelPath)]})})},n.prototype.databaseAction=function(e,t){var r=this;return new Promise(function(s,o){var a=r.indexedDB.open("tensorflowjs",1);a.onupgradeneeded=function(){return $f(a)},a.onsuccess=function(){var i=a.result;if(t==null){var u=i.transaction(Eo,"readonly"),c=u.objectStore(Eo).get(r.modelPath);c.onsuccess=function(){if(c.result==null)return i.close(),o(new Error("Cannot find model with path '"+r.modelPath+"' in IndexedDB."));s(c.result.modelArtifacts)},c.onerror=function(m){return i.close(),o(c.error)},u.oncomplete=function(){return i.close()}}else{var l,h=Li(t),d=i.transaction(Ls,"readwrite"),p=d.objectStore(Ls),f=p.put({modelPath:r.modelPath,modelArtifactsInfo:h});f.onsuccess=function(){var m=(l=i.transaction(Eo,"readwrite")).objectStore(Eo).put({modelPath:r.modelPath,modelArtifacts:t,modelArtifactsInfo:h});m.onsuccess=function(){return s({modelArtifactsInfo:h})},m.onerror=function(g){var x=(p=d.objectStore(Ls)).delete(r.modelPath);x.onsuccess=function(){return i.close(),o(m.error)},x.onerror=function(y){return i.close(),o(m.error)}}},f.onerror=function(m){return i.close(),o(f.error)},d.oncomplete=function(){l==null?i.close():l.oncomplete=function(){return i.close()}}}},a.onerror=function(i){return o(a.error)}})},n.URL_SCHEME="indexeddb://",n}(),n1=function(n){return se().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ta.URL_SCHEME)?(e=n.slice(Ta.URL_SCHEME.length),new Ta(e)):null;var e};Kn.registerSaveRouter(n1),Kn.registerLoadRouter(n1);var uF=function(){function n(){this.indexedDB=t1()}return n.prototype.listModels=function(){return Ie(this,void 0,void 0,function(){var e=this;return ke(this,function(t){return[2,new Promise(function(r,s){var o=e.indexedDB.open("tensorflowjs",1);o.onupgradeneeded=function(){return $f(o)},o.onsuccess=function(){var a=o.result,i=a.transaction(Ls,"readonly"),u=i.objectStore(Ls).getAll();u.onsuccess=function(){for(var c={},l=0,h=u.result;l<h.length;l++){var d=h[l];c[d.modelPath]=d.modelArtifactsInfo}r(c)},u.onerror=function(c){return a.close(),s(u.error)},i.oncomplete=function(){return a.close()}},o.onerror=function(a){return s(o.error)}})]})})},n.prototype.removeModel=function(e){return Ie(this,void 0,void 0,function(){var t=this;return ke(this,function(r){var s;return e=(s=e).startsWith(Ta.URL_SCHEME)?s.slice(Ta.URL_SCHEME.length):s,[2,new Promise(function(o,a){var i=t.indexedDB.open("tensorflowjs",1);i.onupgradeneeded=function(){return $f(i)},i.onsuccess=function(){var u,c=i.result,l=c.transaction(Ls,"readwrite"),h=l.objectStore(Ls),d=h.get(e);d.onsuccess=function(){if(d.result==null)return c.close(),a(new Error("Cannot find model with path '"+e+"' in IndexedDB."));var p=h.delete(e),f=function(){var m=(u=c.transaction(Eo,"readwrite")).objectStore(Eo).delete(e);m.onsuccess=function(){return o(d.result.modelArtifactsInfo)},m.onerror=function(g){return a(d.error)}};p.onsuccess=f,p.onerror=function(m){return f(),c.close(),a(d.error)}},d.onerror=function(p){return c.close(),a(d.error)},l.oncomplete=function(){u==null?c.close():u.oncomplete=function(){return c.close()}}},i.onerror=function(u){return a(i.error)}})]})})},n}();if(se().getBool("IS_BROWSER"))try{Ms.registerManager(Ta.URL_SCHEME,new uF)}catch{}var ms="/",Ea="tensorflowjs_models",r1="info",cF="model_topology",lF="weight_specs",hF="weight_data",dF="model_metadata";function s1(n){return{info:[Ea,n,r1].join(ms),topology:[Ea,n,cF].join(ms),weightSpecs:[Ea,n,lF].join(ms),weightData:[Ea,n,hF].join(ms),modelMetadata:[Ea,n,dF].join(ms)}}function pF(n){var e=n.split(ms);if(e.length<3)throw new Error("Invalid key format: "+n);return e.slice(1,e.length-1).join(ms)}var Ra=function(){function n(e){if(!se().getBool("IS_BROWSER")||typeof window>"u"||window.localStorage===void 0)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=s1(this.modelPath)}return n.prototype.save=function(e){return Ie(this,void 0,void 0,function(){var t,r,s;return ke(this,function(o){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=Li(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(a){if(Rf)return Buffer.from(a).toString("base64");for(var i=new Uint8Array(a),u="",c=0,l=i.length;c<l;c++)u+=String.fromCharCode(i[c]);return btoa(u)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),[2,{modelArtifactsInfo:s}]}catch{throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error("Failed to save model '"+this.modelPath+"' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes="+s.modelTopologyBytes+", weightSpecsBytes="+s.weightSpecsBytes+", weightDataBytes="+s.weightDataBytes+".")}return[2]})})},n.prototype.load=function(){return Ie(this,void 0,void 0,function(){var e,t,r,s,o,a,i;return ke(this,function(u){if((e=JSON.parse(this.LS.getItem(this.keys.info)))==null)throw new Error("In local storage, there is no model with name '"+this.modelPath+"'");if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");if(t={},(r=JSON.parse(this.LS.getItem(this.keys.topology)))==null)throw new Error("In local storage, the topology of model '"+this.modelPath+"' is missing.");if(t.modelTopology=r,(s=JSON.parse(this.LS.getItem(this.keys.weightSpecs)))==null)throw new Error("In local storage, the weight specs of model '"+this.modelPath+"' are missing.");if(t.weightSpecs=s,(o=this.LS.getItem(this.keys.modelMetadata))!=null&&(a=JSON.parse(o),t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,t.userDefinedMetadata=a.userDefinedMetadata),(i=this.LS.getItem(this.keys.weightData))==null)throw new Error("In local storage, the binary weight values of model '"+this.modelPath+"' are missing.");return t.weightData=function(c){if(Rf){var l=Buffer.from(c,"base64");return l.buffer.slice(l.byteOffset,l.byteOffset+l.byteLength)}for(var h=atob(c),d=new Uint8Array(h.length),p=0;p<h.length;++p)d.set([h.charCodeAt(p)],p);return d.buffer}(i),[2,t]})})},n.URL_SCHEME="localstorage://",n}(),o1=function(n){return se().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ra.URL_SCHEME)?(e=n.slice(Ra.URL_SCHEME.length),new Ra(e)):null;var e};Kn.registerSaveRouter(o1),Kn.registerLoadRouter(o1);var fF=function(){function n(){_(se().getBool("IS_BROWSER"),function(){return"Current environment is not a web browser"}),_(typeof window>"u"||window.localStorage!==void 0,function(){return"Current browser does not appear to support localStorage"}),this.LS=window.localStorage}return n.prototype.listModels=function(){return Ie(this,void 0,void 0,function(){var e,t,r,s,o,a;return ke(this,function(i){for(e={},t=Ea+ms,r=ms+r1,s=0;s<this.LS.length;++s)(o=this.LS.key(s)).startsWith(t)&&o.endsWith(r)&&(a=pF(o),e[a]=JSON.parse(this.LS.getItem(o)));return[2,e]})})},n.prototype.removeModel=function(e){return Ie(this,void 0,void 0,function(){var t,r;return ke(this,function(s){var o;if(e=(o=e).startsWith(Ra.URL_SCHEME)?o.slice(Ra.URL_SCHEME.length):o,t=s1(e),this.LS.getItem(t.info)==null)throw new Error("Cannot find model at path '"+e+"'");return r=JSON.parse(this.LS.getItem(t.info)),this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),[2,r]})})},n}();if(se().getBool("IS_BROWSER"))try{Ms.registerManager(Ra.URL_SCHEME,new fF)}catch{}var mF="model",gF=".json",xF=".weights.bin";function a1(n){return new Promise(function(e){return setTimeout(e)}).then(n)}var Df=function(){function n(e){if(!se().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(n.URL_SCHEME)&&(e=e.slice(n.URL_SCHEME.length)),e!=null&&e.length!==0||(e=mF),this.modelTopologyFileName=e+gF,this.weightDataFileName=e+xF}return n.prototype.save=function(e){return Ie(this,void 0,void 0,function(){var t,r,s,o,a,i;return ke(this,function(u){switch(u.label){case 0:if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");if(t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"})),!(e.modelTopology instanceof ArrayBuffer))return[3,1];throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");case 1:return r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:r},o=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),(a=this.jsonAnchor==null?document.createElement("a"):this.jsonAnchor).download=this.modelTopologyFileName,a.href=o,[4,a1(function(){return a.dispatchEvent(new MouseEvent("click"))})];case 2:return u.sent(),e.weightData==null?[3,4]:((i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor).download=this.weightDataFileName,i.href=t,[4,a1(function(){return i.dispatchEvent(new MouseEvent("click"))})]);case 3:u.sent(),u.label=4;case 4:return[2,{modelArtifactsInfo:Li(e)}]}})})},n.URL_SCHEME="downloads://",n}(),yF=function(){function n(e){if(e==null||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}return n.prototype.load=function(){return Ie(this,void 0,void 0,function(){var e,t,r=this;return ke(this,function(s){return e=this.files[0],t=this.files.slice(1),[2,new Promise(function(o,a){var i=new FileReader;i.onload=function(u){var c=JSON.parse(u.target.result),l=c.modelTopology;if(l!=null){t.length===0&&o({modelTopology:l});var h=c.weightsManifest;if(h!=null){var d;try{d=r.checkManifestAndWeightFiles(h,t)}catch(g){return void a(g)}var p=[],f=[],m=[];h.forEach(function(g){g.paths.forEach(function(x){f.push(x),m.push(null)}),p.push.apply(p,g.weights)}),h.forEach(function(g){g.paths.forEach(function(x){var y=new FileReader;y.onload=function(b){var v=b.target.result,w=f.indexOf(x);m[w]=v,m.indexOf(null)===-1&&o({modelTopology:l,weightSpecs:p,weightData:Af(m),format:c.format,generatedBy:c.generatedBy,convertedBy:c.convertedBy,userDefinedMetadata:c.userDefinedMetadata})},y.onerror=function(b){return a("Failed to weights data from file of path '"+x+"'.")},y.readAsArrayBuffer(d[x])})})}else a(new Error("weightManifest field is missing from file "+e.name))}else a(new Error("modelTopology field is missing from file "+e.name))},i.onerror=function(u){return a("Failed to read model topology and weights manifest JSON from file '"+e.name+"'. BrowserFiles supports loading Keras-style tf.Model artifacts only.")},i.readAsText(e)})]})})},n.prototype.checkManifestAndWeightFiles=function(e,t){for(var r=[],s=t.map(function(u){return Zb(u.name)}),o={},a=0,i=e;a<i.length;a++)i[a].paths.forEach(function(u){var c=Zb(u);if(r.indexOf(c)!==-1)throw new Error("Duplicate file basename found in weights manifest: '"+c+"'");if(r.push(c),s.indexOf(c)===-1)throw new Error("Weight file with basename '"+c+"' is not provided.");o[u]=t[s.indexOf(c)]});if(r.length!==t.length)throw new Error("Mismatch in the number of files in weights manifest ("+r.length+") and the number of weight files provided ("+t.length+").");return o},n}();function i1(n,e,t,r){(function(o){_(o!=null&&Array.isArray(o)&&o.length>0,function(){return"promises must be a none empty array"})})(n),function(o,a){_(o>=0&&o<=1,function(){return"Progress fraction must be in range [0, 1], but got startFraction "+o}),_(a>=0&&a<=1,function(){return"Progress fraction must be in range [0, 1], but got endFraction "+a}),_(a>=o,function(){return"startFraction must be no more than endFraction, but got startFraction "+o+" and endFraction "+a})}(t=t??0,r=r??1);var s=0;return Promise.all(n.map(function(o){return o.then(function(a){var i=t+ ++s/n.length*(r-t);return e(i),a}),o}))}function u1(n,e){return Ie(this,void 0,void 0,function(){var t,r,s,o,a,i,u,c,l;return ke(this,function(h){switch(h.label){case 0:return e==null&&(e={}),t=e.fetchFunc==null?se().platform.fetch:e.fetchFunc,r=n.map(function(d){return t(d,e.requestInit,{isBinary:!0})}),s=0,o=.5,e.onProgress!=null?[3,2]:[4,Promise.all(r)];case 1:return a=h.sent(),[3,4];case 2:return[4,i1(r,e.onProgress,s,o)];case 3:a=h.sent(),h.label=4;case 4:return i=a.map(function(d){return d.arrayBuffer()}),u=.5,c=1,e.onProgress!=null?[3,6]:[4,Promise.all(i)];case 5:return l=h.sent(),[3,8];case 6:return[4,i1(i,e.onProgress,u,c)];case 7:l=h.sent(),h.label=8;case 8:return[2,l]}})})}function c1(n){var e=this;return function(t,r,s){return r===void 0&&(r=""),Ie(e,void 0,void 0,function(){var o,a,i,u,c,l,h,d,p,f;return ke(this,function(m){switch(m.label){case 0:if(o=t.map(function(){return!1}),a={},i=s!=null?s.map(function(){return!1}):[],u=[],t.forEach(function(g,x){var y=0;g.weights.forEach(function(b){var v="quantization"in b?b.quantization.dtype:b.dtype,w=Ef[v]*ve(b.shape),C=function(){o[x]=!0,a[x]==null&&(a[x]=[]),a[x].push({manifestEntry:b,groupOffset:y,sizeBytes:w})};s!=null?s.forEach(function(T,S){T===b.name&&(C(),i[S]=!0)}):C(),u.push(b.name),y+=w})}),!i.every(function(g){return g}))throw c=s.filter(function(g,x){return!i[x]}),new Error("Could not find weights in manifest with names: "+c.join(", ")+`. 
Manifest JSON has weights with names: `+u.join(", ")+".");return l=o.reduce(function(g,x,y){return x&&g.push(y),g},[]),h=[],l.forEach(function(g){t[g].paths.forEach(function(x){var y=r+(r.endsWith("/")?"":"/")+x;h.push(y)})}),[4,n(h)];case 1:return d=m.sent(),p={},f=0,l.forEach(function(g){for(var x=t[g].paths.length,y=0,b=0;b<x;b++)y+=d[f+b].byteLength;for(var v=new ArrayBuffer(y),w=new Uint8Array(v),C=0,T=0;T<x;T++){var S=new Uint8Array(d[f+T]);w.set(S,C),C+=S.byteLength}a[g].forEach(function(k){var N=Qb(v.slice(k.groupOffset,k.groupOffset+k.sizeBytes),[k.manifestEntry]);for(var I in N)p[I]=N[I]}),f+=x}),[2,p]}})})}}Kn.registerSaveRouter(function(n){return se().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Df.URL_SCHEME)?function(e){return e===void 0&&(e="model"),new Df(e)}(n.slice(Df.URL_SCHEME.length)):null});var l1=function(){function n(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,t.fetchFunc!=null?(_(typeof t.fetchFunc=="function",function(){return"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"}),this.fetch=t.fetchFunc):this.fetch=se().platform.fetch,_(e!=null&&e.length>0,function(){return"URL path for http must not be null, undefined or empty."}),Array.isArray(e)&&_(e.length===2,function(){return"URL paths for http must have a length of 2, (actual length is "+e.length+")."}),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}return n.prototype.save=function(e){return Ie(this,void 0,void 0,function(){var t,r,s,o;return ke(this,function(a){switch(a.label){case 0:if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");return(t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit)).body=new FormData,r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:r},t.body.append("model.json",new Blob([JSON.stringify(s)],{type:"application/json"}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin"),[4,this.fetch(this.path,t)];case 1:if((o=a.sent()).ok)return[2,{modelArtifactsInfo:Li(e),responses:[o]}];throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+o.status+".")}})})},n.prototype.load=function(){return Ie(this,void 0,void 0,function(){var e,t,r,s,o,a,i,u,c,l,h,d;return ke(this,function(p){switch(p.label){case 0:return[4,this.fetch(this.path,this.requestInit)];case 1:if(!(e=p.sent()).ok)throw new Error("Request to "+this.path+" failed with status code "+e.status+". Please verify this URL points to the model JSON of the model to load.");p.label=2;case 2:return p.trys.push([2,4,,5]),[4,e.json()];case 3:return t=p.sent(),[3,5];case 4:throw p.sent(),r="Failed to parse model JSON of response from "+this.path+".",this.path.endsWith(".pb")?r+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":r+=" Please make sure the server is serving valid JSON for this request.",new Error(r);case 5:if(s=t.modelTopology,o=t.weightsManifest,a=t.generatedBy,i=t.convertedBy,u=t.format,c=t.userDefinedMetadata,s==null&&o==null)throw new Error("The JSON from HTTP path "+this.path+" contains neither model topology or manifest for weights.");return o==null?[3,7]:[4,this.loadWeights(o)];case 6:d=p.sent(),l=d[0],h=d[1],p.label=7;case 7:return[2,{modelTopology:s,weightSpecs:l,weightData:h,userDefinedMetadata:c,generatedBy:a,convertedBy:i,format:u}]}})})},n.prototype.loadWeights=function(e){return Ie(this,void 0,void 0,function(){var t,r,s,o,a,i,u,c,l,h,d;return ke(this,function(p){switch(p.label){case 0:for(t=Array.isArray(this.path)?this.path[1]:this.path,r=function(f){var m=f.lastIndexOf("/"),g=f.lastIndexOf("?"),x=f.substring(0,m),y=g>m?f.substring(g):"";return[x+"/",y]}(t),s=r[0],o=r[1],a=this.weightPathPrefix||s,i=[],u=0,c=e;u<c.length;u++)l=c[u],i.push.apply(i,l.weights);return h=[],e.forEach(function(f){f.paths.forEach(function(m){h.push(a+m+o)})}),[4,u1(h,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})];case 1:return d=p.sent(),[2,[i,Af(d)]]}})})},n.URL_SCHEME_REGEX=/^https?:\/\//,n}();function Ff(n){return n.match(l1.URL_SCHEME_REGEX)!=null}var h1=function(n,e){return typeof fetch>"u"?null:(Array.isArray(n)?n.every(function(t){return Ff(t)}):Ff(n))?Of(n,{onProgress:e}):null};function Of(n,e){return new l1(n,e)}Kn.registerSaveRouter(h1),Kn.registerLoadRouter(h1);var _f=function(){function n(e){this.modelArtifacts=e}return n.prototype.load=function(){return Ie(this,void 0,void 0,function(){return ke(this,function(e){return[2,this.modelArtifacts]})})},n}(),vF=function(){function n(e){this.saveHandler=e}return n.prototype.save=function(e){return Ie(this,void 0,void 0,function(){return ke(this,function(t){return[2,this.saveHandler(e)]})})},n}(),Pi=Object.freeze({browserFiles:function(n){return new yF(n)},browserHTTPRequest:function(n,e){return Of(n,e)},concatenateArrayBuffers:Af,decodeWeights:Qb,encodeWeights:function(n,e){return Ie(this,void 0,void 0,function(){var t,r,s,o,a,i=this;return ke(this,function(u){switch(u.label){case 0:for(t=[],r=[],s=Array.isArray(n)?n.map(function(c){return c.name}):Object.keys(n),o=function(c){var l=s[c],h=Array.isArray(n)?n[c].tensor:n[l];if(h.dtype!=="float32"&&h.dtype!=="int32"&&h.dtype!=="bool"&&h.dtype!=="string")throw new Error("Unsupported dtype in weight '"+l+"': "+h.dtype);var d={name:l,shape:h.shape,dtype:h.dtype};if(h.dtype==="string"){var p=new Promise(function(f){return Ie(i,void 0,void 0,function(){var m,g,x,y,b,v,w;return ke(this,function(C){switch(C.label){case 0:return[4,h.bytes()];case 1:for(m=C.sent(),g=m.reduce(function(T,S){return T+S.length},0)+Sl*m.length,x=new Uint8Array(g),y=0,b=0;b<m.length;b++)v=m[b],w=new Uint8Array(new Uint32Array([v.length]).buffer),x.set(w,y),y+=Sl,x.set(v,y),y+=v.length;return f(x),[2]}})})});r.push(p)}else r.push(h.data());e!=null&&(d.group=e),t.push(d)},a=0;a<s.length;++a)o(a);return[4,Promise.all(r)];case 1:return[2,{data:iF(u.sent()),specs:t}]}})})},fromMemory:function(n,e,t,r){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new _f(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new _f({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new _f({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:r}))},getLoadHandlers:function(n,e){return Kn.getLoadHandlers(n,e)},getModelArtifactsInfoForJSON:Li,getSaveHandlers:function(n){return Kn.getSaveHandlers(n)},http:Of,isHTTPScheme:Ff,loadWeights:function(n,e,t,r){return e===void 0&&(e=""),Ie(this,void 0,void 0,function(){return ke(this,function(s){return[2,c1(function(o){return u1(o,{requestInit:r})})(n,e,t)]})})},registerLoadRouter:function(n){return Kn.registerLoadRouter(n)},registerSaveRouter:function(n){return Kn.registerSaveRouter(n)},weightsLoaderFactory:c1,withSaveHandler:function(n){return new vF(n)},copyModel:function(n,e){return Ie(this,void 0,void 0,function(){return ke(this,function(t){return[2,e1(n,e,!1)]})})},listModels:function(){return Ie(this,void 0,void 0,function(){var n,e,t,r,s,o,a;return ke(this,function(i){switch(i.label){case 0:n=Ms.getSchemes(),e={},t=0,r=n,i.label=1;case 1:return t<r.length?(s=r[t],[4,Ms.getManager(s).listModels()]):[3,4];case 2:for(a in o=i.sent())e[s+Na+a]=o[a];i.label=3;case 3:return t++,[3,1];case 4:return[2,e]}})})},moveModel:function(n,e){return Ie(this,void 0,void 0,function(){return ke(this,function(t){return[2,e1(n,e,!0)]})})},removeModel:function(n){return Ie(this,void 0,void 0,function(){var e;return ke(this,function(t){return e=Nl(n),[2,Ms.getManager(e.scheme).removeModel(e.path)]})})}}),Aa;V({confusionMatrix_:function(n,e,t){var r=$(n,"labels","confusionMatrix"),s=$(e,"predictions","confusionMatrix");_(t==null||t>0&&Number.isInteger(t),function(){return"If provided, numClasses must be a positive integer, but got "+t}),_(r.rank===1,function(){return"Expected the rank of labels to be 1, but got "+r.rank}),_(s.rank===1,function(){return"Expected the rank of predictions to be 1, but got "+s.rank}),_(r.shape[0]===s.shape[0],function(){return"Mismatch in the number of examples: "+r.shape[0]+" vs. "+s.shape[0]+". Labels and predictions should have the same number of elements."}),_(t>0&&Number.isInteger(t),function(){return"numClasses is required to be a positive integer, but got "+t});var o=_i(r.asType("int32"),t),a=_i(s.asType("int32"),t);return o.transpose().matMul(a).asType("int32")}}),V({fromPixels_:function(n,e){if(e===void 0&&(e=3),e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");var t=!1,r=!1,s=!1,o=!1,a=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else{if(n.getContext==null)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+n.constructor.name);a=!0}if(s&&s&&n.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(My("FromPixels",H.backendName)!=null)return H.runKernel("FromPixels",{pixels:n},{numChannels:e});var i,u,c=s?[n.videoWidth,n.videoHeight]:[n.width,n.height],l=c[0],h=c[1];if(a?i=n.getContext("2d").getImageData(0,0,l,h).data:r||t?i=n.data:(o||s)&&(Aa==null&&(Aa=document.createElement("canvas").getContext("2d")),Aa.canvas.width=l,Aa.canvas.height=h,Aa.drawImage(n,0,0,l,h),i=Aa.getImageData(0,0,l,h).data),e===4)u=new Int32Array(i);else{var d=l*h;u=new Int32Array(d*e);for(var p=0;p<d;p++)for(var f=0;f<e;++f)u[p*e+f]=i[4*p+f]}return hv(u,[h,l,e],"int32")}});var bF=function(){function n(){}return n.prototype.getClassName=function(){return this.constructor.className},n.fromConfig=function(e,t){return new e(t)},n}(),wF=function(){function n(){this.classNameMap={}}return n.getMap=function(){return n.instance==null&&(n.instance=new n),n.instance},n.register=function(e){n.getMap().classNameMap[e.className]=[e,e.fromConfig]},n}();function Ro(n){_(n.className!=null,function(){return"Class being registered does not have the static className property defined."}),_(typeof n.className=="string",function(){return"className is required to be a string, but got type "+typeof n.className}),_(n.className.length>0,function(){return"Class being registered has an empty-string as its className, which is disallowed."}),wF.register(n)}var Ao=function(n){function e(){return n!==null&&n.apply(this,arguments)||this}return xr(e,n),e.prototype.minimize=function(t,r,s){r===void 0&&(r=!1);var o=this.computeGradients(t,s),a=o.value,i=o.grads;if(s!=null){var u=s.map(function(c){return{name:c.name,tensor:i[c.name]}});this.applyGradients(u)}else this.applyGradients(i);return _n(i),r?a:(a.dispose(),null)},Object.defineProperty(e.prototype,"iterations",{get:function(){return this.iterations_==null&&(this.iterations_=0),this.iterations_},enumerable:!0,configurable:!0}),e.prototype.incrementIterations=function(){this.iterations_=this.iterations+1},e.prototype.computeGradients=function(t,r){return CR(t,r)},e.prototype.dispose=function(){this.iterations_!=null&&_n(this.iterations_)},e.prototype.saveIterations=function(){return Ie(this,void 0,void 0,function(){return ke(this,function(t){return this.iterations_==null&&(this.iterations_=0),[2,{name:"iter",tensor:ye(this.iterations_,"int32")}]})})},e.prototype.getWeights=function(){return Ie(this,void 0,void 0,function(){return ke(this,function(t){throw new Error("getWeights() is not implemented for this optimizer yet.")})})},e.prototype.setWeights=function(t){return Ie(this,void 0,void 0,function(){return ke(this,function(r){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())})})},e.prototype.extractIterations=function(t){return Ie(this,void 0,void 0,function(){var r;return ke(this,function(s){switch(s.label){case 0:return r=this,[4,t[0].tensor.data()];case 1:return r.iterations_=s.sent()[0],[2,t.slice(1)]}})})},e}(bF);Object.defineProperty(Ao,Symbol.hasInstance,{value:function(n){return n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null}});var CF=function(n){function e(t,r,s){s===void 0&&(s=null);var o=n.call(this)||this;return o.learningRate=t,o.rho=r,o.epsilon=s,o.accumulatedGrads=[],o.accumulatedUpdates=[],s==null&&(o.epsilon=H.backend.epsilon()),o}return xr(e,n),e.prototype.applyGradients=function(t){var r=this;(Array.isArray(t)?t.map(function(s){return s.name}):Object.keys(t)).forEach(function(s,o){var a=H.registeredVariables[s];r.accumulatedGrads[o]==null&&(r.accumulatedGrads[o]={originalName:s+"/accum_grad",variable:He(function(){return Ke(a).variable(!1)})}),r.accumulatedUpdates[o]==null&&(r.accumulatedUpdates[o]={originalName:s+"/accum_var",variable:He(function(){return Ke(a).variable(!1)})});var i=Array.isArray(t)?t[o].tensor:t[s];if(i!=null){var u=r.accumulatedGrads[o].variable,c=r.accumulatedUpdates[o].variable;He(function(){var l=u.mul(r.rho).add(i.square().mul(1-r.rho)),h=c.add(r.epsilon).sqrt().div(u.add(r.epsilon).sqrt()).mul(i),d=c.mul(r.rho).add(h.square().mul(1-r.rho));u.assign(l),c.assign(d);var p=h.mul(-r.learningRate).add(a);a.assign(p)})}}),this.incrementIterations()},e.prototype.dispose=function(){this.accumulatedUpdates!=null&&(_n(this.accumulatedGrads.map(function(t){return t.variable})),_n(this.accumulatedUpdates.map(function(t){return t.variable})))},e.prototype.getWeights=function(){return Ie(this,void 0,void 0,function(){var t;return ke(this,function(r){switch(r.label){case 0:return t=this.accumulatedGrads.concat(this.accumulatedUpdates),[4,this.saveIterations()];case 1:return[2,[r.sent()].concat(t.map(function(s){return{name:s.originalName,tensor:s.variable}}))]}})})},e.prototype.setWeights=function(t){return Ie(this,void 0,void 0,function(){var r;return ke(this,function(s){switch(s.label){case 0:return[4,this.extractIterations(t)];case 1:return t=s.sent(),r=t.length/2,this.accumulatedGrads=t.slice(0,r).map(function(o){return{originalName:o.name,variable:o.tensor.variable(!1)}}),this.accumulatedUpdates=t.slice(r,2*r).map(function(o){return{originalName:o.name,variable:o.tensor.variable(!1)}}),[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}},e.fromConfig=function(t,r){return new t(r.learningRate,r.rho,r.epsilon)},e.className="Adadelta",e}(Ao);Ro(CF);var IF=function(n){function e(t,r){r===void 0&&(r=.1);var s=n.call(this)||this;return s.learningRate=t,s.initialAccumulatorValue=r,s.accumulatedGrads=[],s}return xr(e,n),e.prototype.applyGradients=function(t){var r=this;(Array.isArray(t)?t.map(function(s){return s.name}):Object.keys(t)).forEach(function(s,o){var a=H.registeredVariables[s];r.accumulatedGrads[o]==null&&(r.accumulatedGrads[o]={originalName:s+"/accumulator",variable:He(function(){return Qc(a.shape,r.initialAccumulatorValue).variable(!1)})});var i=Array.isArray(t)?t[o].tensor:t[s];if(i!=null){var u=r.accumulatedGrads[o].variable;He(function(){var c=u.add(i.square());u.assign(c);var l=i.div(c.add(H.backend.epsilon()).sqrt()).mul(-r.learningRate).add(a);a.assign(l)})}}),this.incrementIterations()},e.prototype.dispose=function(){this.accumulatedGrads!=null&&_n(this.accumulatedGrads.map(function(t){return t.variable}))},e.prototype.getWeights=function(){return Ie(this,void 0,void 0,function(){return ke(this,function(t){switch(t.label){case 0:return[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(this.accumulatedGrads.map(function(r){return{name:r.originalName,tensor:r.variable}}))]}})})},e.prototype.setWeights=function(t){return Ie(this,void 0,void 0,function(){return ke(this,function(r){switch(r.label){case 0:return[4,this.extractIterations(t)];case 1:return t=r.sent(),this.accumulatedGrads=t.map(function(s){return{originalName:s.name,variable:s.tensor.variable(!1)}}),[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}},e.fromConfig=function(t,r){return new t(r.learningRate,r.initialAccumulatorValue)},e.className="Adagrad",e}(Ao);Ro(IF);var kF=function(n){function e(t,r,s,o){o===void 0&&(o=null);var a=n.call(this)||this;return a.learningRate=t,a.beta1=r,a.beta2=s,a.epsilon=o,a.accumulatedFirstMoment=[],a.accumulatedSecondMoment=[],He(function(){a.accBeta1=ye(r).variable(),a.accBeta2=ye(s).variable()}),o==null&&(a.epsilon=H.backend.epsilon()),a}return xr(e,n),e.prototype.applyGradients=function(t){var r=this,s=Array.isArray(t)?t.map(function(o){return o.name}):Object.keys(t);He(function(){var o=hs(1,r.accBeta1),a=hs(1,r.accBeta2);s.forEach(function(i,u){var c=H.registeredVariables[i];r.accumulatedFirstMoment[u]==null&&(r.accumulatedFirstMoment[u]={originalName:i+"/m",variable:He(function(){return Ke(c).variable(!1)})}),r.accumulatedSecondMoment[u]==null&&(r.accumulatedSecondMoment[u]={originalName:i+"/v",variable:He(function(){return Ke(c).variable(!1)})});var l=Array.isArray(t)?t[u].tensor:t[i];if(l!=null){var h=r.accumulatedFirstMoment[u].variable,d=r.accumulatedSecondMoment[u].variable,p=h.mul(r.beta1).add(l.mul(1-r.beta1)),f=d.mul(r.beta2).add(l.square().mul(1-r.beta2)),m=p.div(o),g=f.div(a);h.assign(p),d.assign(f);var x=m.div(g.sqrt().add(r.epsilon)).mul(-r.learningRate).add(c);c.assign(x)}}),r.accBeta1.assign(r.accBeta1.mul(r.beta1)),r.accBeta2.assign(r.accBeta2.mul(r.beta2))}),this.incrementIterations()},e.prototype.dispose=function(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&_n(this.accumulatedFirstMoment.map(function(t){return t.variable})),this.accumulatedSecondMoment!=null&&_n(this.accumulatedSecondMoment.map(function(t){return t.variable}))},e.prototype.getWeights=function(){return Ie(this,void 0,void 0,function(){var t;return ke(this,function(r){switch(r.label){case 0:return t=this.accumulatedFirstMoment.concat(this.accumulatedSecondMoment),[4,this.saveIterations()];case 1:return[2,[r.sent()].concat(t.map(function(s){return{name:s.originalName,tensor:s.variable}}))]}})})},e.prototype.setWeights=function(t){return Ie(this,void 0,void 0,function(){var r,s=this;return ke(this,function(o){switch(o.label){case 0:return[4,this.extractIterations(t)];case 1:return t=o.sent(),He(function(){s.accBeta1.assign(Ri(s.beta1,s.iterations_+1)),s.accBeta2.assign(Ri(s.beta2,s.iterations_+1))}),r=t.length/2,this.accumulatedFirstMoment=t.slice(0,r).map(function(a){return{originalName:a.name,variable:a.tensor.variable(!1)}}),this.accumulatedSecondMoment=t.slice(r,2*r).map(function(a){return{originalName:a.name,variable:a.tensor.variable(!1)}}),[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}},e.fromConfig=function(t,r){return new t(r.learningRate,r.beta1,r.beta2,r.epsilon)},e.className="Adam",e}(Ao);Ro(kF);var SF=function(n){function e(t,r,s,o,a){o===void 0&&(o=null),a===void 0&&(a=0);var i=n.call(this)||this;return i.learningRate=t,i.beta1=r,i.beta2=s,i.epsilon=o,i.decay=a,i.accumulatedFirstMoment=[],i.accumulatedWeightedInfNorm=[],He(function(){i.iteration=ye(0).variable(),i.accBeta1=ye(r).variable()}),o==null&&(i.epsilon=H.backend.epsilon()),i}return xr(e,n),e.prototype.applyGradients=function(t){var r=this,s=Array.isArray(t)?t.map(function(o){return o.name}):Object.keys(t);He(function(){var o=hs(1,r.accBeta1),a=ds(-r.learningRate,r.iteration.mul(r.decay).add(1));s.forEach(function(i,u){var c=H.registeredVariables[i];r.accumulatedFirstMoment[u]==null&&(r.accumulatedFirstMoment[u]={originalName:i+"/m",variable:Ke(c).variable(!1)}),r.accumulatedWeightedInfNorm[u]==null&&(r.accumulatedWeightedInfNorm[u]={originalName:i+"/v",variable:Ke(c).variable(!1)});var l=Array.isArray(t)?t[u].tensor:t[i];if(l!=null){var h=r.accumulatedFirstMoment[u].variable,d=r.accumulatedWeightedInfNorm[u].variable,p=h.mul(r.beta1).add(l.mul(1-r.beta1)),f=d.mul(r.beta2),m=l.abs(),g=f.maximum(m);h.assign(p),d.assign(g);var x=a.div(o).mul(p.div(g.add(r.epsilon))).add(c);c.assign(x)}}),r.iteration.assign(r.iteration.add(1)),r.accBeta1.assign(r.accBeta1.mul(r.beta1))}),this.incrementIterations()},e.prototype.dispose=function(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&_n(this.accumulatedFirstMoment.map(function(t){return t.variable})),this.accumulatedWeightedInfNorm!=null&&_n(this.accumulatedWeightedInfNorm.map(function(t){return t.variable}))},e.prototype.getWeights=function(){return Ie(this,void 0,void 0,function(){return ke(this,function(t){throw new Error("getWeights() is not implemented for Adamax yet.")})})},e.prototype.setWeights=function(t){return Ie(this,void 0,void 0,function(){return ke(this,function(r){throw new Error("setWeights() is not implemented for Adamax yet.")})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}},e.fromConfig=function(t,r){return new t(r.learningRate,r.beta1,r.beta2,r.epsilon,r.decay)},e.className="Adamax",e}(Ao);Ro(SF);var d1=function(n){function e(t){var r=n.call(this)||this;return r.learningRate=t,r.setLearningRate(t),r}return xr(e,n),e.prototype.applyGradients=function(t){var r=this;(Array.isArray(t)?t.map(function(s){return s.name}):Object.keys(t)).forEach(function(s,o){var a=Array.isArray(t)?t[o].tensor:t[s];if(a!=null){var i=H.registeredVariables[s];He(function(){var u=r.c.mul(a).add(i);i.assign(u)})}}),this.incrementIterations()},e.prototype.setLearningRate=function(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=HE(ye(-t))},e.prototype.dispose=function(){this.c.dispose()},e.prototype.getWeights=function(){return Ie(this,void 0,void 0,function(){return ke(this,function(t){switch(t.label){case 0:return[4,this.saveIterations()];case 1:return[2,[t.sent()]]}})})},e.prototype.setWeights=function(t){return Ie(this,void 0,void 0,function(){return ke(this,function(r){switch(r.label){case 0:return[4,this.extractIterations(t)];case 1:if((t=r.sent()).length!==0)throw new Error("SGD optimizer does not have settable weights.");return[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate}},e.fromConfig=function(t,r){return new t(r.learningRate)},e.className="SGD",e}(Ao);Ro(d1);var NF=function(n){function e(t,r,s){s===void 0&&(s=!1);var o=n.call(this,t)||this;return o.learningRate=t,o.momentum=r,o.useNesterov=s,o.accumulations=[],o.m=ye(o.momentum),o}return xr(e,n),e.prototype.applyGradients=function(t){var r=this;(Array.isArray(t)?t.map(function(s){return s.name}):Object.keys(t)).forEach(function(s,o){var a=H.registeredVariables[s];r.accumulations[o]==null&&(r.accumulations[o]={originalName:s+"/momentum",variable:He(function(){return Ke(a).variable(!1)})});var i=r.accumulations[o].variable,u=Array.isArray(t)?t[o].tensor:t[s];u!=null&&He(function(){var c,l=r.m.mul(i).add(u);c=r.useNesterov?r.c.mul(u.add(l.mul(r.m))).add(a):r.c.mul(l).add(a),i.assign(l),a.assign(c)})}),this.incrementIterations()},e.prototype.dispose=function(){this.m.dispose(),this.accumulations!=null&&_n(this.accumulations.map(function(t){return t.variable}))},e.prototype.setMomentum=function(t){this.momentum=t},e.prototype.getWeights=function(){return Ie(this,void 0,void 0,function(){return ke(this,function(t){switch(t.label){case 0:return[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(this.accumulations.map(function(r){return{name:r.originalName,tensor:r.variable}}))]}})})},e.prototype.setWeights=function(t){return Ie(this,void 0,void 0,function(){return ke(this,function(r){switch(r.label){case 0:return[4,this.extractIterations(t)];case 1:return t=r.sent(),this.accumulations=t.map(function(s){return{originalName:s.name,variable:s.tensor.variable(!1)}}),[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}},e.fromConfig=function(t,r){return new t(r.learningRate,r.momentum,r.useNesterov)},e.className="Momentum",e}(d1);Ro(NF);var TF=function(n){function e(t,r,s,o,a){r===void 0&&(r=.9),s===void 0&&(s=0),o===void 0&&(o=null),a===void 0&&(a=!1);var i=n.call(this)||this;if(i.learningRate=t,i.decay=r,i.momentum=s,i.epsilon=o,i.accumulatedMeanSquares=[],i.accumulatedMoments=[],i.accumulatedMeanGrads=[],i.centered=a,o==null&&(i.epsilon=H.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.");return i}return xr(e,n),e.prototype.applyGradients=function(t){var r=this;(Array.isArray(t)?t.map(function(s){return s.name}):Object.keys(t)).forEach(function(s,o){var a=H.registeredVariables[s];r.accumulatedMeanSquares[o]==null&&(r.accumulatedMeanSquares[o]={originalName:s+"/rms",variable:He(function(){return Ke(a).variable(!1)})}),r.accumulatedMoments[o]==null&&(r.accumulatedMoments[o]={originalName:s+"/momentum",variable:He(function(){return Ke(a).variable(!1)})}),r.accumulatedMeanGrads[o]==null&&r.centered&&(r.accumulatedMeanGrads[o]={originalName:s+"/mg",variable:He(function(){return Ke(a).variable(!1)})});var i=Array.isArray(t)?t[o].tensor:t[s];if(i!=null){var u=r.accumulatedMeanSquares[o].variable,c=r.accumulatedMoments[o].variable;He(function(){var l=u.mul(r.decay).add(i.square().mul(1-r.decay));if(r.centered){var h=r.accumulatedMeanGrads[o].variable,d=h.mul(r.decay).add(i.mul(1-r.decay)),p=c.mul(r.momentum).add(i.mul(r.learningRate).div(l.sub(d.square().add(r.epsilon)).sqrt()));u.assign(l),h.assign(d),c.assign(p);var f=a.sub(p);a.assign(f)}else{var m=u.mul(r.decay).add(i.square().mul(1-r.decay));p=c.mul(r.momentum).add(i.mul(r.learningRate).div(m.add(r.epsilon).sqrt())),u.assign(m),c.assign(p),f=a.sub(p),a.assign(f)}})}}),this.incrementIterations()},e.prototype.dispose=function(){this.accumulatedMeanSquares!=null&&_n(this.accumulatedMeanSquares.map(function(t){return t.variable})),this.accumulatedMeanGrads!=null&&this.centered&&_n(this.accumulatedMeanGrads.map(function(t){return t.variable})),this.accumulatedMoments!=null&&_n(this.accumulatedMoments.map(function(t){return t.variable}))},e.prototype.getWeights=function(){return Ie(this,void 0,void 0,function(){var t;return ke(this,function(r){switch(r.label){case 0:return t=this.accumulatedMeanSquares.concat(this.accumulatedMoments),this.centered&&t.push.apply(t,this.accumulatedMeanGrads),[4,this.saveIterations()];case 1:return[2,[r.sent()].concat(t.map(function(s){return{name:s.originalName,tensor:s.variable}}))]}})})},e.prototype.setWeights=function(t){return Ie(this,void 0,void 0,function(){var r;return ke(this,function(s){switch(s.label){case 0:return[4,this.extractIterations(t)];case 1:return t=s.sent(),r=this.centered?t.length/3:t.length/2,this.accumulatedMeanSquares=t.slice(0,r).map(function(o){return{originalName:o.name,variable:o.tensor.variable(!1)}}),this.accumulatedMoments=t.slice(r,2*r).map(function(o){return{originalName:o.name,variable:o.tensor.variable(!1)}}),this.centered&&(this.accumulatedMeanGrads=t.slice(2*r,3*r).map(function(o){return{originalName:o.name,variable:o.tensor.variable(!1)}})),[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}},e.fromConfig=function(t,r){return new t(r.learningRate,r.decay,r.momentum,r.epsilon,r.centered)},e.className="RMSProp",e}(Ao);Ro(TF),typeof requestAnimationFrame<"u"||typeof setImmediate<"u"&&setImmediate,yt.prototype.add=function(n){return ls(this,n)},yt.prototype.broadcastTo=function(n){return Y0(this,n)},yt.prototype.div=function(n){return ds(this,n)},yt.prototype.divNoNan=function(n){return Zp(this,n)},yt.prototype.squaredDifference=function(n){return rf(this,n)},yt.prototype.tile=function(n){return To(this,n)},yt.prototype.oneHot=function(n,e,t){return e===void 0&&(e=1),t===void 0&&(t=0),_i(this,n,e,t)},yt.prototype.transpose=function(n){return sr(this,n)},yt.prototype.pad=function(n,e){return _s(this,n,e)},yt.prototype.batchNorm=function(n,e,t,r,s){return wa(this,n,e,t,r,s)},re=qD;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Cr,p1,Mf=function(){return(Mf=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var s in e=arguments[t])Object.prototype.hasOwnProperty.call(e,s)&&(n[s]=e[s]);return n}).apply(this,arguments)};function Ps(n,e,t,r){return new(t||(t=Promise))(function(s,o){function a(c){try{u(r.next(c))}catch(l){o(l)}}function i(c){try{u(r.throw(c))}catch(l){o(l)}}function u(c){c.done?s(c.value):new t(function(l){l(c.value)}).then(a,i)}u((r=r.apply(n,[])).next())})}function Bs(n,e){var t,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function i(u){return function(c){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(s=2&l[0]?r.return:l[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,l[1])).done)return s;switch(r=0,s&&(l=[2&l[0],s.value]),l[0]){case 0:case 1:s=l;break;case 4:return a.label++,{value:l[1],done:!1};case 5:a.label++,r=l[1],l=[0];continue;case 7:l=a.ops.pop(),a.trys.pop();continue;default:if(!(s=(s=a.trys).length>0&&s[s.length-1])&&(l[0]===6||l[0]===2)){a=0;continue}if(l[0]===3&&(!s||l[1]>s[0]&&l[1]<s[3])){a.label=l[1];break}if(l[0]===6&&a.label<s[1]){a.label=s[1],s=l;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(l);break}s[2]&&a.ops.pop(),a.trys.pop();continue}l=e.call(n,a)}catch(h){l=[6,h],r=0}finally{t=s=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(Cr||(Cr={})),function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))}(p1||(p1={}));var EF={};function f1(n){return EF[n]}function R(n,e,t,r){var s=e.inputParams[n];if(s&&s.inputIndexStart!==void 0){var o=s.inputIndexStart,a=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd;if(s.type==="tensor")return Sn(e.inputNames[s.inputIndexStart],t,r);if(s.type==="tensors")return e.inputNames.slice(o,a).map(function(c){return Sn(c,t,r)});var i=Array.prototype.slice.call(Sn(e.inputNames.slice(o)[0],t,r).dataSync());return s.type==="number"?i[0]:i}var u=e.attrParams[n];return u&&u.value}function Sn(n,e,t){var r=Xn(n),s=r[0],o=r[1],a=t.currentContextIds.find(function(i){return!!e[Tl(s,i)]});return a!==void 0?e[Tl(s,a)][o]:void 0}function RF(n,e,t){return e[Tl(n,t.currentContextId)]}function $a(n,e){var t=Xn(n),r=t[0],s=t[1];return[Tl(r,e&&e.currentContextId),s]}function Tl(n,e){return e?n+"-"+e:n}function Xn(n){var e=n.lastIndexOf(":");return e===-1?[n,0]:[n.substring(0,e),Number(n.substring(e+1))]}function Lf(n,e){for(var t=[],r=0;r<n.length;r+=e)t.push(n.slice(r,r+e));return t}var AF=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],$F=Object.freeze({json:AF}),DF=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],FF=Object.freeze({json:DF}),OF=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"}]}],_F=Object.freeze({json:OF}),MF=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]}],LF=Object.freeze({json:MF}),PF=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],BF=Object.freeze({json:PF}),zF=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],VF=Object.freeze({json:zF}),WF=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]}],UF=Object.freeze({json:WF}),GF=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],HF=Object.freeze({json:GF}),qF=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],jF=Object.freeze({json:qF}),KF=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],XF=Object.freeze({json:KF}),YF=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],QF=Object.freeze({json:YF}),JF=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],ZF=Object.freeze({json:JF}),eO=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]}],tO=Object.freeze({json:eO}),nO=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],rO=Object.freeze({json:nO}),sO=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],oO=Object.freeze({json:sO}),aO=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]}],iO=Object.freeze({json:aO}),uO=function(){function n(){var e=[$F,FF,_F,LF,BF,VF,UF,XF,jF,HF,QF,ZF,tO,rO,oO,iO],t=[].concat.apply([],e.map(function(r){return r.json}));this.opMappers=t.reduce(function(r,s){return r[s.tfOpName]=s,r},{})}return Object.defineProperty(n,"Instance",{get:function(){return this._instance||(this._instance=new this)},enumerable:!0,configurable:!0}),n.prototype.transformGraph=function(e,t){var r=this;t===void 0&&(t={});var s=[],o=[],a=e.node.reduce(function(d,p){return d[p.name]=r.mapNode(p),p.op.startsWith("Placeholder")&&s.push(d[p.name]),p.op==="Const"&&o.push(d[p.name]),d},{}),i=[],u=[],c={},l={};t!=null&&(c=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));var h=Object.keys(a);return h.forEach(function(d){var p=a[d];p.inputNames.forEach(function(f){var m=$a(f)[0];p.inputs.push(a[m]),a[m].children.push(p)})}),Object.keys(l).length===0?h.forEach(function(d){var p=a[d];p.children.length===0&&u.push(p)}):Object.keys(l).forEach(function(d){var p=$a(d)[0],f=a[p];f!=null&&(f.signatureKey=l[d],u.push(f))}),Object.keys(c).length>0?Object.keys(c).forEach(function(d){var p=$a(d)[0],f=a[p];f&&(f.signatureKey=c[d],i.push(f))}):i=s,{nodes:a,inputs:i,outputs:u,weights:o,placeholders:s,signature:t}},n.prototype.mapSignatureEntries=function(e){return Object.keys(e||{}).reduce(function(t,r){return t[e[r].name]=r,t},{})},n.prototype.mapNode=function(e){var t=f1(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});var r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(function(s){return s.startsWith("^")?s.substr(1):s}),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return t.inputs!=null&&(r.inputParams=t.inputs.reduce(function(s,o){return s[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},s},{})),t.attrs!=null&&(r.attrParams=t.attrs.reduce(function(s,o){var a=o.type,i=void 0;switch(o.type){case"string":(i=Pf(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=Pf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":(i=Hf(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=Hf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":(i=zf(e.attr,o.tfName,o.defaultValue||0))===void 0&&o.tfDeprecatedName&&(i=zf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":(i=Gf(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=Gf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":(i=Bf(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=Bf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":(i=jf(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=jf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":(i=Uf(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=Uf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":(i=qf(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=qf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":(i=Vf(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=Vf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":(i=Wf(e.attr,o.tfName,o.defaultValue))===void 0&&o.tfDeprecatedName&&(i=Wf(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: "+o.type+" for op: "+e.op)}return s[o.name]={value:i,type:a},s},{})),r},n}();function cO(n){var e=se().global;if(e.atob!==void 0)return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function m1(n,e){var t=Array.isArray(n)?String.fromCharCode.apply(null,n):cO(n);return e?t:t.toLowerCase()}function Pf(n,e,t,r){r===void 0&&(r=!1);var s=n[e];return s!=null?m1(s.s,r):t}function Bf(n,e,t){var r=n[e];return r?r.b:t}function zf(n,e,t){var r=n[e]||{},s=r.i!=null?r.i:r.f!=null?r.f:t;return typeof s=="number"?s:parseInt(s,10)}function g1(n){switch(typeof n=="string"&&(n=Cr[n]),n){case Cr.DT_FLOAT:return"float32";case Cr.DT_INT32:case Cr.DT_INT64:case Cr.DT_INT8:case Cr.DT_UINT8:return"int32";case Cr.DT_BOOL:return"bool";case Cr.DT_DOUBLE:return"float32";case Cr.DT_STRING:return"string";default:return null}}function Vf(n,e,t){var r=n[e];return r&&r.type?g1(r.type):t}function Wf(n,e,t){var r=n[e];return r&&r.list&&r.list.type?r.list.type.map(function(s){return g1(s)}):t}function x1(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(function(e){return typeof e.size=="number"?e.size:parseInt(e.size,10)}):[]}function Uf(n,e,t){var r=n[e];return r&&r.shape?x1(r.shape):t}function Gf(n,e,t){var r=n[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(function(s){return typeof s=="number"?s:parseInt(s,10)}):t}function Hf(n,e,t,r){r===void 0&&(r=!1);var s=n[e];return s&&s.list&&s.list.s?s.list.s.map(function(o){return m1(o,r)}):t}function qf(n,e,t){var r=n[e];return r&&r.list&&r.list.shape?r.list.shape.map(function(s){return x1(s)}):t}function jf(n,e,t){var r=n[e];return r&&r.list&&r.list.b?r.list.b:t}var lO=function(){function n(e,t,r){var s=this;this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(function(o){return s.getInput(o)}),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce(function(o,a){return o[a]=s.getAttr(a),o},{}))}return n.prototype.getInput=function(e){return Sn(e,this.tensorMap,this.context)},n.prototype.getAttr=function(e,t){var r=this.node.rawAttrs[e];if(r.tensor!=null)return Sn(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return zf(this.node.rawAttrs,e,t);if(r.s!=null)return Pf(this.node.rawAttrs,e,t);if(r.b!=null)return Bf(this.node.rawAttrs,e,t);if(r.shape!=null)return Uf(this.node.rawAttrs,e,t);if(r.type!=null)return Vf(this.node.rawAttrs,e,t);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return Gf(this.node.rawAttrs,e,t);if(r.list.s!=null)return Hf(this.node.rawAttrs,e,t);if(r.list.shape!=null)return qf(this.node.rawAttrs,e,t);if(r.list.b!=null)return jf(this.node.rawAttrs,e,t);if(r.list.type!=null)return Wf(this.node.rawAttrs,e,t)}return t},n}(),hO=function(n,e,t){switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[ls(R("a",n,e,t),R("b",n,e,t))];case"AddN":return[G0(R("tensors",n,e,t))];case"FloorMod":case"Mod":return[Jv(R("a",n,e,t),R("b",n,e,t))];case"Mul":return[$t(R("a",n,e,t),R("b",n,e,t))];case"RealDiv":case"Div":return[ds(R("a",n,e,t),R("b",n,e,t))];case"DivNoNan":return[Zp(R("a",n,e,t),R("b",n,e,t))];case"FloorDiv":return[Dp(R("a",n,e,t),R("b",n,e,t))];case"Sub":return[hs(R("a",n,e,t),R("b",n,e,t))];case"Minimum":return[Fp(R("a",n,e,t),R("b",n,e,t))];case"Maximum":return[ol(R("a",n,e,t),R("b",n,e,t))];case"Pow":return[Ri(R("a",n,e,t),R("b",n,e,t))];case"SquaredDifference":return[rf(R("a",n,e,t),R("b",n,e,t))];default:throw TypeError("Node type "+n.op+" is not implemented")}},dO=function(n,e,t){switch(n.op){case"Abs":case"ComplexAbs":return[kv(R("x",n,e,t))];case"Acos":return[Sv(R("x",n,e,t))];case"Acosh":return[Nv(R("x",n,e,t))];case"Asin":return[Tv(R("x",n,e,t))];case"Asinh":return[Ev(R("x",n,e,t))];case"Atan":return[Rv(R("x",n,e,t))];case"Atan2":return[Qv(R("x",n,e,t),R("y",n,e,t))];case"Atanh":return[Av(R("x",n,e,t))];case"Ceil":return[$v(R("x",n,e,t))];case"Complex":return[Yt(R("real",n,e,t),R("imag",n,e,t))];case"Cos":return[Fv(R("x",n,e,t))];case"Cosh":return[Ov(R("x",n,e,t))];case"Elu":return[hf(R("x",n,e,t))];case"Erf":return[_v(R("x",n,e,t))];case"Exp":return[Mv(R("x",n,e,t))];case"Expm1":return[Lv(R("x",n,e,t))];case"Floor":return[Pv(R("x",n,e,t))];case"Log":return[Bv(R("x",n,e,t))];case"Log1p":return[zv(R("x",n,e,t))];case"Imag":return[br(R("x",n,e,t))];case"Neg":return[sl(R("x",n,e,t))];case"Reciprocal":return[Vv(R("x",n,e,t))];case"Real":return[jn(R("x",n,e,t))];case"Relu":return[pf(R("x",n,e,t))];case"Round":return[Wv(R("x",n,e,t))];case"Selu":return[Fb(R("x",n,e,t))];case"Sigmoid":return[Uv(R("x",n,e,t))];case"Sin":return[Hv(R("x",n,e,t))];case"Sign":return[Gv(R("x",n,e,t))];case"Sinh":return[qv(R("x",n,e,t))];case"Softplus":return[jv(R("x",n,e,t))];case"Sqrt":return[Kv(R("x",n,e,t))];case"Square":return[nf(R("x",n,e,t))];case"Tanh":return[Yv(R("x",n,e,t))];case"Tan":return[Xv(R("x",n,e,t))];case"Relu6":case"ClipByValue":return[Dv(R("x",n,e,t),R("clipValueMin",n,e,t),R("clipValueMax",n,e,t))];case"Rsqrt":return[$p(Sn(n.inputNames[0],e,t))];case"Prod":return[lf(R("x",n,e,t),R("axes",n,e,t))];case"LeakyRelu":return[$b(R("x",n,e,t),R("alpha",n,e,t))];case"Prelu":return[df(R("x",n,e,t),R("alpha",n,e,t))];default:throw TypeError("Node type "+n.op+" is not implemented")}},pO=function(){function n(e,t,r,s,o,a,i){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=o,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.id=n.nextId++}return Object.defineProperty(n.prototype,"closed",{get:function(){return this.closed_},enumerable:!0,configurable:!0}),n.prototype.clearAndClose=function(){this.tensors.forEach(function(e){return e.tensor.dispose()}),this.tensors=[],this.closed_=!0},n.prototype.size=function(){return this.tensors.length},n.prototype.read=function(e){if(this.closed_)throw new Error("TensorArray "+this.name+" has already been closed.");if(e<0||e>=this.tensors.length)throw new Error("Tried to read from index "+e+", but array size is: "+this.tensors.length);var t=this.tensors[e];if(t.cleared)throw new Error("TensorArray "+this.name+": Could not read index "+e+" twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor},n.prototype.readMany=function(e){var t=this;return e.map(function(r){return t.read(r)})},n.prototype.write=function(e,t){if(this.closed_)throw new Error("TensorArray "+this.name+" has already been closed.");if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index "+e+", but array is not resizeable and size is: "+this.maxSize);var r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+`,
          because the value dtype is `+t.dtype+", but TensorArray dtype is "+this.dtype+".");if(this.size()!==0||this.elementShape!=null&&this.elementShape.length!==0||(this.elementShape=t.shape),this.assertShapesMatchAllowUndefinedSize(this.elementShape,t.shape,"TensorArray "+this.name+": Could not write to TensorArray index "+e+"."),r&&r.read)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+", because it has already been read.");if(r&&r.written)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+", because it has already been written.");r.tensor=t,r.written=!0,this.tensors[e]=r},n.prototype.writeMany=function(e,t){var r=this;if(e.length!==t.length)throw new Error("TensorArray "+this.name+": could not write multiple tensors,because the index size: "+e.length+" is not the same as tensors size: "+t.length+".");e.forEach(function(s,o){return r.write(s,t[o])})},n.prototype.gather=function(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but gather requested dtype "+t);if(!e){e=[];for(var r=0;r<this.size();r++)e.push(r)}if(e.length===0)return Qt([],[0].concat(this.elementShape));var s=this.readMany(e);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),cs(s,0)},n.prototype.concat=function(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but concat requested dtype "+e);if(this.size()===0)return Qt([],[0].concat(this.elementShape));for(var t=[],r=0;r<this.size();r++)t.push(r);var s=this.readMany(t);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,s[0].shape,"TensorArray shape mismatch: tensor array shape ("+this.elementShape+") vs first tensor shape ("+s[0].shape+")"),rr(s,0)},n.prototype.scatter=function(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but tensor has dtype "+t.dtype);if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: "+e.length+" vs. "+t.shape[0]);var r=Math.max.apply(Math,e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error("Max index must be < array size ("+r+"  vs. "+this.maxSize+")");this.writeMany(e,Ei(t,0))},n.prototype.split=function(e,t){var r=this;if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but tensor has dtype "+t.dtype);var s=0,o=e.map(function(l){return s+=l});if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        `+s+", and tensor's shape is: "+t.shape);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths ("+this.maxSize+" vs. "+e.length+"), and the TensorArray is not marked as dynamically resizeable");var a=s===0?0:t.size/s,i=[];He(function(){t=t.reshape([1,s,a]);for(var l=0;l<e.length;++l){var h=[0,l===0?0:o[l-1],0],d=[1,e[l],a];i[l]=Vr(t,h,d).reshape(r.elementShape)}return i});for(var u=[],c=0;c<e.length;c++)u[c]=c;this.writeMany(u,i)},n.prototype.assertShapesMatchAllowUndefinedSize=function(e,t,r){r===void 0&&(r=""),As.assert(this.shapesEqualAllowUndefinedSize(e,t),function(){return r+" Shapes "+e+" and "+t+" must match"})},n.prototype.shapesEqualAllowUndefinedSize=function(e,t){if(e.length!==t.length)return!1;for(var r=0;r<e.length;r++)if(e[r]!==-1&&t[r]!==-1&&e[r]!==t[r])return!1;return!0},n.nextId=0,n}(),fO=void 0,mO=function(n,e,t){return Ps(fO,void 0,void 0,function(){var r,s,o,a,i,u,c,l,h,d,p,f,m,g,x,y,b,v,w,C,T,S,k,N,I,E,F,O,D,M,P,L,z,W,j;return Bs(this,function(Y){switch(Y.label){case 0:switch(n.op){case"LoopCond":return[3,1];case"Switch":return[3,2];case"Merge":return[3,4];case"Enter":return[3,5];case"Exit":return[3,6];case"NextIteration":return[3,7];case"TensorArrayV3":return[3,8];case"TensorArrayWriteV3":return[3,9];case"TensorArrayReadV3":return[3,10];case"TensorArrayGatherV3":return[3,11];case"TensorArrayScatterV3":return[3,12];case"TensorArrayConcatV3":return[3,13];case"TensorArraySplitV3":return[3,14];case"TensorArraySizeV3":return[3,15];case"TensorArrayCloseV3":return[3,16]}return[3,17];case 1:return[2,[R("pred",n,e,t).clone()]];case 2:return r=R("pred",n,e,t),s=R("data",n,e,t),[4,r.data()];case 3:return[2,Y.sent()[0]?[void 0,s.clone()]:[s.clone(),void 0]];case 4:return[2,(o=n.inputNames.find(function(J){return Sn(J,e,t)!==void 0}))?[Sn(o,e,t).clone()]:void 0];case 5:return a=R("frameName",n,e,t),i=R("tensor",n,e,t),t.enterFrame(a),[2,[i.clone()]];case 6:return u=R("tensor",n,e,t),t.exitFrame(),[2,[u.clone()]];case 7:return c=R("tensor",n,e,t),t.nextIteration(),[2,[c.clone()]];case 8:return l=R("size",n,e,t),h=R("dtype",n,e,t),d=R("elementShape",n,e,t),p=R("dynamicSize",n,e,t),f=R("clearAfterRead",n,e,t),m=R("identicalElementShapes",n,e,t),g=R("name",n,e,t),x=new pO(g,h,l,d,m,p,f),t.addTensorArray(x),[2,[ye(x.id),ye(1)]];case 9:return y=R("tensorArrayId",n,e,t),b=R("index",n,e,t),v=R("tensor",n,e,t),t.getTensorArray(y).write(b,v),[2,[ye(1)]];case 10:return w=R("tensorArrayId",n,e,t),C=R("index",n,e,t),[2,[t.getTensorArray(w).read(C)]];case 11:return T=R("tensorArrayId",n,e,t),S=R("indices",n,e,t),k=R("dtype",n,e,t),[2,[t.getTensorArray(T).gather(S,k)]];case 12:return N=R("tensorArrayId",n,e,t),I=R("indices",n,e,t),E=R("tensor",n,e,t),t.getTensorArray(N).scatter(I,E),[2,[ye(1)]];case 13:return F=R("tensorArrayId",n,e,t),O=t.getTensorArray(F),D=R("dtype",n,e,t),[2,[O.concat(D)]];case 14:return M=R("tensorArrayId",n,e,t),P=R("tensor",n,e,t),L=R("lengths",n,e,t),t.getTensorArray(M).split(L,P),[2,[ye(1)]];case 15:return z=R("tensorArrayId",n,e,t),W=t.getTensorArray(z),[2,[ye(W.size(),"int32")]];case 16:return j=R("tensorArrayId",n,e,t),t.getTensorArray(j).clearAndClose(),[2,[ye(0)]];case 17:throw TypeError("Node type "+n.op+" is not implemented")}})})},gO=function(n,e,t){switch(n.op){case"Conv1D":var r=R("stride",n,e,t),s=R("pad",n,e,t),o=R("dataFormat",n,e,t).toUpperCase(),a=R("dilation",n,e,t);return[lb(R("x",n,e,t),R("filter",n,e,t),r,s,o,a)];case"Conv2D":r=R("strides",n,e,t),s=R("pad",n,e,t),o=R("dataFormat",n,e,t).toUpperCase();var i=R("dilations",n,e,t);return[Ca(R("x",n,e,t),R("filter",n,e,t),[r[1],r[2]],s,o,[i[1],i[2]])];case"_FusedConv2D":case"FusedDepthwiseConv2dNative":var u=R("fusedOps",n,e,t),c=u[0],l=u[1],h=c==="biasadd",d=l==="prelu",p=c==="fusedbatchnorm",f=R("numArgs",n,e,t);if(h){if(d&&f!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!d&&f!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(p)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");r=R("strides",n,e,t),s=R("pad",n,e,t),o=R("dataFormat",n,e,t).toUpperCase(),i=R("dilations",n,e,t);var m=R("args",n,e,t),g=m[0],x=m[1];return[(n.op==="_FusedConv2D"?kl.conv2d:kl.depthwiseConv2d)({x:R("x",n,e,t),filter:R("filter",n,e,t),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:g,activation:l,preluActivationWeights:x})];case"Conv2DBackpropInput":case"Conv2dTranspose":var y=R("outputShape",n,e,t);return r=R("strides",n,e,t),s=R("pad",n,e,t),[mb(R("x",n,e,t),R("filter",n,e,t),y,[r[1],r[2]],s)];case"DepthwiseConv2dNative":case"DepthwiseConv2d":return r=R("strides",n,e,t),s=R("pad",n,e,t),i=R("dilations",n,e,t),o=R("dataFormat",n,e,t).toUpperCase(),[bl(R("input",n,e,t),R("filter",n,e,t),[r[1],r[2]],s,o,[i[1],i[2]])];case"Conv3D":return r=R("strides",n,e,t),s=R("pad",n,e,t),o=R("dataFormat",n,e,t).toUpperCase(),i=R("dilations",n,e,t),[hb(R("x",n,e,t),R("filter",n,e,t),[r[1],r[2],r[3]],s,o,[i[1],i[2],i[3]])];case"AvgPool":r=R("strides",n,e,t),s=R("pad",n,e,t);var b=R("kernelSize",n,e,t);return[vb(R("x",n,e,t),[b[1],b[2]],[r[1],r[2]],s)];case"MaxPool":return r=R("strides",n,e,t),s=R("pad",n,e,t),b=R("kernelSize",n,e,t),[yb(R("x",n,e,t),[b[1],b[2]],[r[1],r[2]],s)];case"MaxPoolWithArgmax":r=R("strides",n,e,t),s=R("pad",n,e,t),b=R("kernelSize",n,e,t);var v=R("includeBatchInIndex",n,e,t),w=Cb(R("x",n,e,t),[b[1],b[2]],[r[1],r[2]],s,v);return[w.result,w.indexes];case"AvgPool3D":return r=R("strides",n,e,t),s=R("pad",n,e,t),b=R("kernelSize",n,e,t),[wb(R("x",n,e,t),[b[1],b[2],b[3]],[r[1],r[2],r[3]],s)];case"MaxPool3D":return r=R("strides",n,e,t),s=R("pad",n,e,t),b=R("kernelSize",n,e,t),[bb(R("x",n,e,t),[b[1],b[2],b[3]],[r[1],r[2],r[3]],s)];default:throw TypeError("Node type "+n.op+" is not implemented")}},xO=function(n,e,t){switch(n.op){case"Fill":var r=R("shape",n,e,t),s=R("dtype",n,e,t),o=R("value",n,e,t);return[Qc(r,o,s)];case"LinSpace":var a=R("start",n,e,t),i=R("stop",n,e,t),u=R("num",n,e,t);return[dv(a,i,u)];case"Multinomial":var c=R("logits",n,e,t),l=R("numSamples",n,e,t),h=R("seed",n,e,t);return[Z0(c,l,h)];case"OneHot":var d=R("indices",n,e,t),p=R("depth",n,e,t),f=R("onValue",n,e,t),m=R("offValue",n,e,t);return[_i(d,p,f,m)];case"Ones":return[bo(R("shape",n,e,t),R("dtype",n,e,t))];case"OnesLike":return[Tp(R("x",n,e,t))];case"RandomUniform":return[tf(R("shape",n,e,t),R("minval",n,e,t),R("maxval",n,e,t),R("dtype",n,e,t))];case"Range":a=R("start",n,e,t);var g=R("stop",n,e,t),x=R("step",n,e,t);return[Ti(a,g,x,R("dtype",n,e,t))];case"TruncatedNormal":r=R("shape",n,e,t);var y=R("mean",n,e,t),b=R("stdDev",n,e,t);return h=R("seed",n,e,t),[eb(r,y,b,R("dtype",n,e,t),h)];case"Zeros":return[bt(R("shape",n,e,t),R("dtype",n,e,t))];case"ZerosLike":return[Ke(R("x",n,e,t))];default:throw TypeError("Node type "+n.op+" is not implemented")}},yO=void 0,vO=function(n,e,t){return Ps(yO,void 0,void 0,function(){var r,s,o,a,i,u,c,l;return Bs(this,function(h){switch(h.label){case 0:switch(n.op){case"NonMaxSuppressionV5":case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":return[3,1];case"Where":return[3,5];case"ListDiff":return[3,7]}return[3,8];case 1:return r=R("boxes",n,e,t),s=R("scores",n,e,t),o=R("maxOutputSize",n,e,t),a=R("iouThreshold",n,e,t),i=R("scoreThreshold",n,e,t),n.op!=="NonMaxSuppressionV5"?[3,3]:(u=R("softNmsSigma",n,e,t),[4,ka.nonMaxSuppressionWithScoreAsync(r,s,o,a,i,u)]);case 2:return[2,[(l=h.sent()).selectedIndices,l.selectedScores]];case 3:return[4,ka.nonMaxSuppressionAsync(r,s,o,a,i)];case 4:return[2,[h.sent()]];case 5:return c=R("condition",n,e,t).asType("bool"),[4,Jp(c)];case 6:return l=[h.sent()],c.dispose(),[2,l];case 7:return[2,mv(R("x",n,e,t),R("y",n,e,t))];case 8:throw TypeError("Node type "+n.op+" is not implemented")}})})},bO=function(n,e,t){switch(n.op){case"TopKV2":var r=R("x",n,e,t),s=R("k",n,e,t),o=R("sorted",n,e,t),a=Lb(r,s,o);return[a.values,a.indices];default:throw TypeError("Node type "+n.op+" is not implemented")}},wO=function(n,e,t){switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":var r=R("default",n,e,t);return[Sn(n.name,e,t)||r];case"Placeholder":return[Sn(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[R("x",n,e,t).clone()];case"IdentityN":return R("x",n,e,t).map(function(c){return c.clone()});case"Snapshot":return[R("x",n,e,t).clone()];case"Shape":return[is(R("x",n,e,t).shape,"int32")];case"ShapeN":return R("x",n,e,t).map(function(c){return is(c.shape)});case"Size":return[ye(R("x",n,e,t).size,"int32")];case"Rank":return[ye(R("x",n,e,t).rank,"int32")];case"NoOp":return[ye(1)];case"Print":var s=R("x",n,e,t),o=R("data",n,e,t),a=R("message",n,e,t),i=R("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(a);for(var u=0;u<o.length;u++)console.log(Array.prototype.slice.call(o[u].dataSync()).slice(0,i));return[s];default:throw TypeError("Node type "+n.op+" is not implemented")}},CO=function(n,e,t){switch(n.op){case"ResizeBilinear":var r=R("images",n,e,t),s=R("size",n,e,t),o=R("alignCorners",n,e,t);return[ka.resizeBilinear(r,[s[0],s[1]],o)];case"ResizeNearestNeighbor":return r=R("images",n,e,t),s=R("size",n,e,t),o=R("alignCorners",n,e,t),[ka.resizeNearestNeighbor(r,[s[0],s[1]],o)];case"CropAndResize":var a=R("image",n,e,t),i=R("boxes",n,e,t),u=R("boxInd",n,e,t),c=R("cropSize",n,e,t),l=R("method",n,e,t),h=R("extrapolationValue",n,e,t);return[ka.cropAndResize(a,i,u,c,l,h)];default:throw TypeError("Node type "+n.op+" is not implemented")}},IO=function(n,e,t){switch(n.op){case"Equal":return[sf(R("a",n,e,t),R("b",n,e,t))];case"NotEqual":return[sb(R("a",n,e,t),R("b",n,e,t))];case"Greater":return[tb(R("a",n,e,t),R("b",n,e,t))];case"GreaterEqual":return[of(R("a",n,e,t),R("b",n,e,t))];case"Less":return[nb(R("a",n,e,t),R("b",n,e,t))];case"LessEqual":return[rb(R("a",n,e,t),R("b",n,e,t))];case"LogicalAnd":return[Oi(R("a",n,e,t),R("b",n,e,t))];case"LogicalNot":return[Q0(R("a",n,e,t))];case"LogicalOr":return[Qp(R("a",n,e,t),R("b",n,e,t))];case"Select":case"SelectV2":return[Os(R("condition",n,e,t),R("a",n,e,t),R("b",n,e,t))];default:throw TypeError("Node type "+n.op+" is not implemented")}},kO=function(n,e,t){switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[cf(R("a",n,e,t),R("b",n,e,t),R("transposeA",n,e,t),R("transposeB",n,e,t))];case"Transpose":return[sr(R("x",n,e,t),R("perm",n,e,t))];case"_FusedMatMul":var r=R("fusedOps",n,e,t),s=r[0],o=r[1],a=s==="biasadd",i=o==="prelu",u=R("numArgs",n,e,t);if(a){if(i&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}var c=R("args",n,e,t),l=c[0],h=c[1];return[kl.matMul({a:R("a",n,e,t),b:R("b",n,e,t),transposeA:R("transposeA",n,e,t),transposeB:R("transposeB",n,e,t),bias:l,activation:o,preluActivationWeights:h})];default:throw TypeError("Node type "+n.op+" is not implemented")}},SO=function(n,e,t){switch(n.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[wa(R("x",n,e,t),R("mean",n,e,t),R("variance",n,e,t),R("offset",n,e,t),R("scale",n,e,t),R("epsilon",n,e,t))];case"LRN":return[Ob(R("x",n,e,t),R("radius",n,e,t),R("bias",n,e,t),R("alpha",n,e,t),R("beta",n,e,t))];case"Softmax":return[ul(R("x",n,e,t))];case"LogSoftmax":return[s0(R("x",n,e,t))];case"SparseToDense":return[mf(R("sparseIndices",n,e,t),R("outputShape",n,e,t),R("sparseValues",n,e,t),R("defaultValue",n,e,t))];default:throw TypeError("Node type "+n.op+" is not implemented")}},NO=function(n,e,t){switch(n.op){case"Max":var r=R("axis",n,e,t),s=R("keepDims",n,e,t);return[Eb(R("x",n,e,t),r,s)];case"Mean":return r=R("axis",n,e,t),s=R("keepDims",n,e,t),[Rb(R("x",n,e,t),r,s)];case"Min":return r=R("axis",n,e,t),s=R("keepDims",n,e,t),[Ab(R("x",n,e,t),r,s)];case"Sum":return r=R("axis",n,e,t),s=R("keepDims",n,e,t),[ps(R("x",n,e,t),r,s)];case"All":return r=R("axis",n,e,t),s=R("keepDims",n,e,t),[kb(R("x",n,e,t),r,s)];case"Any":return r=R("axis",n,e,t),s=R("keepDims",n,e,t),[Sb(R("x",n,e,t),r,s)];case"ArgMax":return r=R("axis",n,e,t),[Nb(R("x",n,e,t),r)];case"ArgMin":return r=R("axis",n,e,t),[Tb(R("x",n,e,t),r)];case"Prod":return r=R("axis",n,e,t),s=R("keepDims",n,e,t),[lf(R("x",n,e,t),r,s)];default:throw TypeError("Node type "+n.op+" is not implemented")}},TO=function(n,e,t){switch(n.op){case"ConcatV2":case"Concat":var r=R("n",n,e,t),s=R("axis",n,e,t),o=R("tensors",n,e,t);return o=o.slice(0,r),[rr(o,s)];case"GatherV2":case"Gather":s=R("axis",n,e,t);var a=R("x",n,e,t),i=R("indices",n,e,t);return[vl(a,i.asType("int32"),s)];case"ReverseV2":case"Reverse":return s=R("axis",n,e,t),a=R("x",n,e,t),[Ia(a,s)];case"Slice":var u=R("begin",n,e,t),c=R("size",n,e,t);return[Vr(R("x",n,e,t),u,c)];case"StridedSlice":u=R("begin",n,e,t);var l=R("end",n,e,t),h=R("strides",n,e,t),d=R("beginMask",n,e,t),p=R("endMask",n,e,t),f=R("ellipsisMask",n,e,t),m=R("newAxisMask",n,e,t),g=R("shrinkAxisMask",n,e,t),x=R("x",n,e,t);if(u.length===1&&x.shape.length>1)for(var y=1;y<x.shape.length;y++)u.push(0),l.push(x.shape[y]),h.push(h[0]);return[Mb(x,u,l,h,d,p,f,m,g)];case"Pack":return He(function(){var N=R("axis",n,e,t),I=R("tensors",n,e,t),E=I[0].shape,F=I[0].squeeze().shape,O=I.map(function(D){var M=As.arraysEqual(D.shape,E);if(!M&&!As.arraysEqual(D.squeeze().shape,F))throw new Error("the input tensors shape does not match");return M?D:D.reshape(E)});return[cs(O,N)]});case"Unpack":return He(function(){var N=R("axis",n,e,t),I=R("tensor",n,e,t);return Ei(I,N)});case"Tile":var b=R("reps",n,e,t);return[To(R("x",n,e,t),b)];case"Split":case"SplitV":s=R("axis",n,e,t);var v=R("numOrSizeSplits",n,e,t);return Jc(R("x",n,e,t),v,s);case"ScatterNd":i=R("indices",n,e,t);var w=R("values",n,e,t),C=R("shape",n,e,t);return[Pb(i,w,C)];case"GatherNd":var T=R("x",n,e,t);return i=R("indices",n,e,t),[Bb(T,i)];case"SparseToDense":i=R("sparseIndices",n,e,t),C=R("outputShape",n,e,t);var S=R("sparseValues",n,e,t),k=R("defaultValue",n,e,t);return[mf(i,S,C,S.dtype===k.dtype?k:k.asType(S.dtype))];default:throw TypeError("Node type "+n.op+" is not implemented")}},EO=function(n,e,t){switch(n.op){case"FFT":return[wl(R("x",n,e,t))];case"IFFT":return[Mi(R("x",n,e,t))];case"RFFT":return[Cl(R("x",n,e,t))];case"IRFFT":return[ff(R("x",n,e,t))];default:throw TypeError("Node type "+n.op+" is not implemented")}},RO=function(n,e,t){switch(n.op){case"Cast":return[pv(R("x",n,e,t),R("dtype",n,e,t))];case"ExpandDims":var r=R("axis",n,e,t);return[us(R("x",n,e,t),r)];case"Squeeze":return r=R("axis",n,e,t),[Ap(R("x",n,e,t),r)];case"Reshape":return[Br(R("x",n,e,t),R("shape",n,e,t))];case"PadV2":case"Pad":return[_s(R("x",n,e,t),Lf(R("padding",n,e,t),2),R("constantValue",n,e,t))];case"SpaceToBatchND":var s=R("blockShape",n,e,t),o=Lf(R("paddings",n,e,t),2);return[Rp(R("x",n,e,t),s,o)];case"BatchToSpaceND":s=R("blockShape",n,e,t);var a=Lf(R("crops",n,e,t),2);return[Ep(R("x",n,e,t),s,a)];case"DepthToSpace":var i=R("blockSize",n,e,t),u=R("dataFormat",n,e,t).toUpperCase();return[fv(R("x",n,e,t),i,u)];default:throw TypeError("Node type "+n.op+" is not implemented")}};function y1(n,e,t){var r=function(s,o,a){switch(s.category){case"arithmetic":return He(function(){return hO(s,o,a)});case"basic_math":return He(function(){return dO(s,o,a)});case"control":return mO(s,o,a);case"convolution":return He(function(){return gO(s,o,a)});case"creation":return He(function(){return xO(s,o,a)});case"dynamic":return vO(s,o,a);case"evaluation":return He(function(){return bO(s,o,a)});case"image":return He(function(){return CO(s,o,a)});case"graph":return He(function(){return wO(s,o,a)});case"logical":return He(function(){return IO(s,o,a)});case"matrices":return He(function(){return kO(s,o,a)});case"normalization":return He(function(){return SO(s,o,a)});case"reduction":return He(function(){return NO(s,o,a)});case"slice_join":return He(function(){return TO(s,o,a)});case"spectral":return He(function(){return EO(s,o,a)});case"transformation":return He(function(){return RO(s,o,a)});case"custom":var i=f1(s.op);if(i&&i.customExecutor)return i.customExecutor(new lO(s,o,a));throw TypeError("Custom op "+s.op+" is not registered.");default:throw TypeError("Unknown op '"+s.op+"'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}}(n,e,t);return r instanceof Promise?r.then(function(s){return[].concat(s)}):[].concat(r)}var v1=function(){function n(e,t){this.weightMap=e,this.tensorArrayMap=t,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}return n.prototype.newFrame=function(e,t){return{id:e,frameName:t,iterationId:0}},Object.defineProperty(n.prototype,"currentContext",{get:function(){return this.contexts},set:function(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"currentContextId",{get:function(){return this._currentContextIds[0]},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"currentContextIds",{get:function(){return this._currentContextIds},enumerable:!0,configurable:!0}),n.prototype.generateCurrentContextIds=function(){for(var e=[],t=0;t<this.contexts.length-1;t++){var r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e},n.prototype.contextIdforContexts=function(e){return e?e.map(function(t){return t.id===0&&t.iterationId===0?"":t.frameName+"-"+t.iterationId}).join("/"):""},n.prototype.enterFrame=function(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))},n.prototype.exitFrame=function(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()},n.prototype.nextIteration=function(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");this.contexts=this.contexts.slice(),this.lastId++;var e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))},n.prototype.getWeight=function(e){return this.weightMap[e]},n.prototype.addTensorArray=function(e){this.tensorArrayMap[e.id]=e},n.prototype.getTensorArray=function(e){return this.tensorArrayMap[e]},n}();function b1(n,e,t){for(var r=new Set,s=[],o=null,a=null,i=new Set,u=Object.keys(n).map(function(h){return Xn(h)[0]}),c=e.slice();c.length>0;){var l=c.pop();(w1(l)||FO(l))&&o==null&&(a=(o=l).children.map(function(h){return h.name}).filter(function(h){return r.has(h)})),r.add(l.name),t[l.name]==null&&u.indexOf(l.name)===-1&&(l.inputs.length!==0?l.inputs.forEach(function(h){i.has(h.name)||(i.add(h.name),c.push(h))}):s.push(l.name))}return{inputs:n,outputs:e,usedNodes:r,missingInputs:s,dynamicNode:o,syncInputs:a}}function AO(n,e,t){var r=t.usedNodes,s=t.inputs,o=[];Object.keys(s).map(function(c){return Xn(c)[0]}).map(function(c){return n.nodes[c]}).forEach(function(c){r.has(c.name)&&o.push(c)}),n.weights.forEach(function(c){r.has(c.name)&&o.push(c)});for(var a=new Set,i=[];o.length>0;){var u=o.pop();a.add(u.name),e[u.name]||i.push(u),u.children.forEach(function(c){!a.has(c.name)&&r.has(c.name)&&c.inputs.every(function(l){return a.has(l.name)})&&o.push(c)})}return i}var $O=["Switch","Merge","Enter","Exit","NextIteration"],DO=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"];function w1(n){return $O.indexOf(n.op)>=0}function FO(n){return DO.indexOf(n.op)>=0}var OO=function(){function n(e){this.graph=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._outputs=e.outputs,this._inputs=e.inputs,this._signature=e.signature}return Object.defineProperty(n.prototype,"weightMap",{get:function(){return this._weightMap},set:function(e){var t=Object.keys(e).map(function(r){return e[r].map(function(s){return s.id})});this.weightIds=[].concat.apply([],t),this._weightMap=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"inputs",{get:function(){return this._inputs.map(function(e){return{name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}})},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"outputs",{get:function(){return this._outputs.map(function(e){return{name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}})},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"inputNodes",{get:function(){return this._inputs.map(function(e){return e.signatureKey||e.name})},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"outputNodes",{get:function(){return this._outputs.map(function(e){return e.signatureKey||e.name})},enumerable:!0,configurable:!0}),n.prototype.getCompilationKey=function(e,t){var r=e.map(function(o){return o.name}).sort(),s=t.map(function(o){return o.name}).sort();return r.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)},n.prototype.compile=function(e,t){var r=b1(e,t,this.weightMap),s=r.missingInputs,o=r.dynamicNode,a=r.syncInputs;if(o!=null)throw new Error("This execution contains the node '"+o.name+"', which has the dynamic op '"+o.op+"'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs ["+a+"]");if(s.length>0){var i=t.map(function(c){return c.name}),u=Object.keys(e);throw new Error("Cannot compute the outputs ["+i+"] from the provided inputs ["+u+"]. Missing the following inputs: ["+s+"]")}return AO(this.graph,this.weightMap,r)},n.prototype.execute=function(e,t){var r=this;e=this.mapInputs(e);var s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);var o=s.map(function(l){return r.graph.nodes[Xn(l)[0]]}),a=t.map(function(l){return r.graph.nodes[Xn(l)[0]]}),i=this.getCompilationKey(o,a),u=this.compiledMap.get(i);u==null&&(u=this.compile(e,a),this.compiledMap.set(i,u));var c={};return He(function(){var l=new v1(r._weightMap,c),h=Mf({},r.weightMap);Object.keys(e).forEach(function(x){var y=Xn(x),b=y[0],v=[];v[y[1]]=e[x],h[b]=v});for(var d=r.getFrozenTensorIds(h),p={},f=0;f<u.length;f++){var m=u[f];if(!h[m.name]){var g=y1(m,h,l);if(g instanceof Promise)throw new Error("The execution of the op '"+m.op+"' returned a promise. Please use model.executeAsync() instead.");h[m.name]=g,r.checkTensorForDisposal(m.name,m,h,l,d,t,p)}}return t.map(function(x){return Sn(x,h,l)})})},n.prototype.getFrozenTensorIds=function(e){var t=[].concat.apply([],Object.keys(e).map(function(r){return e[r]}).map(function(r){return r.map(function(s){return s.id})}));return new Set(t)},n.prototype.checkTensorForDisposal=function(e,t,r,s,o,a,i){t.category!=="control"&&a.indexOf(e)===-1&&(r[e].forEach(function(u){u!=null&&(i[u.id]=(i[u.id]||0)+t.children.length)}),t.inputs.forEach(function(u){if(u.category!=="control"){var c=RF(u.name,r,s);c!=null&&c.forEach(function(l){if(l&&!o.has(l.id)){var h=i[l.id];h===1?(l.dispose(),delete i[l.id]):h!=null&&i[l.id]--}})}}))},n.prototype.executeAsync=function(e,t){return Ps(this,void 0,void 0,function(){var r,s,o,a,i,u,c=this;return Bs(this,function(l){switch(l.label){case 0:return e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t),r={},s=new v1(this._weightMap,r),[4,this.executeWithControlFlow(e,s,t)];case 1:return o=l.sent(),a=t.map(function(h){return Sn(h,o,s)}),i=new Set(a.map(function(h){return h.id})),u=new Set(Object.keys(e).map(function(h){return e[h].id})),Object.keys(o).forEach(function(h){o[h].forEach(function(d){!d||d.isDisposed||i.has(d.id)||u.has(d.id)||c.weightIds.indexOf(d.id)!==-1||d.dispose()})}),[2,a]}})})},n.prototype.executeWithControlFlow=function(e,t,r){return Ps(this,void 0,void 0,function(){var s,o,a,i,u,c,l,h,d,p,f,m,g,x,y,b,v=this;return Bs(this,function(w){switch(w.label){case 0:s=Object.keys(e),o=s.map(function(C){return v.graph.nodes[Xn(C)[0]]}),a=r.map(function(C){return v.graph.nodes[Xn(C)[0]]}),i=b1(e,a,this.weightMap),u=i.usedNodes,c=i.missingInputs,l=i.dynamicNode,h=i.syncInputs,d=o.concat(this.graph.weights).map(function(C){return{node:C,contexts:t.currentContext}}),p=Mf({},this.weightMap),Object.keys(e).forEach(function(C){var T=Xn(C),S=T[0],k=[];k[T[1]]=e[C],p[S]=k}),f={},m=this.getFrozenTensorIds(p),g={},w.label=1;case 1:return d.length>0?(x=this.processStack(o,d,t,p,g,m,r,f,u),[4,Promise.all(x)]):[3,3];case 2:return w.sent(),[3,1];case 3:if(l==null&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead."),(y=a.filter(function(C){return!w1(C)&&!Sn(C.name,p,t)}).map(function(C){return C.name})).length>0)throw b="",l!=null&&(b="Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs ["+h+"]"),new Error("Cannot compute the outputs ["+y+"] from the provided inputs ["+s+"]. Consider providing the following inputs: ["+c+"]. "+b);return[2,p]}})})},n.prototype.processStack=function(e,t,r,s,o,a,i,u,c){for(var l=this,h=[],d=function(){var f=t.pop();r.currentContext=f.contexts;var m="";if(f.node.op==="Enter"&&R("isConstant",f.node,s,r)&&(m=$a(f.node.name,r)[0]),e.indexOf(f.node)===-1){var g=y1(f.node,s,r);m||(m=$a(f.node.name,r)[0]);var x=r.currentContext;g instanceof Promise?h.push(g.then(function(y){return s[m]=y,r.currentContext=x,l.checkTensorForDisposal(m,f.node,s,r,a,i,u),l.processChildNodes(f.node,t,r,s,o,c),y})):(s[m]=g,p.checkTensorForDisposal(m,f.node,s,r,a,i,u),p.processChildNodes(f.node,t,r,s,o,c))}else p.processChildNodes(f.node,t,r,s,o,c)},p=this;t.length>0;)d();return h},n.prototype.processChildNodes=function(e,t,r,s,o,a){e.children.forEach(function(i){var u=$a(i.name,r)[0];!o[u]&&a.has(i.name)&&(i.op==="Merge"?i.inputNames.some(function(c){return!!Sn(c,s,r)})&&(o[u]=!0,t.push({contexts:r.currentContext,node:i})):i.inputNames.every(function(c){return!!Sn(c,s,r)})&&(o[u]=!0,t.push({contexts:r.currentContext,node:i})))})},n.prototype.dispose=function(){var e=this;Object.keys(this.weightMap).forEach(function(t){return e.weightMap[t].forEach(function(r){return r.dispose()})})},n.prototype.checkInputShapeAndType=function(e){var t=this;Object.keys(e).forEach(function(r){var s=e[r],o=Xn(r)[0],a=t.graph.nodes[o];if(a.attrParams.shape&&a.attrParams.shape.value){var i=a.attrParams.shape.value,u=i.length===s.shape.length&&s.shape.every(function(c,l){return i[l]===-1||i[l]===c});As.assert(u,function(){return"The shape of dict['"+a.name+"'] provided in model.execute(dict) must be ["+i+"], but was ["+s.shape+"]"})}a.attrParams.dtype&&a.attrParams.dtype.value&&As.assert(s.dtype===a.attrParams.dtype.value,function(){return"The dtype of dict['"+a.name+"'] provided in model.execute(dict) must be "+a.attrParams.dtype.value+", but was "+s.dtype})})},n.prototype.mapInputs=function(e){var t={};for(var r in e)this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[r]!=null?t[this._signature.inputs[r].name]=e[r]:t[r]=e[r];return t},n.prototype.checkInputs=function(e){var t=this,r=Object.keys(e).filter(function(s){var o=Xn(s)[0];return t.graph.nodes[o]==null});if(r.length>0)throw new Error("The dict provided in model.execute(dict) has keys: ["+r+"] that are not part of graph")},n.prototype.mapOutputs=function(e){var t=this;return e.map(function(r){return t._signature!=null&&t._signature.outputs!=null&&t._signature.outputs[r]!=null?t._signature.outputs[r].name:r},{})},n.prototype.checkOutputs=function(e){var t=this;e.forEach(function(r){var s=Xn(r)[0];if(!t.graph.nodes[s])throw new Error("The output '"+r+"' is not found in the graph")})},n}(),_O="?tfjs-format=file",MO="model.json",LO=function(){function n(e,t){t===void 0&&(t={}),this.modelUrl=e,this.loadOptions=t,this.version="n/a",t==null&&(this.loadOptions={})}return Object.defineProperty(n.prototype,"modelVersion",{get:function(){return this.version},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"inputNodes",{get:function(){return this.executor.inputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"outputNodes",{get:function(){return this.executor.outputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"inputs",{get:function(){return this.executor.inputs},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"outputs",{get:function(){return this.executor.outputs},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"weights",{get:function(){return this.executor.weightMap},enumerable:!0,configurable:!0}),n.prototype.findIOHandler=function(){var e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=Pi.browserHTTPRequest(e,this.loadOptions);else{var t=Pi.getLoadHandlers(e,this.loadOptions.onProgress);if(t.length===0)t.push(Pi.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one ("+t.length+") load handlers for URL '"+[e]+"'");this.handler=t[0]}},n.prototype.load=function(){return Ps(this,void 0,void 0,function(){var e,t,r,s;return Bs(this,function(o){switch(o.label){case 0:if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");return e=this,[4,this.handler.load()];case 1:return e.artifacts=o.sent(),t=this.artifacts.modelTopology,r={},this.artifacts.userDefinedMetadata!=null&&(r=this.artifacts.userDefinedMetadata.signature),this.version=t.versions.producer+"."+t.versions.minConsumer,s=Pi.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs),this.executor=new OO(uO.Instance.transformGraph(t,r)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),[2,!0]}})})},n.prototype.save=function(e,t){return Ps(this,void 0,void 0,function(){var r;return Bs(this,function(s){if(typeof e=="string"){if((r=Pi.getSaveHandlers(e)).length===0)throw new Error("Cannot find any save handlers for URL '"+e+"'");if(r.length>1)throw new Error("Found more than one ("+r.length+") save handlers for URL '"+e+"'");e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return[2,e.save(this.artifacts)]})})},n.prototype.predict=function(e,t){return this.execute(e,this.outputNodes)},n.prototype.normalizeInputs=function(e){if(!(e instanceof yt||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error("Input tensor count mismatch,the graph model has "+this.inputNodes.length+" placeholders, while there are "+e.length+" input tensors.");return this.inputNodes.reduce(function(t,r,s){return t[r]=e[s],t},{})},n.prototype.normalizeOutputs=function(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]},n.prototype.execute=function(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);var r=this.executor.execute(e,t);return r.length>1?r:r[0]},n.prototype.executeAsync=function(e,t){return Ps(this,void 0,void 0,function(){var r;return Bs(this,function(s){switch(s.label){case 0:return e=this.normalizeInputs(e),t=this.normalizeOutputs(t),[4,this.executor.executeAsync(e,t)];case 1:return[2,(r=s.sent()).length>1?r:r[0]]}})})},n.prototype.convertTensorMapToTensorsMap=function(e){return Object.keys(e).reduce(function(t,r){return t[r]=[e[r]],t},{})},n.prototype.dispose=function(){this.executor.dispose()},n}();function PO(n,e){return e===void 0&&(e={}),Ps(this,void 0,void 0,function(){var t;return Bs(this,function(r){switch(r.label){case 0:if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");return e==null&&(e={}),e.fromTFHub&&n.load==null&&(n.endsWith("/")||(n+="/"),n=""+n+MO+_O),[4,(t=new LO(n,e)).load()];case 1:return r.sent(),[2,t]}})})}/**
    * @license
    * Copyright 2019 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */function Bi(n,e,t,r){return new(t||(t=Promise))(function(s,o){function a(c){try{u(r.next(c))}catch(l){o(l)}}function i(c){try{u(r.throw(c))}catch(l){o(l)}}function u(c){c.done?s(c.value):new t(function(l){l(c.value)}).then(a,i)}u((r=r.apply(n,[])).next())})}function zi(n,e){var t,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function i(u){return function(c){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(s=2&l[0]?r.return:l[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,l[1])).done)return s;switch(r=0,s&&(l=[2&l[0],s.value]),l[0]){case 0:case 1:s=l;break;case 4:return a.label++,{value:l[1],done:!1};case 5:a.label++,r=l[1],l=[0];continue;case 7:l=a.ops.pop(),a.trys.pop();continue;default:if(!(s=(s=a.trys).length>0&&s[s.length-1])&&(l[0]===6||l[0]===2)){a=0;continue}if(l[0]===3&&(!s||l[1]>s[0]&&l[1]<s[3])){a.label=l[1];break}if(l[0]===6&&a.label<s[1]){a.label=s[1],s=l;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(l);break}s[2]&&a.ops.pop(),a.trys.pop();continue}l=e.call(n,a)}catch(h){l=[6,h],r=0}finally{t=s=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}function C1(n,e,t,r){return new(t||(t=Promise))(function(s,o){function a(c){try{u(r.next(c))}catch(l){o(l)}}function i(c){try{u(r.throw(c))}catch(l){o(l)}}function u(c){c.done?s(c.value):new t(function(l){l(c.value)}).then(a,i)}u((r=r.apply(n,[])).next())})}function I1(n,e){var t,r,s,o,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function i(u){return function(c){return function(l){if(t)throw new TypeError("Generator is already executing.");for(;a;)try{if(t=1,r&&(s=2&l[0]?r.return:l[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,l[1])).done)return s;switch(r=0,s&&(l=[2&l[0],s.value]),l[0]){case 0:case 1:s=l;break;case 4:return a.label++,{value:l[1],done:!1};case 5:a.label++,r=l[1],l=[0];continue;case 7:l=a.ops.pop(),a.trys.pop();continue;default:if(!(s=(s=a.trys).length>0&&s[s.length-1])&&(l[0]===6||l[0]===2)){a=0;continue}if(l[0]===3&&(!s||l[1]>s[0]&&l[1]<s[3])){a.label=l[1];break}if(l[0]===6&&a.label<s[1]){a.label=s[1],s=l;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(l);break}s[2]&&a.ops.pop(),a.trys.pop();continue}l=e.call(n,a)}catch(h){l=[6,h],r=0}finally{t=s=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}var k1=function(n){for(var e=[],t=0,r=n;t<r.length;t++){var s=r[t];e.push(s)}return e},S1=function(){this.parent=null,this.children={},this.end=!1,this.word=[[],0,0]},BO=function(){function n(){this.root=new S1}return n.prototype.insert=function(e,t,r){for(var s=this.root,o=k1(e),a=0;a<o.length;a++)s.children[o[a]]||(s.children[o[a]]=new S1,s.children[o[a]].parent=s,s.children[o[a]].word[0]=s.word[0].concat(o[a])),s=s.children[o[a]],a===o.length-1&&(s.end=!0,s.word[1]=t,s.word[2]=r)},n.prototype.commonPrefixSearch=function(e){for(var t=[],r=this.root.children[e[0]],s=0;s<e.length&&r;s++)r.end&&t.push(r.word),r=r.children[e[s+1]];return t.length||t.push([[e[0]],0,0]),t},n}(),N1="▁";function zO(n){var e=n.normalize("NFKC");return N1+e.replace(/ /g,N1)}var VO=6,WO=function(){function n(e){this.vocabulary=e,this.trie=new BO;for(var t=VO;t<this.vocabulary.length;t++)this.trie.insert(this.vocabulary[t][0],this.vocabulary[t][1],t)}return n.prototype.encode=function(e){var t=[],r=[],s=[];e=zO(e);for(var o=k1(e),a=0;a<=o.length;a++)t.push({}),r.push(0),s.push(0);for(a=0;a<o.length;a++)for(var i=this.trie.commonPrefixSearch(o.slice(a)),u=0;u<i.length;u++){var c=i[u],l={key:c[0],score:c[1],index:c[2]};t[a+(h=c[0].length)][a]==null&&(t[a+h][a]=[]),t[a+h][a].push(l)}for(var h=0;h<=o.length;h++)for(var d in t[h]){var p=t[h][d];for(u=0;u<p.length;u++){var f=p[u],m=f.score+s[h-f.key.length];(s[h]===0||m>=s[h])&&(s[h]=m,r[h]=p[u].index)}}for(var g=[],x=r.length-1;x>0;)g.push(r[x]),x-=this.vocabulary[r[x]][0].length;var y=[],b=!1;for(a=0;a<g.length;a++){var v=g[a];b&&v===0||y.push(v),b=v===0}return y.reverse()},n}(),UO="https://storage.googleapis.com/tfjs-models/savedmodel/universal_sentence_encoder/";function GO(n){return C1(this,void 0,void 0,function(){var e;return I1(this,function(t){switch(t.label){case 0:return[4,HO(n)];case 1:return e=t.sent(),[2,new WO(e)]}})})}function HO(n){return n===void 0&&(n=UO+"vocab.json"),C1(this,void 0,void 0,function(){return I1(this,function(e){switch(e.label){case 0:return[4,As.fetch(n)];case 1:return[2,e.sent().json()]}})})}function qO(n,e){return Bi(this,void 0,void 0,function(){var t;return zi(this,function(r){switch(r.label){case 0:return[4,(t=new jO(n,e)).load()];case 1:return r.sent(),[2,t]}})})}var jO=function(){function n(e,t){e===void 0&&(e=.85),t===void 0&&(t=[]),this.threshold=e,this.toxicityLabels=t}return n.prototype.loadModel=function(){return Bi(this,void 0,void 0,function(){return zi(this,function(e){return[2,PO("https://tfhub.dev/tensorflow/tfjs-model/toxicity/1/default/1",{fromTFHub:!0})]})})},n.prototype.loadTokenizer=function(){return Bi(this,void 0,void 0,function(){return zi(this,function(e){return[2,GO()]})})},n.prototype.load=function(){return Bi(this,void 0,void 0,function(){var e,t,r,s=this;return zi(this,function(o){switch(o.label){case 0:return[4,Promise.all([this.loadModel(),this.loadTokenizer()])];case 1:return e=o.sent(),t=e[0],r=e[1],this.model=t,this.tokenizer=r,this.labels=t.outputs.map(function(a){return a.name.split("/")[0]}),this.toxicityLabels.length===0?this.toxicityLabels=this.labels:As.assert(this.toxicityLabels.every(function(a){return s.labels.indexOf(a)>-1}),function(){return"toxicityLabels argument must contain only items from the model heads "+s.labels.join(", ")+", got "+s.toxicityLabels.join(", ")}),[2]}})})},n.prototype.classify=function(e){return Bi(this,void 0,void 0,function(){var t,r,s,o,a,i,u,c=this;return zi(this,function(l){switch(l.label){case 0:for(typeof e=="string"&&(e=[e]),t=e.map(function(h){return c.tokenizer.encode(h)}),r=t.map(function(h,d){return h.map(function(p,f){return[d,f]})}),s=[],o=0;o<r.length;o++)s=s.concat(r[o]);return a=yo(s,[s.length,2],"int32"),i=is(As.flatten(t),"int32"),[4,this.model.executeAsync({Placeholder_1:a,Placeholder:i})];case 1:return u=l.sent(),a.dispose(),i.dispose(),[2,u.map(function(h,d){return{data:h,headIndex:d}}).filter(function(h){return c.toxicityLabels.indexOf(c.labels[h.headIndex])>-1}).map(function(h){for(var d=h.data.dataSync(),p=[],f=0;f<e.length;f++){var m=d.slice(2*f,2*f+2),g=null;Math.max(m[0],m[1])>c.threshold&&(g=m[0]<m[1]),p.push({probabilities:m,match:g})}return{label:c.labels[h.headIndex],results:p}})]}})})},n}();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KO=1e-7,XO=1e-4;class T1{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Kf{refCount(e){return Pn("refCount")}incRef(e){return Pn("incRef")}timerAvailable(){return!0}time(e){return Pn("time")}read(e){return Pn("read")}readSync(e){return Pn("readSync")}readToGPU(e,t){return Pn("readToGPU")}numDataIds(){return Pn("numDataIds")}disposeData(e,t){return Pn("disposeData")}write(e,t,r){return Pn("write")}move(e,t,r,s,o){return Pn("move")}createTensorFromGPUData(e,t,r){return Pn("createTensorFromGPUData")}memory(){return Pn("memory")}floatPrecision(){return Pn("floatPrecision")}epsilon(){return this.floatPrecision()===32?KO:XO}dispose(){return Pn("dispose")}}function Pn(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YO(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,Da(n,e,t)}function $o(n,e,t){return Math.max(n,Math.min(e,t))}function Xf(n){return n%2===0?n:n+1}function Da(n,e,t){const r=n[e];n[e]=n[t],n[t]=r}function QO(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function A(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Yf(n,e,t=""){A(et(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function E1(n){A(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ne(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function et(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Fa(n){return n%1===0}function Qf(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function Oa(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function R1(n,e=s=>0,t,r){return new Promise((s,o)=>{let a=0;const i=()=>{if(n()){s();return}a++;const u=e(a);if(t!=null&&a>=t){o();return}r!=null?r(i,u):setTimeout(i,u)};i()})}function A1(n,e){let t=1,r=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${o}`);r=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(r===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const s=n.slice();return s[r]=e/t,s}function Ve(n,e){const t=e.length;return n=n==null?e.map((r,s)=>s):[].concat(n),A(n.every(r=>r>=-t&&r<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),A(n.every(r=>Fa(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?t+r:r)}function zs(n,e){const t=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||s?null:Ve(e,n).sort();let a=0;for(let i=0;i<n.length;++i){if(o!=null){if(o[a]===i&&n[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(o[a]==null||o[a]>i)&&n[i]===1&&(t.push(n[i]),r.push(i)),o[a]<=i&&a++}n[i]!==1&&(t.push(n[i]),r.push(i))}return{newShape:t,keptDims:r}}function an(n,e){return kt(n,e)}function kt(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function JO(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function ZO(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function $1(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function El(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function e_(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Vi(n){return typeof n=="string"||n instanceof String}function t_(n){return typeof n=="boolean"}function Jf(n){return typeof n=="number"}function _a(n){return Array.isArray(n)?_a(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Jf(n)?"float32":Vi(n)?"string":t_(n)?"bool":"float32"}function Zf(n){return!!(n&&n.constructor&&n.call&&n.apply)}function em(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Ee(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let r=e-3;r>=0;--r)t[r]=t[r+1]*n[r+1];return t}function D1(n,e,t,r=!1){const s=new Array;if(e.length===1){const o=e[0]*(r?2:1);for(let a=0;a<o;a++)s[a]=t[n+a]}else{const o=e[0],a=e.slice(1),i=a.reduce((u,c)=>u*c)*(r?2:1);for(let u=0;u<o;u++)s[u]=D1(n+u*i,a,t,r)}return s}function Ir(n,e,t=!1){if(n.length===0)return e[0];const r=n.reduce((s,o)=>s*o)*(t?2:1);if(r===0)return[];if(r!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return D1(0,n,e,t)}function n_(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function tm(n,e){const t=un(n,e);for(let r=0;r<t.length;r++)t[r]=1;return t}function un(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function F1(n,e){const t=n.reduce((r,s)=>r*s,1);if(e==null||e==="float32")return Ir(n,new Float32Array(t));if(e==="int32")return Ir(n,new Int32Array(t));if(e==="bool")return Ir(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function gs(n){n.forEach(e=>{A(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Wr(n,e,t){if(e===0)return 0;if(e===1)return n[0];let r=n[n.length-1];for(let s=0;s<n.length-1;++s)r+=t[s]*n[s];return r}function Ma(n,e,t){if(e===0)return[];if(e===1)return[n];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(n/t[s]),n-=r[s]*t[s];return r[r.length-1]=n,r}function nm(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O1="tfjsflags";class r_{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=s_,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(Z().getBool("IS_TEST")||Z().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){const s=this.urlFlags[e];Z().getBool("IS_TEST")||Z().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(nm(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);O1 in e&&e[O1].split(",").forEach(r=>{const[s,o]=r.split(":");this.urlFlags[s]=a_(s,o)})}}function s_(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...r)=>(o_(e,r[0],r[1]),r.join("="))),e}function o_(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function a_(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function Z(){return _1}let _1=null;function i_(n){_1=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let rm;function M1(){if(rm==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");rm=n}return rm}function u_(){const n=M1();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function sm(n,e){const t=u_();if(t.has(n))return t.get(n);{const r=e();return t.set(n,r),t.get(n)}}const Rl="Abs",Wi="Acos",Ui="Acosh",La="Add",om="AddN",am="All",im="Any",Al="ArgMax",$l="ArgMin",Gi="Asin",Hi="Asinh",qi="Atan",ji="Atanh",Ki="Atan2",Dl="AvgPool",um="AvgPoolGrad",Fl="AvgPool3D",cm="AvgPool3DGrad",Ol="BatchMatMul",_l="BatchToSpaceND",lm="Bincount",hm="BitwiseAnd",c_="BroadcastTo",L1="BroadcastArgs",Xi="Cast",Yi="Ceil",Qi="ClipByValue",dm="Complex",Ml="ComplexAbs",Ll="Concat",Pl="Conv2D",pm="Conv2DBackpropFilter",Bl="Conv2DBackpropInput",zl="Conv3D",fm="Conv3DBackpropFilterV2",mm="Conv3DBackpropInputV2",Ji="Cos",Zi="Cosh",gm="Cumprod",Vl="Cumsum",xm="CropAndResize",ym="DenseBincount",vm="DepthToSpace",Wl="DepthwiseConv2dNative",bm="DepthwiseConv2dNativeBackpropFilter",wm="DepthwiseConv2dNativeBackpropInput",P1="Diag",Ul="Dilation2D",Cm="Dilation2DBackpropInput",Im="Dilation2DBackpropFilter",l_="Draw",eu="RealDiv",km="Einsum",tu="Elu",Sm="EluGrad",nu="Erf",Gl="Equal",ru="Exp",Hl="ExpandDims",su="Expm1",Nm="FFT",Tm="Fill",Em="FlipLeftRight",ou="Floor",au="FloorDiv",ql="FusedBatchNorm",jl="GatherV2",B1="GatherNd",Kl="Greater",iu="GreaterEqual",uu="Identity",Rm="IFFT",Am="Imag",cu="IsFinite",lu="IsInf",hu="IsNan",Xl="LeakyRelu",Yl="Less",Ql="LessEqual",z1="LinSpace",du="Log",pu="Log1p",Jl="LogicalAnd",Zl="LogicalNot",eh="LogicalOr",h_="LogSoftmax",th="LRN",$m="LRNGrad",nh="Max",fu="Maximum",rh="MaxPool",Dm="MaxPoolGrad",sh="MaxPool3D",Fm="MaxPool3DGrad",V1="MaxPoolWithArgmax",oh="Mean",ah="Min",mu="Minimum",ih="MirrorPad",gu="Mod",W1="Multinomial",xu="Multiply",uh="Neg",ch="NotEqual",Om="NonMaxSuppressionV3",_m="NonMaxSuppressionV4",Mm="NonMaxSuppressionV5",lh="OnesLike",hh="OneHot",dh="Pack",ph="PadV2",yu="Pow",fh="Prelu",mh="Prod",U1="RaggedGather",G1="RaggedRange",H1="RaggedTensorToTensor",Lm="Range",Pm="Real",vu="Reciprocal",bu="Relu",gh="Reshape",xh="ResizeNearestNeighbor",Bm="ResizeNearestNeighborGrad",yh="ResizeBilinear",zm="ResizeBilinearGrad",wu="Relu6",vh="Reverse",Cu="Round",Iu="Rsqrt",q1="ScatterNd",j1="TensorScatterUpdate",K1="SearchSorted",bh="Select",ku="Selu",wh="Slice",Su="Sin",Nu="Sinh",Tu="Sign",Eu="Sigmoid",Ru="Softplus",Au="Sqrt",Ch="Sum",Ih="SpaceToBatchND",kh="SplitV",Sh="Softmax",X1="SparseFillEmptyRows",Y1="SparseReshape",Q1="SparseSegmentMean",J1="SparseSegmentSum",Z1="SparseToDense",$u="SquaredDifference",Vm="Square",Wm="StaticRegexReplace",Um="StridedSlice",ew="StringNGrams",tw="StringSplit",nw="StringToHashBucketFast",Du="Sub",Fu="Tan",Ou="Tanh",_u="Tile",Gm="TopK",Hm="Transform",Pa="Transpose",qm="Unique",Nh="Unpack",Th="UnsortedSegmentSum",Eh="ZerosLike",Mu="Step",d_="FromPixels",jm="RotateWithOffset",Rh="_FusedMatMul",Ah="FusedConv2D",rw="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yn(...n){Z().getBool("IS_TEST")||Z().getBool("PROD")||console.warn(...n)}function p_(...n){Z().getBool("IS_TEST")||Z().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $h=sm("kernelRegistry",()=>new Map),Km=sm("gradRegistry",()=>new Map);function sw(n,e){const t=uw(n,e);return $h.get(t)}function ow(n){return Km.get(n)}function aw(n){const e=$h.entries(),t=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[o,a]=s,[i]=o.split("_");i===n&&t.push(a)}return t}function iw(n){const{kernelName:e,backendName:t}=n,r=uw(e,t);$h.has(r)&&Yn(`The kernel '${e}' for backend '${t}' is already registered`),$h.set(r,n)}function f_(n){const{kernelName:e}=n;Km.has(e)&&Z().getBool("DEBUG")&&Yn(`Overriding the gradient for '${e}'`),Km.set(e,n)}function uw(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cw(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}function m_(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function g_(n){if(Object.prototype.hasOwnProperty.call(n,"__esModule"))return n;var e=n.default;if(typeof e=="function"){var t=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(r){var s=Object.getOwnPropertyDescriptor(n,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return n[r]}})}),t}var Xm,lw;function x_(){if(lw)return Xm;lw=1,Xm=e;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function e(N,I,E){this.low=N|0,this.high=I|0,this.unsigned=!!E}e.prototype.__isLong__,Object.defineProperty(e.prototype,"__isLong__",{value:!0});function t(N){return(N&&N.__isLong__)===!0}e.isLong=t;var r={},s={};function o(N,I){var E,F,O;return I?(N>>>=0,(O=0<=N&&N<256)&&(F=s[N],F)?F:(E=i(N,(N|0)<0?-1:0,!0),O&&(s[N]=E),E)):(N|=0,(O=-128<=N&&N<128)&&(F=r[N],F)?F:(E=i(N,N<0?-1:0,!1),O&&(r[N]=E),E))}e.fromInt=o;function a(N,I){if(isNaN(N))return I?y:x;if(I){if(N<0)return y;if(N>=f)return T}else{if(N<=-9223372036854776e3)return S;if(N+1>=m)return C}return N<0?a(-N,I).neg():i(N%p|0,N/p|0,I)}e.fromNumber=a;function i(N,I,E){return new e(N,I,E)}e.fromBits=i;var u=Math.pow;function c(N,I,E){if(N.length===0)throw Error("empty string");if(N==="NaN"||N==="Infinity"||N==="+Infinity"||N==="-Infinity")return x;if(typeof I=="number"?(E=I,I=!1):I=!!I,E=E||10,E<2||36<E)throw RangeError("radix");var F;if((F=N.indexOf("-"))>0)throw Error("interior hyphen");if(F===0)return c(N.substring(1),I,E).neg();for(var O=a(u(E,8)),D=x,M=0;M<N.length;M+=8){var P=Math.min(8,N.length-M),L=parseInt(N.substring(M,M+P),E);if(P<8){var z=a(u(E,P));D=D.mul(z).add(a(L))}else D=D.mul(O),D=D.add(a(L))}return D.unsigned=I,D}e.fromString=c;function l(N,I){return typeof N=="number"?a(N,I):typeof N=="string"?c(N,I):i(N.low,N.high,typeof I=="boolean"?I:N.unsigned)}e.fromValue=l;var h=65536,d=1<<24,p=h*h,f=p*p,m=f/2,g=o(d),x=o(0);e.ZERO=x;var y=o(0,!0);e.UZERO=y;var b=o(1);e.ONE=b;var v=o(1,!0);e.UONE=v;var w=o(-1);e.NEG_ONE=w;var C=i(-1,2147483647,!1);e.MAX_VALUE=C;var T=i(-1,-1,!0);e.MAX_UNSIGNED_VALUE=T;var S=i(0,-2147483648,!1);e.MIN_VALUE=S;var k=e.prototype;return k.toInt=function(){return this.unsigned?this.low>>>0:this.low},k.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},k.toString=function(I){if(I=I||10,I<2||36<I)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(S)){var E=a(I),F=this.div(E),O=F.mul(E).sub(this);return F.toString(I)+O.toInt().toString(I)}else return"-"+this.neg().toString(I);for(var D=a(u(I,6),this.unsigned),M=this,P="";;){var L=M.div(D),z=M.sub(L.mul(D)).toInt()>>>0,W=z.toString(I);if(M=L,M.isZero())return W+P;for(;W.length<6;)W="0"+W;P=""+W+P}},k.getHighBits=function(){return this.high},k.getHighBitsUnsigned=function(){return this.high>>>0},k.getLowBits=function(){return this.low},k.getLowBitsUnsigned=function(){return this.low>>>0},k.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var I=this.high!=0?this.high:this.low,E=31;E>0&&(I&1<<E)==0;E--);return this.high!=0?E+33:E+1},k.isZero=function(){return this.high===0&&this.low===0},k.eqz=k.isZero,k.isNegative=function(){return!this.unsigned&&this.high<0},k.isPositive=function(){return this.unsigned||this.high>=0},k.isOdd=function(){return(this.low&1)===1},k.isEven=function(){return(this.low&1)===0},k.equals=function(I){return t(I)||(I=l(I)),this.unsigned!==I.unsigned&&this.high>>>31===1&&I.high>>>31===1?!1:this.high===I.high&&this.low===I.low},k.eq=k.equals,k.notEquals=function(I){return!this.eq(I)},k.neq=k.notEquals,k.ne=k.notEquals,k.lessThan=function(I){return this.comp(I)<0},k.lt=k.lessThan,k.lessThanOrEqual=function(I){return this.comp(I)<=0},k.lte=k.lessThanOrEqual,k.le=k.lessThanOrEqual,k.greaterThan=function(I){return this.comp(I)>0},k.gt=k.greaterThan,k.greaterThanOrEqual=function(I){return this.comp(I)>=0},k.gte=k.greaterThanOrEqual,k.ge=k.greaterThanOrEqual,k.compare=function(I){if(t(I)||(I=l(I)),this.eq(I))return 0;var E=this.isNegative(),F=I.isNegative();return E&&!F?-1:!E&&F?1:this.unsigned?I.high>>>0>this.high>>>0||I.high===this.high&&I.low>>>0>this.low>>>0?-1:1:this.sub(I).isNegative()?-1:1},k.comp=k.compare,k.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},k.neg=k.negate,k.add=function(I){t(I)||(I=l(I));var E=this.high>>>16,F=this.high&65535,O=this.low>>>16,D=this.low&65535,M=I.high>>>16,P=I.high&65535,L=I.low>>>16,z=I.low&65535,W=0,j=0,Y=0,J=0;return J+=D+z,Y+=J>>>16,J&=65535,Y+=O+L,j+=Y>>>16,Y&=65535,j+=F+P,W+=j>>>16,j&=65535,W+=E+M,W&=65535,i(Y<<16|J,W<<16|j,this.unsigned)},k.subtract=function(I){return t(I)||(I=l(I)),this.add(I.neg())},k.sub=k.subtract,k.multiply=function(I){if(this.isZero())return x;if(t(I)||(I=l(I)),n){var E=n.mul(this.low,this.high,I.low,I.high);return i(E,n.get_high(),this.unsigned)}if(I.isZero())return x;if(this.eq(S))return I.isOdd()?S:x;if(I.eq(S))return this.isOdd()?S:x;if(this.isNegative())return I.isNegative()?this.neg().mul(I.neg()):this.neg().mul(I).neg();if(I.isNegative())return this.mul(I.neg()).neg();if(this.lt(g)&&I.lt(g))return a(this.toNumber()*I.toNumber(),this.unsigned);var F=this.high>>>16,O=this.high&65535,D=this.low>>>16,M=this.low&65535,P=I.high>>>16,L=I.high&65535,z=I.low>>>16,W=I.low&65535,j=0,Y=0,J=0,ae=0;return ae+=M*W,J+=ae>>>16,ae&=65535,J+=D*W,Y+=J>>>16,J&=65535,J+=M*z,Y+=J>>>16,J&=65535,Y+=O*W,j+=Y>>>16,Y&=65535,Y+=D*z,j+=Y>>>16,Y&=65535,Y+=M*L,j+=Y>>>16,Y&=65535,j+=F*W+O*z+D*L+M*P,j&=65535,i(J<<16|ae,j<<16|Y,this.unsigned)},k.mul=k.multiply,k.divide=function(I){if(t(I)||(I=l(I)),I.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&I.low===-1&&I.high===-1)return this;var E=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,I.low,I.high);return i(E,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?y:x;var F,O,D;if(this.unsigned){if(I.unsigned||(I=I.toUnsigned()),I.gt(this))return y;if(I.gt(this.shru(1)))return v;D=y}else{if(this.eq(S)){if(I.eq(b)||I.eq(w))return S;if(I.eq(S))return b;var M=this.shr(1);return F=M.div(I).shl(1),F.eq(x)?I.isNegative()?b:w:(O=this.sub(I.mul(F)),D=F.add(O.div(I)),D)}else if(I.eq(S))return this.unsigned?y:x;if(this.isNegative())return I.isNegative()?this.neg().div(I.neg()):this.neg().div(I).neg();if(I.isNegative())return this.div(I.neg()).neg();D=x}for(O=this;O.gte(I);){F=Math.max(1,Math.floor(O.toNumber()/I.toNumber()));for(var P=Math.ceil(Math.log(F)/Math.LN2),L=P<=48?1:u(2,P-48),z=a(F),W=z.mul(I);W.isNegative()||W.gt(O);)F-=L,z=a(F,this.unsigned),W=z.mul(I);z.isZero()&&(z=b),D=D.add(z),O=O.sub(W)}return D},k.div=k.divide,k.modulo=function(I){if(t(I)||(I=l(I)),n){var E=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,I.low,I.high);return i(E,n.get_high(),this.unsigned)}return this.sub(this.div(I).mul(I))},k.mod=k.modulo,k.rem=k.modulo,k.not=function(){return i(~this.low,~this.high,this.unsigned)},k.and=function(I){return t(I)||(I=l(I)),i(this.low&I.low,this.high&I.high,this.unsigned)},k.or=function(I){return t(I)||(I=l(I)),i(this.low|I.low,this.high|I.high,this.unsigned)},k.xor=function(I){return t(I)||(I=l(I)),i(this.low^I.low,this.high^I.high,this.unsigned)},k.shiftLeft=function(I){return t(I)&&(I=I.toInt()),(I&=63)===0?this:I<32?i(this.low<<I,this.high<<I|this.low>>>32-I,this.unsigned):i(0,this.low<<I-32,this.unsigned)},k.shl=k.shiftLeft,k.shiftRight=function(I){return t(I)&&(I=I.toInt()),(I&=63)===0?this:I<32?i(this.low>>>I|this.high<<32-I,this.high>>I,this.unsigned):i(this.high>>I-32,this.high>=0?0:-1,this.unsigned)},k.shr=k.shiftRight,k.shiftRightUnsigned=function(I){if(t(I)&&(I=I.toInt()),I&=63,I===0)return this;var E=this.high;if(I<32){var F=this.low;return i(F>>>I|E<<32-I,E>>>I,this.unsigned)}else return I===32?i(E,0,this.unsigned):i(E>>>I-32,0,this.unsigned)},k.shru=k.shiftRightUnsigned,k.shr_u=k.shiftRightUnsigned,k.toSigned=function(){return this.unsigned?i(this.low,this.high,!1):this},k.toUnsigned=function(){return this.unsigned?this:i(this.low,this.high,!0)},k.toBytes=function(I){return I?this.toBytesLE():this.toBytesBE()},k.toBytesLE=function(){var I=this.high,E=this.low;return[E&255,E>>>8&255,E>>>16&255,E>>>24,I&255,I>>>8&255,I>>>16&255,I>>>24]},k.toBytesBE=function(){var I=this.high,E=this.low;return[I>>>24,I>>>16&255,I>>>8&255,I&255,E>>>24,E>>>16&255,E>>>8&255,E&255]},e.fromBytes=function(I,E,F){return F?e.fromBytesLE(I,E):e.fromBytesBE(I,E)},e.fromBytesLE=function(I,E){return new e(I[0]|I[1]<<8|I[2]<<16|I[3]<<24,I[4]|I[5]<<8|I[6]<<16|I[7]<<24,E)},e.fromBytesBE=function(I,E){return new e(I[4]<<24|I[5]<<16|I[6]<<8|I[7],I[0]<<24|I[1]<<16|I[2]<<8|I[3],E)},Xm}var hw=x_();const dw=m_(hw),y_=QT({__proto__:null,default:dw},[hw]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Do=dw||y_;function Dh(n){return Do.fromString(n,!0,16)}const pw=Dh("c3a5c85c97cb3127"),Fo=Dh("b492b66fbe98f273"),xn=Dh("9ae16a3b2f90404f");function Ym(n){return n.xor(n.shru(47))}function fw(n,e,t){const r=n.slice(e,e+t);return Do.fromBytes(Array.from(r),!0,!0)}function ut(n,e){return fw(n,e,8)}function mw(n,e){return fw(n,e,4)}function Gt(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Vs(n,e,t=Dh("9ddfea08eb382d69")){let r=n.xor(e).mul(t);r=r.xor(r.shru(47));let s=e.xor(r).mul(t);return s=s.xor(s.shru(47)),s=s.mul(t),s}function v_(n,e,t,r,s,o){s=s.add(n),o=Gt(o.add(s).add(r),21);const a=s;return s=s.add(e),s=s.add(t),o=o.add(Gt(s,44)),[s.add(r),o.add(a)]}function Fh(n,e,t,r){return v_(ut(n,e),ut(n,e+8),ut(n,e+16),ut(n,e+24),t,r)}function b_(n,e=n.length){if(e>=8){const t=xn.add(e*2),r=ut(n,0).add(xn),s=ut(n,e-8),o=Gt(s,37).mul(t).add(r),a=Gt(r,25).add(s).mul(t);return Vs(o,a,t)}if(e>=4){const t=xn.add(e*2),r=mw(n,0);return Vs(r.shl(3).add(e),mw(n,e-4),t)}if(e>0){const t=n[0],r=n[e>>1],s=n[e-1],o=t+(r<<8),a=e+(s<<2);return Ym(xn.mul(o).xor(pw.mul(a))).mul(xn)}return xn}function w_(n,e=n.length){const t=xn.add(e*2),r=ut(n,0).mul(Fo),s=ut(n,8),o=ut(n,e-8).mul(t),a=ut(n,e-16).mul(xn);return Vs(Gt(r.add(s),43).add(Gt(o,30)).add(a),r.add(Gt(s.add(xn),18)).add(o),t)}function C_(n,e=n.length){const t=xn.add(e*2),r=ut(n,0).mul(xn),s=ut(n,8),o=ut(n,e-8).mul(t),a=ut(n,e-16).mul(xn),i=Gt(r.add(s),43).add(Gt(o,30)).add(a),u=Vs(i,r.add(Gt(s.add(xn),18)).add(o),t),c=ut(n,16).mul(t),l=ut(n,24),h=i.add(ut(n,e-32)).mul(t),d=u.add(ut(n,e-24)).mul(t);return Vs(Gt(c.add(l),43).add(Gt(h,30)).add(d),c.add(Gt(l.add(r),18)).add(h),t)}function I_(n,e=n.length){const t=Do.fromNumber(81,!0);if(e<=32)return e<=16?b_(n,e):w_(n,e);if(e<=64)return C_(n,e);let r=t,s=t.mul(Fo).add(113),o=Ym(s.mul(xn).add(113)).mul(xn),a=[Do.UZERO,Do.UZERO],i=[Do.UZERO,Do.UZERO];r=r.mul(xn).add(ut(n,0));let u=0;const c=(e-1>>6)*64,l=c+(e-1&63)-63;do r=Gt(r.add(s).add(a[0]).add(ut(n,u+8)),37).mul(Fo),s=Gt(s.add(a[1]).add(ut(n,u+48)),42).mul(Fo),r=r.xor(i[1]),s=s.add(a[0]).add(ut(n,u+40)),o=Gt(o.add(i[0]),33).mul(Fo),a=Fh(n,u,a[1].mul(Fo),r.add(i[0])),i=Fh(n,u+32,o.add(i[1]),s.add(ut(n,u+16))),[o,r]=[r,o],u+=64;while(u!==c);const h=Fo.add(o.and(255).shl(1));return u=l,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),r=Gt(r.add(s).add(a[0]).add(ut(n,u+8)),37).mul(h),s=Gt(s.add(a[1]).add(ut(n,u+48)),42).mul(h),r=r.xor(i[1].mul(9)),s=s.add(a[0].mul(9).add(ut(n,u+40))),o=Gt(o.add(i[0]),33).mul(h),a=Fh(n,u,a[1].mul(h),r.add(i[0])),i=Fh(n,u+32,o.add(i[1]),s.add(ut(n,u+16))),[o,r]=[r,o],Vs(Vs(a[0],i[0],h).add(Ym(s).mul(pw)).add(o),Vs(a[1],i[1],h).add(r),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ws(n,e){return e==="string"?Us(n):Oo([n],e)}function k_(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function Oo(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=_o(n)),Z().getBool("DEBUG")&&JO(n,e),k_(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let r=0;r<t.length;++r)Math.round(n[r])!==0&&(t[r]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Nn(){return Z().platform.now()}function Us(n,e="utf-8"){return e=e||"utf-8",Z().platform.encode(n,e)}function Gs(n,e="utf-8"){return e=e||"utf-8",Z().platform.decode(n,e)}function or(n){return Z().platform.isTypedArray!=null?Z().platform.isTypedArray(n):cw(n)}function _o(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||nm(n)||n==null||or(n)&&t)e.push(n);else if(Array.isArray(n)||or(n))for(let r=0;r<n.length;++r)_o(n[r],e,t);else{let r=-1;for(const s of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(s)&&(r=Math.max(r,Number(s)));for(let s=0;s<=r;s++)_o(n[s],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S_{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new T_)}profileKernel(e,t,r){let s;const o=()=>{s=r()};let a;const i=Nn();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const c of s)c.dataSync();a=Promise.resolve({kernelMs:Nn()-i})}if(Z().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<s.length;c++){const l=s[c];l.data().then(h=>{N_(h,l.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(c=>c.kernelMs),extraInfo:a.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:r,timeMs:s,inputs:o,extraInfo:a}=e;r.forEach(i=>{Promise.all([i.data(),s,a]).then(u=>{this.logger.logKernelProfile(t,i,u[0],u[1],o,u[2])})})}}function N_(n,e,t){if(e!=="float32")return!1;for(let r=0;r<n.length;r++){const s=n[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${t}'`),!0}return!1}class T_{logKernelProfile(e,t,r,s,o,a){const i=typeof s=="number"?Oa(`${s}ms`,9):s.error,u=Oa(e,25),c=t.rank,l=t.size,h=Oa(t.shape.toString(),14);let d="";for(const p in o){const f=o[p];if(f!=null){const m=f.shape||t.shape,g=m.length;d+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${u}	%c${i}	%c${c}D ${h}	%c${l}	%c${d}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E_(n,e,t){const r={},s={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<n.length;u++){const c=n[u],l=c.inputs;for(const h in l){const d=l[h];let p=!1;for(let f=0;f<e.length;f++)if(r[d.id]){c.outputs.forEach(m=>r[m.id]=!0),p=!0,s[c.id]=!0;break}if(p)break}}const o={};o[t.id]=!0;const a={};for(let u=n.length-1;u>=0;u--){const c=n[u],l=c.inputs;for(let h=0;h<c.outputs.length;h++)if(o[c.outputs[h].id]){for(const d in l)o[l[d].id]=!0,a[c.id]=!0;break}}const i=[];for(let u=0;u<n.length;u++){const c=n[u];if(s[c.id]&&a[c.id]){const l={};for(const d in c.inputs){const p=c.inputs[d];r[p.id]&&(l[d]=p)}const h=Object.assign({},c);h.inputs=l,h.outputs=c.outputs,i.push(h)}}return i}function R_(n,e,t,r){for(let s=e.length-1;s>=0;s--){const o=e[s],a=[];if(o.outputs.forEach(u=>{const c=n[u.id];c!=null?a.push(c):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const u in o.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);const c=t(()=>i[u]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${c.dtype}'`);const l=o.inputs[u];if(!et(c.shape,l.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${u}' has shape '${c.shape}', which does not match the shape of the input '${l.shape}'`);if(n[l.id]==null)n[l.id]=c;else{const h=n[l.id];n[l.id]=r(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gw=20,Lu=3,Qm=7;function A_(n,e,t,r){const s=Ee(e),o=$_(n,e,t,s),a=e.length,i=Oh(n,e,t,s,o),u=["Tensor"];return r&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${a}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(i.map(c=>"    "+c).join(`
`)),u.join(`
`)}function $_(n,e,t,r){const s=ne(e),o=r[r.length-1],a=new Array(o).fill(0),i=e.length,u=t==="complex64"?Bu(n):n;if(i>1)for(let c=0;c<s/o;c++){const l=c*o;for(let h=0;h<o;h++)a[h]=Math.max(a[h],Pu(u[l+h],0,t).length)}return a}function Pu(n,e,t){let r;return Array.isArray(n)?r=`${parseFloat(n[0].toFixed(Qm))} + ${parseFloat(n[1].toFixed(Qm))}j`:Vi(n)?r=`'${n}'`:t==="bool"?r=xw(n):r=parseFloat(n.toFixed(Qm)).toString(),Oa(r,e)}function xw(n){return n===0?"false":"true"}function Oh(n,e,t,r,s,o=!0){const a=t==="complex64"?2:1,i=e[0],u=e.length;if(u===0){if(t==="complex64"){const m=Bu(n);return[Pu(m[0],0,t)]}return t==="bool"?[xw(n[0])]:[n[0].toString()]}if(u===1){if(i>gw){const g=Lu*a;let x=Array.from(n.slice(0,g)),y=Array.from(n.slice((i-Lu)*a,i*a));return t==="complex64"&&(x=Bu(x),y=Bu(y)),["["+x.map((b,v)=>Pu(b,s[v],t)).join(", ")+", ..., "+y.map((b,v)=>Pu(b,s[i-Lu+v],t)).join(", ")+"]"]}return["["+(t==="complex64"?Bu(n):Array.from(n)).map((g,x)=>Pu(g,s[x],t)).join(", ")+"]"]}const c=e.slice(1),l=r.slice(1),h=r[0]*a,d=[];if(i>gw){for(let m=0;m<Lu;m++){const g=m*h,x=g+h;d.push(...Oh(n.slice(g,x),c,t,l,s,!1))}d.push("...");for(let m=i-Lu;m<i;m++){const g=m*h,x=g+h;d.push(...Oh(n.slice(g,x),c,t,l,s,m===i-1))}}else for(let m=0;m<i;m++){const g=m*h,x=g+h;d.push(...Oh(n.slice(g,x),c,t,l,s,m===i-1))}const p=u===2?",":"";d[0]="["+(i>0?d[0]+p:"");for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<u;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(o?"":f),d}function Bu(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jt{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=ne(e),r!=null){const s=r.length;A(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||kt(t,this.size),this.strides=Ee(e)}set(e,...t){t.length===0&&(t=[0]),A(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const r=this.locToIndex(t);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const s of e){if(s<0||s>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return kr().makeTensor(this.values,this.shape,this.dtype)}}let kr=null,Ba=null;function D_(n){kr=n}function F_(n){Ba=n}class _t{constructor(e,t,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ne(e),this.strides=Ee(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ba.buffer(this.shape,this.dtype,e)}bufferSync(){return Ba.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Ir(this.shape,e,this.dtype==="complex64")}arraySync(){return Ir(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=kr().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(r=>Gs(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),kr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=kr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Gs(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await kr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),kr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ba.print(this,e)}clone(){return this.throwIfDisposed(),Ba.clone(this)}toString(e=!1){const t=this.dataSync();return A_(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ba.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),kr().makeVariable(this,e,t,r)}}Object.defineProperty(_t,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function te(){return sm("Tensor",()=>_t)}te();class _h extends _t{constructor(e,t,r,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!et(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);kr().disposeTensor(this),this.dataId=e.dataId,kr().incRef(this,null)}dispose(){kr().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(_h,Symbol.hasInstance,{value:n=>n instanceof _t&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var yw;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(yw||(yw={}));var Jm;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Jm||(Jm={}));var Zm;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Zm||(Zm={}));var eg;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(eg||(eg={}));var tg;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(tg||(tg={}));const O_={float32:eg,int32:Jm,bool:Zm,complex64:tg};function Bn(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return O_[n][e]}function ng(n){return Bn(n,"int32")}function vw(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function bw(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function St(n,e){if(n.dtype===e.dtype)return[n,e];const t=Bn(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function ww(n){const e=[];return Cw(n,e,new Set),e}function Cw(n,e,t){if(n==null)return;if(n instanceof _t){e.push(n);return}if(!__(n))return;const r=n;for(const s in r){const o=r[s];t.has(o)||(t.add(o),Cw(o,e,t))}}function __(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rg(n){return n.kernelName!=null}class Iw{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class za{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Iw}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(Yn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new S_(this.backendInstance),!0}setupRegisteredKernels(){aw(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){aw(e).forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=t.factory();if(r&&!(r instanceof Kf)&&typeof r.then=="function"){const s=++this.pendingBackendInitId,o=r.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Yn(`Initialization of backend ${e} failed`),Yn(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return Yn(`Initialization of backend ${e} failed`),Yn(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t],{success:s,asyncInit:o}=this.initializeBackend(r);if(o||s)return{name:r,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const r=this.state.tensorInfo.get(t),s=r.backend,o=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),r.backend=e,e.move(t,o,r.shape,r.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let s;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,r){e();try{const s=r();return t(),s}catch(s){throw t(),s}}nextTensorId(){return za.nextTensorId++}nextVariableId(){return za.nextVariableId++}clone(e){const t=q.runKernel(uu,{x:e}),r={x:e},s=a=>({x:()=>{const i="float32",u={x:a},c={dtype:i};return q.runKernel(Xi,u,c)}}),o=[];return this.addTapeNode(this.state.activeScope.name,r,[t],s,o,{}),t}runKernel(e,t,r){if(this.backendName==null&&this.backend,!(sw(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){const s=this.backend.numDataIds();let o=0;r.forEach(u=>{o+=u.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-o-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,r=[];const s=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u;const c=rg(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(rg(e)){const{kernelName:f,inputs:m,attrs:g}=e;this.backendName==null&&this.backend;const x=sw(f,this.backendName);A(x!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{const y=this.backend.numDataIds();u=x.kernelFunc({inputs:m,attrs:g,backend:this.backend});const b=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,y,b);const v=b.map(w=>w.rank!=null?w:this.makeTensorFromTensorInfo(w));if(s){const w=this.getTensorsForGradient(f,m,v);r=this.saveTensorsForBackwardMode(w)}return v}}else{const{forwardFunc:f}=e,m=g=>{s&&(r=g.map(x=>this.keep(this.clone(x))))};i=()=>{const g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,m));const x=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,x),x}}const{inputs:l,attrs:h}=e,d=rg(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(p=this.profiler.profileKernel(c,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),s&&this.addTapeNode(c,l,t,d,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>l[f]!=null?l[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,t,r){const s=ow(e);if(s!=null){const o=s.inputsToSave||[],a=s.outputsToSave||[];let i;s.saveAllInputs?(A(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(c=>t[c])):i=o.map(c=>t[c]);const u=r.filter((c,l)=>a[l]);return i.concat(u)}return[]}makeTensor(e,t,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;let o=e;r==="string"&&Vi(e[0])&&(o=e.map(u=>Us(u)));const a=s.write(o,t,r),i=new _t(t,r,a,this.nextTensorId());if(this.trackTensor(i,s),r==="string"){const u=this.state.tensorInfo.get(a),c=e_(o);this.state.numBytes+=c-u.bytes,u.bytes=c}return i}makeTensorFromDataId(e,t,r,s){r=r||"float32";const o={dataId:e,shape:t,dtype:r};return this.makeTensorFromTensorInfo(o,s)}makeTensorFromTensorInfo(e,t){const{dataId:r,shape:s,dtype:o}=e,a=new _t(s,o,r,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,r,s){r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));const o=new _h(e,t,r,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*El(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof _h||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const r=e.size*El(e.dtype);this.state.numBytes-=r}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,r,s,o,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:o},u=ow(e);u!=null&&(s=u.gradFunc),s!=null&&(i.gradient=c=>(c=c.map((l,h)=>{if(l==null){const d=r[h],p=un(d.size,d.dtype);return this.makeTensor(p,d.shape,d.dtype)}return l}),s(c.length>1?c:c[0],o,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ww(e),r=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!r.has(a.id)&&a.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===s.id&&this.track(o)})}gradients(e,t,r,s=!1){if(A(t.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));A(o instanceof _t,()=>"The result y returned by f() must be a tensor.");const a=E_(this.state.activeTape,t,o);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[o.id]=r??M_(o.shape),R_(i,a,c=>this.tidy(c),L_);const u=t.map(c=>i[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const l of c.saved)l.dispose()}),this.state.activeTape=null),{value:o,grads:u}})}customGrad(e){return A(Zf(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{A(t.every(i=>i instanceof _t),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const s={};t.forEach((i,u)=>{s[u]=i});const o=(i,u)=>(r=e(...t,u),A(r.value instanceof _t,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),A(Zf(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),a=(i,u)=>{const c=r.gradFunc(i,u),l=Array.isArray(c)?c:[c];A(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),A(l.every(d=>d instanceof _t),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return l.forEach((d,p)=>{h[p]=()=>d}),h};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Nn(),r=await this.backend.time(e);return r.wallMs=Nn()-t,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Iw;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}za.nextTensorId=0,za.nextVariableId=0;function M_(n){const e=tm(ne(n),"float32");return q.makeTensor(e,n,"float32")}function kw(){const n=M1();if(n._tfengine==null){const e=new r_(n);n._tfengine=new za(e)}return i_(n._tfengine.ENV),D_(()=>n._tfengine),n._tfengine}const q=kw();function L_(n,e){const t={a:n,b:e};return q.runKernel(La,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P_(){return typeof navigator<"u"&&navigator!=null}function Sw(n){if(n||P_()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Nw(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tn=Z();Tn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Tn.registerFlag("IS_BROWSER",()=>Nw()),Tn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u"),Tn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Tn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),Tn.registerFlag("PROD",()=>!1),Tn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Tn.getBool("DEBUG")),Tn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Tn.registerFlag("IS_TEST",()=>!1),Tn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Tn.getBool("DEBUG")),Tn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),Tn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),Tn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mh(n,e){let t=n;if(or(n))return e==="string"?[]:[n.length];if(vw(n)){const s=n.channels||"RGBA";return[n.height,n.width*s.length]}else if(bw(n))return[n.buffer.size/(e==null?4:El(e))];if(!Array.isArray(n))return[];const r=[];for(;Array.isArray(t)||or(t)&&e!=="string";)r.push(t.length),t=t[0];return Array.isArray(n)&&Z().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Tw(n,r,[]),r}function Tw(n,e,t){if(t=t||[],!Array.isArray(n)&&!or(n)){A(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}A(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),A(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const r=e.slice(1);for(let s=0;s<n.length;++s)Tw(n[s],r,t.concat(s))}function Ew(n,e,t,r){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${r}' must be ${n} tensor, but got ${e} tensor`)}}function B(n,e,t,r="numeric"){if(n instanceof te())return Ew(r,n.dtype,e,t),n;let s=_a(n);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Ew(r,s,e,t),n==null||!or(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}const o=Mh(n,s);!or(n)&&!Array.isArray(n)&&(n=[n]);const i=s!=="string"?Oo(n,s):_o(n,[],!0);return q.makeTensor(i,o,s)}function Rw(n,e,t,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,a)=>B(o,`${e}[${a}]`,t,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B_="__op";function X(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const r=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+B_;const s=(...o)=>{q.startScope(t);try{const a=r(...o);return nm(a)&&console.error("Cannot return a Promise inside of tidy."),q.endScope(a),a}catch(a){throw q.endScope(null),a}};return Object.defineProperty(s,"name",{value:t,configurable:!0}),s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z_(n,e){const t=B(n,"real","complex"),r=B(e,"imag","complex");Yf(t.shape,r.shape,`real and imag shapes, ${t.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:t,imag:r};return q.runKernel(dm,s)}const Va=X({complex_:z_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lh(n,e,t,r){if(r==null)r=_a(n);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(bw(n)||vw(n)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return q.backend.createTensorFromGPUData(n,e||t,r)}if(!or(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){gs(e);const s=ne(e),o=ne(t);A(s===o,()=>`Based on the provided shape, [${e}], the tensor should have ${s} values but has ${o}`);for(let a=0;a<t.length;++a){const i=t[a],u=a===t.length-1?i!==ne(e.slice(a)):!0;A(t[a]===e[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!or(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=r!=="string"?Oo(n,r):_o(n,[],!0),q.makeTensor(n,e,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aw(n,e,t){const r=Mh(n,t);return Lh(n,e,r,t)}class Wa{static join(e){return new Wa(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(r=>or(r)?r.buffer:r),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let r=0;r<e.length;r++){const s=e[r];r!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=t+s.byteLength;this.shards.push({buffer:s,start:t,end:o}),t=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const r=this.findShardForByte(e);if(r===-1)throw new Error(`Could not find start shard for byte ${e}`);const s=t-e,o=new ArrayBuffer(s),a=new Uint8Array(o);let i=0;for(let u=r;u<this.shards.length;u++){const c=this.shards[u],h=e+i-c.start,d=i,f=Math.min(t,c.end)-c.start,m=new Uint8Array(c.buffer,h,f-h);if(a.set(m,d),i+=m.length,t<c.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(s){return e<s.start?-1:e>=s.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const r=V_(this.shards,t);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}}function V_(n,e){let t=0,r=n.length;for(;t<=r;){const s=Math.floor((r-t)/2)+t,o=e(n[s]);if(o===0)return s;o<0?r=s:t=s+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ur(){return q}function $w(){return q.memory()}function Q(n,e){return q.tidy(n,e)}function Ge(n){ww(n).forEach(t=>t.dispose())}function Gr(n){return q.keep(n)}function Dw(n,e,t=1){return q.registerBackend(n,e,t)}function W_(){return q.backend}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fw=4;async function Ow(n,e){const t=[],r=[],s=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<s.length;++a){const i=s[a],u=Array.isArray(n)?n[a].tensor:n[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);const c={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const l=new Promise(async h=>{const d=await u.bytes(),p=d.reduce((g,x)=>g+x.length,0)+Fw*d.length,f=new Uint8Array(p);let m=0;for(let g=0;g<d.length;g++){const x=d[g],y=new Uint8Array(new Uint32Array([x.length]).buffer);f.set(y,m),m+=Fw,f.set(x,m),m+=x.length}h(f)});r.push(l)}else r.push(u.data());e!=null&&(c.group=e),t.push(c)}const o=await Promise.all(r);return{data:U_(o),specs:t}}function U_(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const r=new Uint8Array(e);let s=0;return t.forEach(o=>{r.set(new Uint8Array(o.buffer),s),s+=o.byteLength}),r.buffer}const sg=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function _w(n){return sg?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function G_(n){if(sg)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let r=0,s=e.length;r<s;r++)t+=String.fromCharCode(e[r]);return btoa(t)}function H_(n){if(sg){const r=Buffer.from(n,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let r=0;r<e.length;++r)t.set([e.charCodeAt(r)],r);return t.buffer}function q_(n){return Wa.join(n)}function Mw(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:_w(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:_w(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Wa(n.weightData).byteLength}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return yn.instance==null&&(yn.instance=new yn),yn.instance}static registerSaveRouter(e){yn.getInstance().saveRouters.push(e)}static registerLoadRouter(e){yn.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return yn.getHandlers(e,"save")}static getLoadHandlers(e,t){return yn.getHandlers(e,"load",t)}static getHandlers(e,t,r){const s=[];return(t==="load"?yn.getInstance().loadRouters:yn.getInstance().saveRouters).forEach(a=>{const i=a(e,r);i!==null&&s.push(i)}),s}}const j_=n=>yn.getSaveHandlers(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const og="tensorflowjs",ag=1,Mo="models_store",Hs="model_info_store";function Lw(){if(!Z().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function ig(n){const e=n.result;e.createObjectStore(Mo,{keyPath:"modelPath"}),e.createObjectStore(Hs,{keyPath:"modelPath"})}class Lo{constructor(e){if(this.indexedDB=Lw(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((r,s)=>{const o=this.indexedDB.open(og,ag);o.onupgradeneeded=()=>ig(o),o.onsuccess=()=>{const a=o.result;if(t==null){const i=a.transaction(Mo,"readonly"),c=i.objectStore(Mo).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(c.result.modelArtifacts)},c.onerror=l=>(a.close(),s(c.error)),i.oncomplete=()=>a.close()}else{t.weightData=Wa.join(t.weightData);const i=Mw(t),u=a.transaction(Hs,"readwrite");let c=u.objectStore(Hs),l;try{l=c.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(d){return s(d)}let h;l.onsuccess=()=>{h=a.transaction(Mo,"readwrite");const d=h.objectStore(Mo);let p;try{p=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(f){return s(f)}p.onsuccess=()=>r({modelArtifactsInfo:i}),p.onerror=f=>{c=u.objectStore(Hs);const m=c.delete(this.modelPath);m.onsuccess=()=>(a.close(),s(p.error)),m.onerror=g=>(a.close(),s(p.error))}},l.onerror=d=>(a.close(),s(l.error)),u.oncomplete=()=>{h==null?a.close():h.oncomplete=()=>a.close()}}},o.onerror=a=>s(o.error)})}}Lo.URL_SCHEME="indexeddb://";const Pw=n=>Z().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Lo.URL_SCHEME)?K_(n.slice(Lo.URL_SCHEME.length)):null;yn.registerSaveRouter(Pw),yn.registerLoadRouter(Pw);function K_(n){return new Lo(n)}function X_(n){return n.startsWith(Lo.URL_SCHEME)?n.slice(Lo.URL_SCHEME.length):n}class Y_{constructor(){this.indexedDB=Lw()}async listModels(){return new Promise((e,t)=>{const r=this.indexedDB.open(og,ag);r.onupgradeneeded=()=>ig(r),r.onsuccess=()=>{const s=r.result,o=s.transaction(Hs,"readonly"),i=o.objectStore(Hs).getAll();i.onsuccess=()=>{const u={};for(const c of i.result)u[c.modelPath]=c.modelArtifactsInfo;e(u)},i.onerror=u=>(s.close(),t(i.error)),o.oncomplete=()=>s.close()},r.onerror=s=>t(r.error)})}async removeModel(e){return e=X_(e),new Promise((t,r)=>{const s=this.indexedDB.open(og,ag);s.onupgradeneeded=()=>ig(s),s.onsuccess=()=>{const o=s.result,a=o.transaction(Hs,"readwrite"),i=a.objectStore(Hs),u=i.get(e);let c;u.onsuccess=()=>{if(u.result==null)return o.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const l=i.delete(e),h=()=>{c=o.transaction(Mo,"readwrite");const p=c.objectStore(Mo).delete(e);p.onsuccess=()=>t(u.result.modelArtifactsInfo),p.onerror=f=>r(u.error)};l.onsuccess=h,l.onerror=d=>(h(),o.close(),r(u.error))}},u.onerror=l=>(o.close(),r(u.error)),a.oncomplete=()=>{c==null?o.close():c.oncomplete=()=>o.close()}},s.onerror=o=>r(s.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xs="/",Ua="tensorflowjs_models",Bw="info",Q_="model_topology",J_="weight_specs",Z_="weight_data",eM="model_metadata";function zw(n){return{info:[Ua,n,Bw].join(xs),topology:[Ua,n,Q_].join(xs),weightSpecs:[Ua,n,J_].join(xs),weightData:[Ua,n,Z_].join(xs),modelMetadata:[Ua,n,eM].join(xs)}}function Vw(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function tM(n){const e=n.split(xs);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(xs)}function nM(n){return n.startsWith(Po.URL_SCHEME)?n.slice(Po.URL_SCHEME.length):n}class Po{constructor(e){if(!Z().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=zw(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=Mw(e),o=Wa.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,G_(o));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:s}}catch{throw Vw(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const i=JSON.parse(o);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=H_(a),t}}Po.URL_SCHEME="localstorage://";const Ww=n=>Z().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Po.URL_SCHEME)?rM(n.slice(Po.URL_SCHEME.length)):null;yn.registerSaveRouter(Ww),yn.registerLoadRouter(Ww);function rM(n){return new Po(n)}class sM{constructor(){A(Z().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),A(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Ua+xs,r=xs+Bw;for(let s=0;s<this.LS.length;++s){const o=this.LS.key(s);if(o.startsWith(t)&&o.endsWith(r)){const a=tM(o);e[a]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=nM(e);const t=zw(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(t.info));return Vw(t),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uw="://";class Hr{constructor(){this.managers={}}static getInstance(){return Hr.instance==null&&(Hr.instance=new Hr),Hr.instance}static registerManager(e,t){A(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Uw)&&(e=e.slice(0,e.indexOf(Uw))),A(e.length>0,()=>"scheme must not be an empty string.");const r=Hr.getInstance();A(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){const t=Hr.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Hr.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oM{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!Z().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();const s=this.functionRefs[r.data.index];s(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return cw(e)}}if(Z().get("IS_BROWSER")){Z().setPlatform("browser",new oM);try{Hr.registerManager(Po.URL_SCHEME,new sM)}catch{}try{Hr.registerManager(Lo.URL_SCHEME,new Y_)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aM={importFetch:()=>require("node-fetch")};let ug;class iM{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return Z().global.fetch!=null?Z().global.fetch(e,t):(ug==null&&(ug=aM.importFetch()),ug(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}Z().get("IS_NODE")&&!Z().get("IS_BROWSER")&&Z().setPlatform("node",new iM);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function We(n,e="float32",t){return e=e||"float32",gs(n),new Jt(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uM(n,e){const t=B(n,"x","cast");if(!ZO(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:t},s={dtype:e};return q.runKernel(Xi,r,s)}const ge=X({cast_:uM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cM(n){const t={x:B(n,"x","clone","string_or_numeric")};return q.runKernel(uu,t)}const Bo=X({clone_:cM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */kw(),F_({buffer:We,cast:ge,clone:Bo,print:lM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hM(n,e){let t=B(n,"a","add"),r=B(e,"b","add");[t,r]=St(t,r);const s={a:t,b:r};return q.runKernel(La,s)}const le=X({add_:hM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dM(n,e){let t=B(n,"a","floorDiv"),r=B(e,"b","floorDiv");[t,r]=St(t,r);const s={a:t,b:r};return q.runKernel(au,s)}const Gw=X({floorDiv_:dM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(n,e){let t=B(n,"a","div"),r=B(e,"b","div");if([t,r]=St(t,r),t.dtype==="int32"&&r.dtype==="int32")return Gw(t,r);const s={a:t,b:r},o={};return q.runKernel(eu,s,o)}const Ae=X({div_:pM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(n,e){let t=B(n,"a","mul"),r=B(e,"b","mul");[t,r]=St(t,r);const s={a:t,b:r};return q.runKernel(xu,s)}const G=X({mul_:fM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mM(n){const e=B(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return q.runKernel(Ml,t)}else{const t={x:e};return q.runKernel(Rl,t)}}const vn=X({abs_:mM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gM(n){const t={x:B(n,"x","acos")};return q.runKernel(Wi,t)}const xM=X({acos_:gM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(n){const t={x:B(n,"x","acosh")};return q.runKernel(Ui,t)}const vM=X({acosh_:yM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bM(n,e=null,t=!1){const s={x:B(n,"x","all","bool")},o={axis:e,keepDims:t};return q.runKernel(am,s,o)}const Hw=X({all_:bM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wM(n,e=null,t=!1){const s={x:B(n,"x","any","bool")},o={axis:e,keepDims:t};return q.runKernel(im,s,o)}const cg=X({any_:wM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CM(n,e=0){const r={x:B(n,"x","argMax")},s={axis:e};return q.runKernel(Al,r,s)}const zu=X({argMax_:CM});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IM(n,e=0){const r={x:B(n,"x","argMin")},s={axis:e};return q.runKernel($l,r,s)}const kM=X({argMin_:IM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SM(n){const t={x:B(n,"x","asin")};return q.runKernel(Gi,t)}const NM=X({asin_:SM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(n){const t={x:B(n,"x","asinh")};return q.runKernel(Hi,t)}const EM=X({asinh_:TM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(n){const t={x:B(n,"x","atan")};return q.runKernel(qi,t)}const AM=X({atan_:RM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $M(n,e){let t=B(n,"a","atan2"),r=B(e,"b","atan2");[t,r]=St(t,r);const s={a:t,b:r};return q.runKernel(Ki,s)}const DM=X({atan2_:$M});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FM(n){const t={x:B(n,"x","atanh")};return q.runKernel(ji,t)}const OM=X({atanh_:FM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vu(n,e,t,r,s="NHWC",o){const a=n[3],i=[...e,a],u=vs(s);return Zt(n,i,t,o,r,null,null,u)}function ar(n,e,t,r,s,o,a="channelsLast"){const[i,u]=Wu(e);let c;if(a==="channelsLast")c=[i,u,n[3],n[3]];else if(a==="channelsFirst")c=[i,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Zt(n,c,t,r,s,o,!1,a)}function ys(n,e,t,r,s,o,a="NDHWC"){const[i,u,c]=hg(e);let l,h;if(a==="NDHWC")h="channelsLast",l=[i,u,c,n[4],n[4]];else if(a==="NCDHW")h="channelsFirst",l=[i,u,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return qs(n,l,t,r,s,!1,h,o)}function Zt(n,e,t,r,s,o,a=!1,i="channelsLast"){let[u,c,l,h]=[-1,-1,-1,-1];if(i==="channelsLast")[u,c,l,h]=n;else if(i==="channelsFirst")[u,h,c,l]=n;else throw new Error(`Unknown dataFormat ${i}`);const[d,p,,f]=e,[m,g]=Wu(t),[x,y]=Wu(r),b=Ga(d,x),v=Ga(p,y),{padInfo:w,outHeight:C,outWidth:T}=LM(s,c,l,m,g,b,v,o,i),S=a?f*h:f;let k;return i==="channelsFirst"?k=[u,S,C,T]:i==="channelsLast"&&(k=[u,C,T,S]),{batchSize:u,dataFormat:i,inHeight:c,inWidth:l,inChannels:h,outHeight:C,outWidth:T,outChannels:S,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:b,effectiveFilterWidth:v,dilationHeight:x,dilationWidth:y,inShape:n,outShape:k,filterShape:e}}function qs(n,e,t,r,s,o=!1,a="channelsLast",i){let[u,c,l,h,d]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,c,l,h,d]=n;else if(a==="channelsFirst")[u,d,c,l,h]=n;else throw new Error(`Unknown dataFormat ${a}`);const[p,f,m,,g]=e,[x,y,b]=hg(t),[v,w,C]=hg(r),T=Ga(p,v),S=Ga(f,w),k=Ga(m,C),{padInfo:N,outDepth:I,outHeight:E,outWidth:F}=PM(s,c,l,h,x,y,b,T,S,k,i),O=o?g*d:g;let D;return a==="channelsFirst"?D=[u,O,I,E,F]:a==="channelsLast"&&(D=[u,I,E,F,O]),{batchSize:u,dataFormat:a,inDepth:c,inHeight:l,inWidth:h,inChannels:d,outDepth:I,outHeight:E,outWidth:F,outChannels:O,padInfo:N,strideDepth:x,strideHeight:y,strideWidth:b,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:T,effectiveFilterHeight:S,effectiveFilterWidth:k,dilationDepth:v,dilationHeight:w,dilationWidth:C,inShape:n,outShape:D,filterShape:e}}function _M(n,e,t,r,s){r==null&&(r=lg(n,e,t));const o=n[0],a=n[1],i=Uu((o-e+2*r)/t+1,s),u=Uu((a-e+2*r)/t+1,s);return[i,u]}function MM(n,e,t,r,s,o){s==null&&(s=lg(n,e[0],r[0]));const a=[0,0,0,t];for(let i=0;i<3;i++)n[i]+2*s>=e[i]&&(a[i]=Uu((n[i]-e[i]+2*s)/r[i]+1,o));return a}function lg(n,e,t,r=1){const s=Ga(e,r);return Math.floor((n[0]*(t-1)-t+s)/2)}function Wu(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function hg(n){return typeof n=="number"?[n,n,n]:n}function Ga(n,e){return e<=1?n:n+(n-1)*(e-1)}function LM(n,e,t,r,s,o,a,i,u){let c,l,h;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=_M([e,t],o,r,n,i);l=p[0],h=p[1]}else if(n==="same"){l=Math.ceil(e/r),h=Math.ceil(t/s);const d=Math.max(0,(l-1)*r+o-e),p=Math.max(0,(h-1)*s+a-t),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2),x=p-g;c={top:f,bottom:m,left:g,right:x,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((e-o+1)/r),h=Math.ceil((t-a+1)/s);else if(typeof n=="object"){const d=u==="channelsLast"?n[1][0]:n[2][0],p=u==="channelsLast"?n[1][1]:n[2][1],f=u==="channelsLast"?n[2][0]:n[3][0],m=u==="channelsLast"?n[2][1]:n[3][1];c={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},l=Uu((e-o+d+p)/r+1,i),h=Uu((t-a+f+m)/s+1,i)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:l,outWidth:h}}function PM(n,e,t,r,s,o,a,i,u,c,l){let h,d,p,f;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=MM([e,t,r,1],[i,u,c],1,[s,o,a],n,l);d=g[0],p=g[1],f=g[2]}else if(n==="same"){d=Math.ceil(e/s),p=Math.ceil(t/o),f=Math.ceil(r/a);const m=(d-1)*s+i-e,g=(p-1)*o+u-t,x=(f-1)*a+c-r,y=Math.floor(m/2),b=m-y,v=Math.floor(g/2),w=g-v,C=Math.floor(x/2),T=x-C;h={top:v,bottom:w,left:C,right:T,front:y,back:b,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function Uu(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function zo(n){const[e,t,r]=Wu(n);return e===1&&t===1&&r===1}function cn(n,e){return zo(n)||zo(e)}function Vo(n){return Wu(n).every(e=>e>0)}function vs(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function En(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")A(Fa(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(r=>{r.forEach(s=>{A(Fa(s),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${s}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(n,e){const r={x:B(n,"x","reshape","string_or_numeric")},s={shape:e};return q.runKernel(gh,r,s)}const K=X({reshape_:BM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zM(n,e,t,r,s){const o=B(n,"x","avgPool","float32"),a=1;A(cn(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=o,u=!1;o.rank===3&&(u=!0,i=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),En("avgPool",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s};let h=q.runKernel(Dl,c,l);return h=ge(h,o.dtype),u?K(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const dg=X({avgPool_:zM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VM(n,e,t,r,s,o="NDHWC"){const a=B(n,"x","avgPool3d","float32");let i=a,u=!1;a.rank===4&&(u=!0,i=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),A(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),A(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),A(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),En("avgPool3d",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:o};let h=q.runKernel(Fl,c,l);return h=ge(h,i.dtype),u?K(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const WM=X({avgPool3d_:VM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(n,e=0){A(n.length>=1,()=>"Pass at least one tensor to concat");const t=Rw(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return Bo(t[0]);const r=t,s={axis:e};return q.runKernel(Ll,r,s)}const Rn=X({concat_:UM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(n,e,t=!1,r=!1){let s=B(n,"a","matMul"),o=B(e,"b","matMul");[s,o]=St(s,o);const a={a:s,b:o},i={transposeA:t,transposeB:r};return q.runKernel(Ol,a,i)}const tt=X({matMul_:GM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HM(n){const t={x:B(n,"x","sigmoid","float32")};return q.runKernel(Eu,t)}const Ha=X({sigmoid_:HM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM(n,e,t){const r=B(n,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const s={x:r},o={begin:e,size:t};return q.runKernel(wh,s,o)}const ct=X({slice_:qM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(n){const t={x:B(n,"x","tanh","float32")};return q.runKernel(Ou,t)}const Ph=X({tanh_:jM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KM(n,e,t){const r=B(n,"x","batchToSpaceND"),s=e.reduce((i,u)=>i*u);A(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),A(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),A(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const o={x:r},a={blockShape:e,crops:t};return q.runKernel(_l,o,a)}const pg=X({batchToSpaceND_:KM});function XM(n){let e;return n.rank===0||n.rank===1?e=K(n,[1,1,1,n.size]):n.rank===2?e=K(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YM(n,e,t,r,s,o){o==null&&(o=.001);const a=B(n,"x","batchNorm"),i=B(e,"mean","batchNorm"),u=B(t,"variance","batchNorm");let c;s!=null&&(c=B(s,"scale","batchNorm"));let l;r!=null&&(l=B(r,"offset","batchNorm")),A(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:XM(a),scale:c,offset:l,mean:i,variance:u},p={varianceEpsilon:o},f=q.runKernel(ql,d,p);return K(f,a.shape)}const Bh=X({batchNorm_:YM});function QM(n,e,t,r,s,o){const a=B(n,"x","batchNorm"),i=B(e,"mean","batchNorm"),u=B(t,"variance","batchNorm");let c;s!=null&&(c=B(s,"scale","batchNorm"));let l;return r!=null&&(l=B(r,"offset","batchNorm")),A(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),A(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),A(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),l!=null&&A(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Bh(a,i,u,l,c,o)}const JM=X({batchNorm2d_:QM});function ZM(n,e,t,r,s,o){const a=B(n,"x","batchNorm"),i=B(e,"mean","batchNorm"),u=B(t,"variance","batchNorm");let c;s!=null&&(c=B(s,"scale","batchNorm"));let l;return r!=null&&(l=B(r,"offset","batchNorm")),A(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),A(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),A(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),l!=null&&A(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Bh(a,i,u,l,c,o)}const e3=X({batchNorm3d_:ZM});function t3(n,e,t,r,s,o){const a=B(n,"x","batchNorm"),i=B(e,"mean","batchNorm"),u=B(t,"variance","batchNorm");let c;s!=null&&(c=B(s,"scale","batchNorm"));let l;return r!=null&&(l=B(r,"offset","batchNorm")),A(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),A(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),A(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),l!=null&&A(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Bh(a,i,u,l,c,o)}const n3=X({batchNorm4d_:t3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r3(n,e,t){const r=B(n,"x","bincount"),s=B(e,"weights","bincount");A(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const o={x:r,weights:s},a={size:t};return q.runKernel(lm,o,a)}const s3=X({bincount_:r3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o3(n,e){let t=B(n,"broadcastTo","x");const r=t.shape;if(gs(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const c=t.shape.slice();for(;c.length<e.length;)c.unshift(1);t=K(t,c)}const s=t.shape,o=Array.from(e);for(let c=e.length-1;c>=0;c--)if(s[c]===e[c])o[c]=1;else if(t.shape[c]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(o.map((c,l)=>c>1?l:-1).filter(c=>c>=0).length===0)return Bo(t);const i={x:t},u={reps:o};return q.runKernel(_u,i,u)}const Gu=X({broadcastTo_:o3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a3(n){const t={x:B(n,"x","ceil","float32")};return q.runKernel(Yi,t)}const i3=X({ceil_:a3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zh(n,e,t){gs(n),t=t||_a(e);const r={shape:n,value:e,dtype:t};return q.runKernel(Tm,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u3(n,e,t){const r=B(n,"x","clipByValue");if(A(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return zh(r.shape,e,r.dtype);const s={x:r},o={clipValueMin:e,clipValueMax:t};return q.runKernel(Qi,s,o)}const Qn=X({clipByValue_:u3});function c3(n){return Rn(n,0)}const l3=X({concat1d_:c3});function h3(n,e){return Rn(n,e)}const d3=X({concat2d_:h3});function p3(n,e){return Rn(n,e)}const f3=X({concat3d_:p3});function m3(n,e){return Rn(n,e)}const g3=X({concat4d_:m3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x3(n,e,t,r,s="NHWC",o=[1,1],a){const i=B(n,"x","conv2d","float32"),u=B(e,"filter","conv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=K(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),A(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),En("conv2d",r,a);const h=s==="NHWC"?c.shape[3]:c.shape[1];A(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),A(cn(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),A(Vo(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),A(Vo(t),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:c,filter:u},p={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},f=q.runKernel(Pl,d,p);return l?K(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Wo=X({conv2d_:x3});function y3(n,e,t,r,s="NWC",o=1,a){const i=B(n,"x","conv1d"),u=B(e,"filter","conv1d");let c=i,l=!1;i.rank===2&&(l=!0,c=K(i,[1,i.shape[0],i.shape[1]])),A(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),A(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),En("conv1d",r,a),A(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),A(cn(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),A(Vo(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),A(Vo(t),()=>"Error in conv1D: Stride should be larger than 0."),A(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=K(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=K(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=Wo(d,h,[1,t],r,"NHWC",[1,o],a);return l?K(g,[g.shape[2],g.shape[3]]):K(g,[g.shape[0],g.shape[2],g.shape[3]])}const qw=X({conv1d_:y3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v3(n,e,t,r,s,o="NHWC",a){A(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,u=e,c=!1;e.rank===3&&(c=!0,u=K(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,n[0],n[1],n[2]]),A(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),A(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),A(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const l=o==="NHWC"?i[3]:i[1],h=o==="NHWC"?u.shape[3]:u.shape[1];A(l===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[2]}.`),A(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),En("conv2dDerInput",s,a);const d={dy:u,filter:t},p={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,inputShape:i},f=q.runKernel(Bl,d,p);return c?K(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const fg=X({conv2DBackpropInput_:v3});function b3(n,e,t,r,s,o){const a=B(n,"x","conv2dTranspose"),i=B(e,"filter","conv2dTranspose");return fg(t,a,i,r,s,"NHWC",o)}const jw=X({conv2dTranspose_:b3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w3(n,e,t,r,s="NDHWC",o=[1,1,1]){const a=B(n,"x","conv3d"),i=B(e,"filter","conv3d");let u=a,c=!1;a.rank===4&&(c=!0,u=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),A(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),A(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),A(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),A(cn(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),A(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),A(Vo(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),A(Vo(t),()=>"Error in conv3D: Strides should be larger than 0.");const l={x:u,filter:i},h={strides:t,pad:r,dataFormat:s,dilations:o},d=q.runKernel(zl,l,h);return c?K(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const C3=X({conv3d_:w3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I3(n,e,t,r,s){A(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,a=e,i=!1;e.rank===4&&(i=!0,a=K(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const u=o[4],c=a.shape[4];A(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),A(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),A(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),A(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),A(c===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[4]}.`);const l={dy:a,filter:t},h={pad:s,strides:r,inputShape:o},d=q.runKernel(mm,l,h);return i?K(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Kw=X({conv3DBackpropInput_:I3});function k3(n,e,t,r,s){const o=B(n,"x","conv3dTranspose"),a=B(e,"filter","conv3dTranspose");return Kw(t,o,a,r,s)}const S3=X({conv3dTranspose_:k3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N3(n){const t={x:B(n,"x","cos","float32")};return q.runKernel(Ji,t)}const mg=X({cos_:N3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T3(n){const t={x:B(n,"x","cosh","float32")};return q.runKernel(Zi,t)}const Xw=X({cosh_:T3});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E3(n,e=0,t=!1,r=!1){const o={x:B(n,"x","cumprod")},a={axis:e,exclusive:t,reverse:r};return q.runKernel(gm,o,a)}const gg=X({cumprod_:E3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R3(n,e=0,t=!1,r=!1){const o={x:B(n,"x","cumsum")},a={axis:e,exclusive:t,reverse:r};return q.runKernel(Vl,o,a)}const Yw=X({cumsum_:R3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A3(n,e,t,r=!1){const s=B(n,"x","denseBincount"),o=B(e,"weights","denseBincount");A(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),A(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(o.size===s.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${o.shape}.`);const a={x:s,weights:o},i={size:t,binaryOutput:r};return q.runKernel(ym,a,i)}const Qw=X({denseBincount_:A3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $3(n,e,t="NHWC"){const r=B(n,"x","depthToSpace","float32"),s=t==="NHWC"?r.shape[1]:r.shape[2],o=t==="NHWC"?r.shape[2]:r.shape[3],a=t==="NHWC"?r.shape[3]:r.shape[1];A(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),A(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e}  for depthToSpace with input shape
    ${r.shape}`),A(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${r.shape}`),A(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`);const i={x:r},u={blockSize:e,dataFormat:t};return q.runKernel(vm,i,u)}const D3=X({depthToSpace_:$3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(n,e,t,r,s="NHWC",o=[1,1],a){const i=B(n,"x","depthwiseConv2d","float32"),u=B(e,"filter","depthwiseConv2d","float32");let c=i,l=!1;i.rank===3&&(l=!0,c=K(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),A(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const h=s==="NHWC"?c.shape[3]:c.shape[1];A(h===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`),En("depthwiseConv2d",r,a);const d={x:c,filter:u},p={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},f=q.runKernel(Wl,d,p);return l?K(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const xg=X({depthwiseConv2d_:F3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(n,e,t,r,s=[1,1],o="NHWC"){const a=B(n,"x","dilation2d"),i=B(e,"filter","dilation2d");A(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),A(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),A(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let u=a,c=!1;a.rank===3&&(u=K(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=!0),A(u.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${i.shape[2]}`);const l={x:u,filter:i},h={strides:t,pad:r,dilations:s},d=q.runKernel(Ul,l,h);return c?K(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const _3=X({dilation2d_:O3});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qa(n,e){const t=n.length,r=[];for(let s=0;s<t;s++){const o=t-1-s,a=n[o]||1;(e[e.length-1-s]||1)>1&&a===1&&r.unshift(o)}return r}function Mt(n,e){const t=[];for(let r=0;r<e.length;r++){const s=n[n.length-r-1],o=e.length-r-1,a=e[o];(s==null||s===1&&a>1)&&t.unshift(o)}return t}function Pe(n,e){const t=Math.max(n.length,e.length),r=new Array(t);for(let s=0;s<t;s++){let o=n[n.length-s-1];o==null&&(o=1);let a=e[e.length-s-1];if(a==null&&(a=1),o===1)r[t-s-1]=a;else if(a===1)r[t-s-1]=o;else if(o!==a){const i=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(i)}else r[t-s-1]=o}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M3(n,e){let t=B(n,"a","equal","string_or_numeric"),r=B(e,"b","equal","string_or_numeric");[t,r]=St(t,r),Pe(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(Gl,s)}const qr=X({equal_:M3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L3(n,e,t){const r=B(e,"a","where"),s=B(t,"b","where"),o=B(n,"condition","where","bool"),a=Pe(Pe(o.shape,r.shape),s.shape),i=Gu(o,a),u=Gu(r,a),c=Gu(s,a),l={condition:i,t:u,e:c};return q.runKernel(bh,l)}const bn=X({where_:L3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P3(n){const t={x:B(n,"x","zerosLike")};return q.runKernel(Eh,t)}const Xe=X({zerosLike_:P3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B3(n,e){let t=B(n,"a","div"),r=B(e,"b","div");[t,r]=St(t,r);const s=Ae(t,r),o=Xe(s),a=qr(r,o);return bn(a,o,s)}const z3=X({divNoNan_:B3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V3(n,e){const t=B(n,"t1","dot"),r=B(e,"t2","dot");A((t.rank===1||t.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${r.rank}.`);const s=t.rank===1?t.size:t.shape[1],o=r.rank===1?r.size:r.shape[0];if(A(s===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${o}.`),t.rank===1&&r.rank===1){const a=K(t,[1,-1]),i=K(r,[-1,1]),u=tt(a,i);return K(u,[])}else if(t.rank===1&&r.rank===2){const a=K(t,[1,-1]),i=K(r,[r.shape[0],r.shape[1]]),u=tt(a,i);return K(u,[u.size])}else if(t.rank===2&&r.rank===1){const a=K(r,[-1,1]),i=tt(t,a);return K(i,[i.size])}else{const a=K(r,[r.shape[0],r.shape[1]]);return tt(t,a)}}const W3=X({dot_:V3});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U3(n,...e){const t=e.map((s,o)=>B(s,`tensors${o}`,"einsum")),r={equation:n};return q.runKernel(km,t,r)}const Hu=X({einsum_:U3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G3(n){const t={x:B(n,"x","elu","float32")};return q.runKernel(tu,t)}const Vh=X({elu_:G3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H3(n){let e=B(n,"x","erf");A(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=ge(e,"float32"));const t={x:e};return q.runKernel(nu,t)}const Jw=X({erf_:H3});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yg(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function Zw(n,e,t){const r=n.length+e.length,s=[];let o=0,a=0;for(let i=0;i<r;i++)t.indexOf(i)===-1?s.push(n[o++]):s.push(e[a++]);return s}function Ht(n,e){const t=[],r=n.length;for(let o=0;o<r;o++)e.indexOf(o)===-1&&t.push(n[o]);const s=e.map(o=>n[o]);return[t,s]}function Dt(n,e){const t=e.map(r=>1);return Zw(n,t,e)}function en(n,e,t){A(yg(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function gt(n,e){if(yg(n,e))return null;const t=[];for(let r=0;r<e;++r)n.indexOf(r)===-1&&t.push(r);return n.forEach(r=>t.push(r)),t}function js(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Nt(n,e){const t=[];for(let r=e-n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q3(n,e=null,t=!1){const s={x:B(n,"x","max")},o={reductionIndices:e,keepDims:t};return q.runKernel(nh,s,o)}const Sr=X({max_:q3});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j3(n,e=null,t=!1){const s={x:B(n,"x","min")},o={axis:e,keepDims:t};return q.runKernel(ah,s,o)}const Wh=X({min_:j3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K3(n,e){let t=B(n,"base","pow"),r=B(e,"exp","pow");[t,r]=St(t,r);const s={a:t,b:r};return q.runKernel(yu,s)}const Uo=X({pow_:K3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nt(n,e){if((or(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&or(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Lh(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X3(n){const t={x:B(n,"x","sqrt","float32")};return q.runKernel(Au,t)}const ln=X({sqrt_:X3});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y3(n){const e=B(n,"x","square"),t={};return q.runKernel("Square",{x:e},t)}const dt=X({square_:Y3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q3(n,e=null,t=!1){let r=B(n,"x","sum");r.dtype==="bool"&&(r=ge(r,"int32"));const s={x:r},o={axis:e,keepDims:t};return q.runKernel(Ch,s,o)}const Re=X({sum_:Q3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J3(n,e="euclidean",t=null,r=!1){n=B(n,"x","norm");const s=eC(n,e,t);let o=s.shape;if(r){const a=Ve(t,n.shape);o=Dt(s.shape,a)}return K(s,o)}function eC(n,e,t=null){if(n.rank===0)return vn(n);if(n.rank!==1&&t===null)return eC(K(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Re(vn(n),t);if(e===1/0)return Sr(vn(n),t);if(e===-1/0)return Wh(vn(n),t);if(e==="euclidean"||e===2)return ln(Re(Uo(vn(n),nt(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Sr(Re(vn(n),t[0]),t[1]-1);if(e===1/0)return Sr(Re(vn(n),t[1]),t[0]);if(e===-1/0)return Wh(Re(vn(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return ln(Re(dt(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Uh=X({norm_:J3});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z3(n,e=null,t=!1){return Uh(n,"euclidean",e,t)}const eL=X({euclideanNorm_:Z3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tL(n){const t={x:B(n,"x","exp")};return q.runKernel(ru,t)}const jr=X({exp_:tL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nL(n,e=0){const t=B(n,"x","expandDims","string_or_numeric");A(e<=t.rank,()=>"Axis must be <= rank of the tensor");const r={input:t},s={dim:e};return q.runKernel(Hl,r,s)}const An=X({expandDims_:nL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(n){const t={x:B(n,"x","expm1")};return q.runKernel(su,t)}const sL=X({expm1_:rL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oL(n,e){const t=B(n,"x","tile","string_or_numeric");A(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const r={x:t},s={reps:e};return q.runKernel(_u,r,s)}const Nr=X({tile_:oL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aL(n,e,t,r="float32"){e==null&&(e=n);const s=We([n,e],r),o=n<=e?n:e;for(let i=0;i<o;++i)s.set(1,i,i);const a=K(s.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return Nr(An(a,0),[t[0],1,1]);if(t.length===2)return Nr(An(An(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Nr(An(An(An(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const tC=X({eye_:aL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iL(n){const t={x:B(n,"x","floor","float32")};return q.runKernel(ou,t)}const Gh=X({floor_:iL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uL(n,e,t=0,r=0){const s=B(n,"x","gather"),o=B(e,"indices","gather","int32"),a={x:s,indices:o},i={axis:t,batchDims:r};return q.runKernel(jl,a,i)}const vg=X({gather_:uL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cL(n,e){let t=B(n,"a","greater","string_or_numeric"),r=B(e,"b","greater","string_or_numeric");[t,r]=St(t,r),Pe(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(Kl,s)}const Jn=X({greater_:cL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lL(n,e){let t=B(n,"a","greaterEqual","string_or_numeric"),r=B(e,"b","greaterEqual","string_or_numeric");[t,r]=St(t,r),Pe(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(iu,s)}const Go=X({greaterEqual_:lL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hL(n){const t={input:B(n,"input","imag")};return q.runKernel(Am,t)}const bg=X({imag_:hL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dL(n){const t={x:B(n,"x","isFinite")};return q.runKernel(cu,t)}const pL=X({isFinite_:dL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fL(n){const t={x:B(n,"x","isInf")};return q.runKernel(lu,t)}const mL=X({isInf_:fL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gL(n){const t={x:B(n,"x","isNaN")};return q.runKernel(hu,t)}const xL=X({isNaN_:gL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yL(n,e=.2){const r={x:B(n,"x","leakyRelu")},s={alpha:e};return q.runKernel(Xl,r,s)}const wg=X({leakyRelu_:yL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(n,e){let t=B(n,"a","less","string_or_numeric"),r=B(e,"b","less","string_or_numeric");[t,r]=St(t,r),Pe(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(Yl,s)}const Hh=X({less_:vL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(n,e){let t=B(n,"a","lessEqual","string_or_numeric"),r=B(e,"b","lessEqual","string_or_numeric");[t,r]=St(t,r),Pe(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(Ql,s)}const ja=X({lessEqual_:bL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wL(n,e=5,t=1,r=1,s=.5){const o=B(n,"x","localResponseNormalization");A(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),A(Fa(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=o,i=!1;o.rank===3&&(i=!0,a=K(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:a},c={depthRadius:e,bias:t,alpha:r,beta:s},l=q.runKernel(th,u,c);return i?K(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const CL=X({localResponseNormalization_:wL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IL(n){const t={x:B(n,"x","log","float32")};return q.runKernel(du,t)}const Kr=X({log_:IL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kL(n){const t={x:B(n,"x","log1p")};return q.runKernel(pu,t)}const nC=X({log1p_:kL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SL(n,e){A(Zf(n),()=>"The f passed in variableGrads(f) must be a function"),A(e==null||Array.isArray(e)&&e.every(c=>c instanceof _h),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const c in q.registeredVariables)e.push(q.registeredVariables[c])}const r=t?e.filter(c=>!c.trainable):null,s=e.length;e=e.filter(c=>c.trainable),A(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const o=!0,{value:a,grads:i}=q.gradients(n,e,null,o);A(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),A(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const u={};return e.forEach((c,l)=>{i[l]!=null&&(u[c.name]=i[l])}),r!=null&&r.forEach(c=>u[c.name]=null),{value:a,grads:u}}function Ka(n){return q.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NL(n){const t={x:B(n,"x","neg")};return q.runKernel(uh,t)}const Tt=X({neg_:NL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TL(n){const t={x:B(n,"x","softplus")};return q.runKernel(Ru,t)}const qu=X({softplus_:TL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EL(n){const e=B(n,"x","logSigmoid");return Ka(r=>({value:Tt(qu(Tt(r))),gradFunc:a=>G(a,Ha(Tt(r)))}))(e)}const RL=X({logSigmoid_:EL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AL(n,e){let t=B(n,"a","sub"),r=B(e,"b","sub");[t,r]=St(t,r);const s={a:t,b:r};return q.runKernel(Du,s)}const De=X({sub_:AL});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $L(n,e=-1){const t=B(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Ka((s,o)=>{const i=Sr(s,e,!0),u=De(s,i),c=De(ge(u,"float32"),Kr(Re(jr(u),e,!0)));return o([c]),{value:c,gradFunc:(h,d)=>{const[p]=d,f=!0,m=jr(p);return De(h,G(Re(h,e,f),m))}}})(t)}const rC=X({logSoftmax_:$L});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(n,e=null,t=!1){const r=B(n,"x","logSumExp"),s=Ve(e,r.shape),o=Sr(r,s,!0),a=De(r,o),i=jr(a),u=Re(i,s),c=Kr(u),l=le(K(o,c.shape),c);if(t){const h=Dt(l.shape,s);return K(l,h)}return l}const sC=X({logSumExp_:DL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FL(n,e){const t=B(n,"a","logicalAnd","bool"),r=B(e,"b","logicalAnd","bool");Pe(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(Jl,s)}const bs=X({logicalAnd_:FL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OL(n){const t={x:B(n,"x","logicalNot","bool")};return q.runKernel(Zl,t)}const Cg=X({logicalNot_:OL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _L(n,e){const t=B(n,"a","logicalOr","bool"),r=B(e,"b","logicalOr","bool");Pe(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(eh,s)}const oC=X({logicalOr_:_L});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(n,e){const t=B(n,"a","logicalXor","bool"),r=B(e,"b","logicalXor","bool");return Pe(t.shape,r.shape),bs(oC(n,e),Cg(bs(n,e)))}const LL=X({logicalXor_:ML});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PL(n,e,t,r,s){const o=B(n,"x","maxPool"),a=1;let i=o,u=!1;o.rank===3&&(u=!0,i=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),A(cn(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),En("maxPool",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s},h=q.runKernel(rh,c,l);return u?K(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Ig=X({maxPool_:PL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BL(n,e=[1,1,1],t,r,s,o="NDHWC"){const a=B(n,"x","maxPool3d");let i=a,u=!1;a.rank===4&&(u=!0,i=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),A(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),A(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),En("maxPool3d",r,s);const c={x:i},l={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:o},h=q.runKernel(sh,c,l);return u?K(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const zL=X({maxPool3d_:BL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VL(n,e){let t=B(n,"a","maximum"),r=B(e,"b","maximum");[t,r]=St(t,r),t.dtype==="bool"&&(t=ge(t,"int32"),r=ge(r,"int32")),Pe(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(fu,s)}const Ks=X({maximum_:VL});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WL(n,e=null,t=!1){const s={x:B(n,"x","mean")},o={axis:e,keepDims:t};return q.runKernel(oh,s,o)}const Ft=X({mean_:WL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qt(n,e="float32"){if(gs(n),e==="complex64"){const r=qt(n,"float32"),s=qt(n,"float32");return Va(r,s)}const t=un(ne(n),e);return q.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xs(n,e="float32"){if(gs(n),e==="complex64"){const r=Xs(n,"float32"),s=qt(n,"float32");return Va(r,s)}const t=tm(ne(n),e);return q.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UL(n,e){let t=B(n,"a","minimum"),r=B(e,"b","minimum");[t,r]=St(t,r),t.dtype==="bool"&&(t=ge(t,"int32"),r=ge(r,"int32")),Pe(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(mu,s)}const ju=X({minimum_:UL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GL(n,e,t){A(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const r=B(n,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s=t==="reflect"?1:0;for(let i=0;i<r.rank;i++)A(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),A(e[i][0]>=0&&e[i][0]<=r.shape[i]-s&&e[i][1]>=0&&e[i][1]<=r.shape[i]-s,()=>`Padding in dimension ${i} cannot be greater than or equal to ${r.shape[i]-s} or less than 0 for input of shape ${r.shape}`);const o={paddings:e,mode:t},a={x:r};return q.runKernel(ih,a,o)}const HL=X({mirrorPad_:GL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qL(n,e){let t=B(n,"a","mod"),r=B(e,"b","mod");[t,r]=St(t,r);const s={a:t,b:r};return q.runKernel(gu,s)}const jL=X({mod_:qL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KL(n,e=null,t=!1){n=B(n,"x","moments");const r=Ve(e,n.shape),s=Ft(n,r,t);let o=s.shape;t||(o=Dt(s.shape,r));const a=dt(De(ge(n,"float32"),K(s,o))),i=Ft(a,r,t);return{mean:s,variance:i}}const kg=X({moments_:KL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(n,e){let t=B(n,"a","notEqual","string_or_numeric"),r=B(e,"b","notEqual","string_or_numeric");[t,r]=St(t,r),Pe(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(ch,s)}const qh=X({notEqual_:XL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YL(n,e,t=1,r=0,s="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:B(n,"indices","oneHot","int32")},i={dtype:s,depth:e,onValue:t,offValue:r};return q.runKernel(hh,a,i)}const aC=X({oneHot_:YL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QL(n){const t={x:B(n,"x","onesLike")};return q.runKernel(lh,t)}const ir=X({onesLike_:QL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JL(n,e,t=0){const r=B(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:t},o={x:r};return q.runKernel(ph,o,s)}const Sg=X({pad_:JL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(n,e,t){const r=B(n,"x","spaceToBatchND");A(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),A(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),A(r.shape.reduce((a,i,u)=>u>0&&u<=e.length?a&&(i+t[u-1][0]+t[u-1][1])%e[u-1]===0:a,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},o={blockShape:e,paddings:t};return q.runKernel(Ih,s,o)}const Ng=X({spaceToBatchND_:ZL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eP(n,e,t,r,s,o,a){s==null&&(s=[1,1]),o==null&&(o=1),r===0&&(r="valid");const i=B(n,"x","maxPool");let u=i,c=!1;i.rank===3&&(c=!0,u=K(i,[1,i.shape[0],i.shape[1],i.shape[2]])),A(cn(o,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`);const l=ar(u.shape,e,o,s,r),h=[l.dilationHeight,l.dilationWidth];let d;r==="same"?d=nP([l.filterHeight,l.filterWidth],h):d=[[0,0],[0,0]];const p=h[0]===1&&h[1]===1,[f,m]=tP([l.inHeight,l.inWidth],h,d),g=p?r:"valid",x=p?u:Ng(u,h,f),b=(t==="avg"?()=>dg(x,e,o,g,a):()=>Ig(x,e,o,g,a))(),v=p?b:pg(b,h,m);return c?K(v,[v.shape[1],v.shape[2],v.shape[3]]):v}function tP(n,e,t){const r=t.map(l=>l[0]),s=t.map(l=>l[1]),o=n.concat(r,s),a=e.map((l,h)=>(l-o[h]%l)%l),i=s.map((l,h)=>l+a[h]),u=e.map((l,h)=>[r[h],i[h]]),c=e.map((l,h)=>[0,a[h]]);return[u,c]}function nP(n,e){const r=n.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),s=r.map(a=>Math.floor(a/2)),o=r.map((a,i)=>a-s[i]);return r.map((a,i)=>[s[i],o[i]])}const rP=X({pool_:eP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sP(n,e){const t=B(n,"x","prelu"),r=B(e,"alpha","prelu"),s={x:t,alpha:r};return q.runKernel(fh,s)}const Tg=X({prelu_:sP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oP(n,e=null,t=!1){let r=B(n,"x","prod");r.dtype==="bool"&&(r=ge(r,"int32"));const s={x:r},o={axis:e,keepDims:t};return q.runKernel(mh,s,o)}const aP=X({prod_:oP});var jh={exports:{}},iP=jh.exports,iC;function uP(){return iC||(iC=1,function(n){(function(e,t,r){function s(u){var c=this,l=i();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=l(" "),c.s1=l(" "),c.s2=l(" "),c.s0-=l(u),c.s0<0&&(c.s0+=1),c.s1-=l(u),c.s1<0&&(c.s1+=1),c.s2-=l(u),c.s2<0&&(c.s2+=1),l=null}function o(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function a(u,c){var l=new s(u),h=c&&c.state,d=l.next;return d.int32=function(){return l.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&o(h,l),d.state=function(){return o(l,{})}),d}function i(){var u=4022871197,c=function(l){l=String(l);for(var h=0;h<l.length;h++){u+=l.charCodeAt(h);var d=.02519603282416938*u;u=d>>>0,d-=u,d*=u,u=d>>>0,d-=u,u+=d*4294967296}return(u>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=a:this.alea=a})(iP,n)}(jh)),jh.exports}var Kh={exports:{}},cP=Kh.exports,uC;function lP(){return uC||(uC=1,function(n){(function(e,t,r){function s(i){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var h=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^h^h>>>8},i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xor128=a})(cP,n)}(Kh)),Kh.exports}var Xh={exports:{}},hP=Xh.exports,cC;function dP(){return cC||(cC=1,function(n){(function(e,t,r){function s(i){var u=this,c="";u.next=function(){var h=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(h^h<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,i===(i|0)?u.x=i:c+=i;for(var l=0;l<c.length+64;l++)u.x^=c.charCodeAt(l)|0,l==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u.v=i.v,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xorwow=a})(hP,n)}(Xh)),Xh.exports}var Yh={exports:{}},pP=Yh.exports,lC;function fP(){return lC||(lC=1,function(n){(function(e,t,r){function s(i){var u=this;u.next=function(){var l=u.x,h=u.i,d,p;return d=l[h],d^=d>>>7,p=d^d<<24,d=l[h+1&7],p^=d^d>>>10,d=l[h+3&7],p^=d^d>>>3,d=l[h+4&7],p^=d^d<<7,d=l[h+7&7],d=d^d<<13,p^=d^d<<9,l[h]=p,u.i=h+1&7,p};function c(l,h){var d,p=[];if(h===(h|0))p[0]=h;else for(h=""+h,d=0;d<h.length;++d)p[d&7]=p[d&7]<<15^h.charCodeAt(d)+p[d+1&7]<<13;for(;p.length<8;)p.push(0);for(d=0;d<8&&p[d]===0;++d);for(d==8?p[7]=-1:p[d],l.x=p,l.i=0,d=256;d>0;--d)l.next()}c(u,i)}function o(i,u){return u.x=i.x.slice(),u.i=i.i,u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,l&&(l.x&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xorshift7=a})(pP,n)}(Yh)),Yh.exports}var Qh={exports:{}},mP=Qh.exports,hC;function gP(){return hC||(hC=1,function(n){(function(e,t,r){function s(i){var u=this;u.next=function(){var l=u.w,h=u.X,d=u.i,p,f;return u.w=l=l+1640531527|0,f=h[d+34&127],p=h[d=d+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=h[d]=f^p,u.i=d,f+(l^l>>>16)|0};function c(l,h){var d,p,f,m,g,x=[],y=128;for(h===(h|0)?(p=h,h=null):(h=h+"\0",p=0,y=Math.max(y,h.length)),f=0,m=-32;m<y;++m)h&&(p^=h.charCodeAt((m+32)%h.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,d=x[m&127]^=p+g,f=d==0?f+1:0);for(f>=128&&(x[(h&&h.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=x[f+34&127],d=x[f=f+1&127],p^=p<<13,d^=d<<17,p^=p>>>15,d^=d>>>12,x[f]=p^d;l.w=g,l.X=x,l.i=f}c(u,i)}function o(i,u){return u.i=i.i,u.w=i.w,u.X=i.X.slice(),u}function a(i,u){i==null&&(i=+new Date);var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,l&&(l.X&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.xor4096=a})(mP,n)}(Qh)),Qh.exports}var Jh={exports:{}},xP=Jh.exports,dC;function yP(){return dC||(dC=1,function(n){(function(e,t,r){function s(i){var u=this,c="";u.next=function(){var h=u.b,d=u.c,p=u.d,f=u.a;return h=h<<25^h>>>7^d,d=d-p|0,p=p<<24^p>>>8^f,f=f-h|0,u.b=h=h<<20^h>>>12^d,u.c=d=d-p|0,u.d=p<<16^d>>>16^f,u.a=f-h|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,i===Math.floor(i)?(u.a=i/4294967296|0,u.b=i|0):c+=i;for(var l=0;l<c.length+20;l++)u.b^=c.charCodeAt(l)|0,u.next()}function o(i,u){return u.a=i.a,u.b=i.b,u.c=i.c,u.d=i.d,u}function a(i,u){var c=new s(i),l=u&&u.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,p=(c.next()>>>0)/4294967296,f=(d+p)/(1<<21);while(f===0);return f},h.int32=c.next,h.quick=h,l&&(typeof l=="object"&&o(l,c),h.state=function(){return o(c,{})}),h}t&&t.exports?t.exports=a:this.tychei=a})(xP,n)}(Jh)),Jh.exports}var Zh={exports:{}};const vP=g_(Object.freeze(Object.defineProperty({__proto__:null,default:{}},Symbol.toStringTag,{value:"Module"})));var bP=Zh.exports,pC;function wP(){return pC||(pC=1,function(n){(function(e,t,r){var s=256,o=6,a=52,i="random",u=r.pow(s,o),c=r.pow(2,a),l=c*2,h=s-1,d;function p(v,w,C){var T=[];w=w==!0?{entropy:!0}:w||{};var S=x(g(w.entropy?[v,b(t)]:v??y(),3),T),k=new f(T),N=function(){for(var I=k.g(o),E=u,F=0;I<c;)I=(I+F)*s,E*=s,F=k.g(1);for(;I>=l;)I/=2,E/=2,F>>>=1;return(I+F)/E};return N.int32=function(){return k.g(4)|0},N.quick=function(){return k.g(4)/4294967296},N.double=N,x(b(k.S),t),(w.pass||C||function(I,E,F,O){return O&&(O.S&&m(O,k),I.state=function(){return m(k,{})}),F?(r[i]=I,E):I})(N,S,"global"in w?w.global:this==r,w.state)}function f(v){var w,C=v.length,T=this,S=0,k=T.i=T.j=0,N=T.S=[];for(C||(v=[C++]);S<s;)N[S]=S++;for(S=0;S<s;S++)N[S]=N[k=h&k+v[S%C]+(w=N[S])],N[k]=w;(T.g=function(I){for(var E,F=0,O=T.i,D=T.j,M=T.S;I--;)E=M[O=h&O+1],F=F*s+M[h&(M[O]=M[D=h&D+E])+(M[D]=E)];return T.i=O,T.j=D,F})(s)}function m(v,w){return w.i=v.i,w.j=v.j,w.S=v.S.slice(),w}function g(v,w){var C=[],T=typeof v,S;if(w&&T=="object")for(S in v)try{C.push(g(v[S],w-1))}catch{}return C.length?C:T=="string"?v:v+"\0"}function x(v,w){for(var C=v+"",T,S=0;S<C.length;)w[h&S]=h&(T^=w[h&S]*19)+C.charCodeAt(S++);return b(w)}function y(){try{var v;return d&&(v=d.randomBytes)?v=v(s):(v=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(v)),b(v)}catch{var w=e.navigator,C=w&&w.plugins;return[+new Date,e,C,e.screen,b(t)]}}function b(v){return String.fromCharCode.apply(0,v)}if(x(r.random(),t),n.exports){n.exports=p;try{d=vP}catch{}}else r["seed"+i]=p})(typeof self<"u"?self:bP,[],Math)}(Zh)),Zh.exports}var Eg,fC;function CP(){if(fC)return Eg;fC=1;var n=uP(),e=lP(),t=dP(),r=fP(),s=gP(),o=yP(),a=wP();return a.alea=n,a.xor128=e,a.xorwow=t,a.xorshift7=r,a.xor4096=s,a.tychei=o,Eg=a,Eg}var Rg=CP();/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mC{constructor(e,t,r,s,o){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=Rg.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let e,t,r=!1;for(;!r;){let s,o,a;do s=2*this.random()-1,o=2*this.random()-1,a=s*s+o*o;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class IP{constructor(e=0,t=1,r,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Rg.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kP(n,e=0,t=1,r,s){if(gs(n),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const o=new mC(e,t,r,!1,s),a=We(n,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const SP=X({randomNormal_:kP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NP(n,e=0,t=1,r="float32",s){gs(n);const o=We(n,r),a=new IP(e,t,null,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const Ku=X({randomUniform_:NP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xu(n,e,t=1,r="float32"){if(t===0)throw new Error("Cannot have a step of zero");const s={start:n,stop:e,step:t,dtype:r};return q.runKernel(Lm,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TP(n){const t={input:B(n,"input","real")};return q.runKernel(Pm,t)}const ed=X({real_:TP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EP(n){const t={x:B(n,"x","reciprocal")};return q.runKernel(vu,t)}const RP=X({reciprocal_:EP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AP(n){const t={x:B(n,"x","relu")};return q.runKernel(bu,t)}const Ho=X({relu_:AP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $P(n){const t={x:B(n,"x","relu6")};return q.runKernel(wu,t)}const gC=X({relu6_:$P});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DP(n,e){const r={x:B(n,"x","reverse")},s={dims:e};return q.runKernel(vh,r,s)}const qo=X({reverse_:DP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FP(n){const t={x:B(n,"x","round")};return q.runKernel(Cu,t)}const xC=X({round_:FP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OP(n){const t={x:B(n,"x","rsqrt","float32")};return q.runKernel(Iu,t)}const yC=X({rsqrt_:OP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _P(n){const t={x:B(n,"x","selu")};return q.runKernel(ku,t)}const vC=X({selu_:_P});function MP(n,e,t,r,s,o=[1,1],a="NHWC"){const i=B(n,"x","separableConv2d"),u=B(e,"depthwiseFilter","separableConv2d"),c=B(t,"pointwiseFilter","separableConv2d");let l=i,h=!1;if(i.rank===3&&(h=!0,l=K(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),A(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),A(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),A(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),A(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=u.shape[2],p=u.shape[3];A(c.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${c.shape[2]}.`);const f=xg(l,u,r,s,a,o),g=Wo(f,c,1,"valid",a);return h?K(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const bC=X({separableConv2d_:MP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LP(n){const t={x:B(n,"x","sign")};return q.runKernel(Tu,t)}const PP=X({sign_:LP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BP(n){const t={x:B(n,"x","sin","float32")};return q.runKernel(Su,t)}const wC=X({sin_:BP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zP(n){const t={x:B(n,"x","sinh")};return q.runKernel(Nu,t)}const CC=X({sinh_:zP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VP(n,e,t){const r=B(n,"x","slice1d");return A(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),ct(r,[e],[t])}const Ag=X({slice1d_:VP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WP(n,e,t){const r=B(n,"x","slice2d");return A(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),ct(r,e,t)}const IC=X({slice2d_:WP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UP(n,e,t){const r=B(n,"x","slice3d");return A(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),ct(r,e,t)}const $g=X({slice3d_:UP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GP(n,e,t){const r=B(n,"x","slice4d");return A(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),ct(r,e,t)}const td=X({slice4d_:GP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HP(n,e=-1){const t=B(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const r={logits:t},s={dim:e};return q.runKernel(Sh,r,s)}const Dg=X({softmax_:HP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qP(n){A(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return q.runKernel(Nm,e)}const kC=X({fft_:qP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jP(n){A(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return q.runKernel(Rm,e)}const Fg=X({ifft_:jP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KP(n){const e=n.shape[n.shape.length-1],t=n.size/e;let r;if(e<=2){const s=K(n,[t,e]);r=Fg(s)}else{const s=[t,2*(e-1)],o=K(ed(n),[t,e]),a=K(bg(n),[t,e]),i=qo(ct(o,[0,1],[t,e-2]),1),u=G(qo(ct(a,[0,1],[t,e-2]),1),nt(-1)),c=Rn([o,i],1),l=Rn([a,u],1),h=K(Va(c,l),[s[0],s[1]]);r=Fg(h)}if(r=ed(r),n.rank===3&&n.shape[0]!==0){const s=r,o=n.shape[0];r=K(r,[o,r.shape[0]/o,r.shape[1]]),s.dispose()}return r}const XP=X({irfft_:KP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YP(n,e,t=0){const s={x:B(n,"x","split")},o={numOrSizeSplits:e,axis:t};return q.runKernel(kh,s,o)}const Zn=X({split_:YP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QP(n,e){A(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const r=n.size/t;let s;if(e!=null&&e<t){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=e,s=ct(n,f,m),t=e}else if(e!=null&&e>t){const f=n.shape.map(m=>m);f[n.shape.length-1]=e-t,s=Rn([n,qt(f)],n.shape.length-1),t=e}else s=n;const o=Xe(s),a=K(Va(s,o),[r,t]),i=kC(a),u=Math.floor(t/2)+1,c=ed(i),l=bg(i),h=Zn(c,[u,t-u],c.shape.length-1),d=Zn(l,[u,t-u],l.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=u,K(Va(h[0],d[0]),p)}const JP=X({rfft_:QP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(n,e){let t=B(n,"a","squaredDifference"),r=B(e,"b","squaredDifference");[t,r]=St(t,r),Pe(t.shape,r.shape);const s={a:t,b:r},o={};return q.runKernel($u,s,o)}const eB=X({squaredDifference_:ZP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(n,e){const t=B(n,"x","squeeze","string_or_numeric");return K(t,zs(t.shape,e).newShape)}const Yu=X({squeeze_:tB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nB(n,e=0){const t=Rw(n,"tensors","stack","string_or_numeric");A(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&A(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const r=t,s={axis:e};return q.runKernel(dh,r,s)}const ws=X({stack_:nB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rB(n,e=0){const r={x:B(n,"x","step")},s={alpha:e};return q.runKernel(Mu,r,s)}const Qu=X({step_:rB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sB(n,e,t,r,s=0,o=0,a=0,i=0,u=0){const l={x:B(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:r,beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return q.runKernel(Um,l,h)}const oB=X({stridedSlice_:sB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aB(n){const t={x:B(n,"x","tan","float32")};return q.runKernel(Fu,t)}const iB=X({tan_:aB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zn(n,e){E1(n);const t=Mh(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Lh(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Og(n,e,t){if(E1(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=Mh(n,t);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Lh(n,e,r,t)}function SC(n,e,t){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${s}.`;if(t.rank<s)throw new Error(o+` update.rank < ${s}. `);if(n.length<r+(t.rank-s))throw new Error(o+` Output shape length < ${r+(t.rank-s)}`);if(t.rank!==s+n.length-r)throw new Error(o+` update.rank != ${s+n.length-r}`);for(let a=0;a<s;++a)if(t.shape[a]!==e.shape[a])throw new Error(o+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-s;++a)if(t.shape[a+s]!==n[a+r])throw new Error(o+` updates.shape[${a+s}] (${t.shape[a+s]}) != shape[${a+s}] (${n[a+s]})`)}function uB(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}SC(t,e,n)}function jo(n,e,t){const r=e.shape.length,s=r>1?e.shape[r-1]:1,o=t.length;let a=1;for(let h=s;h<o;++h)a*=t[h];const i=s<1?1:s,u=ne(e.shape)/i,c=[...Ee(t.slice(0,s)),1],l=ne(t);return{sliceRank:s,numUpdates:u,sliceSize:a,strides:c,outputSize:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cB(n,e=1,t=!0){const r=B(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const o={x:r},a={k:e,sorted:t},[i,u]=q.runKernel(Gm,o,a);return{values:i,indices:u}}const lB=X({topk_:cB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hB(n,e=0,t=1,r,s){if(gs(n),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new mC(e,t,r,!0,s),a=We(n,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const NC=X({truncatedNormal_:hB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dB(n,e=0){const t=B(n,"x","unique","string_or_numeric");A(t.rank>0,()=>"The input tensor must be at least 1D");const r={x:t},s={axis:e},[o,a]=q.runKernel(qm,r,s);return{values:o,indices:a}}const pB=X({unique_:dB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fB(n,e,t){const r=B(n,"x","unsortedSegmentSum"),s=B(e,"segmentIds","unsortedSegmentSum","int32");A(Fa(t),()=>"numSegments must be of dtype int");const o={x:r,segmentIds:s},a={numSegments:t};return q.runKernel(Th,o,a)}const TC=X({unsortedSegmentSum_:fB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mB(n,e=0){const t=B(n,"x","unstack","string_or_numeric");A(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const r={value:t},s={axis:e};return q.runKernel(Nh,r,s)}const Ko=X({unstack_:mB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gB(n,e=!0,t,r){return q.makeVariable(n,e,t,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EC(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const r=We(n,"int32"),s=We([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const a=r.indexToLoc(t[o]),i=o*n.length;s.values.set(a,i)}return s.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xB(n,e,t){const r=B(n,"x","transpose");if(e==null&&(e=r.shape.map((a,i)=>i).reverse()),A(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(a=>{A(a>=0&&a<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),r.rank<=1)return r.clone();const s={x:r},o={perm:e};return r.dtype==="complex64"?Q(()=>{let a=ed(r),i=bg(r);return a=q.runKernel(Pa,{x:a},o),i=q.runKernel(Pa,{x:i},o),t&&(i=Tt(i)),Va(a,i)}):q.runKernel(Pa,s,o)}const Ye=X({transpose_:xB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(n,e){if(e==null)return n.shape.slice();if(et(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let r=0;r<n.shape.length;r++)e[r]==null&&n.shape[r]!=null?t.push(n.shape[r]):t.push(e[r]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(n,e,t,r){const s=B(n,"x","dropout");if(A(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),A(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof _t?s.clone():s;const o=yB(s,t),a=1-e,i=Ae(Gh(le(Ku(o,0,1,"float32",r),a)),a);return G(s,i)}const bB=X({dropout_:vB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wB(n,e,t,r,s,o="NHWC",a){let i=n;n.rank===3&&(i=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=K(e,[1,e.shape[0],e.shape[1],e.shape[2]])),A(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),A(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),A(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const c=o==="NHWC"?i.shape[3]:i.shape[1],l=o==="NHWC"?u.shape[3]:u.shape[1];A(c===t[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${t[2]}.`),A(l===t[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${t[3]}).`),En("conv2dDerFilter",s,a);const h={x:i,dy:u},d={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,filterShape:t};return q.runKernel(pm,h,d)}const _g=X({conv2DBackpropFilter_:wB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mg(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return G(n,Qu(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Lg(n,e){let t=e;const r=Mt(n.shape,e.shape);return r.length>0&&(t=Re(t,r)),K(t,n.shape)}function Pg(n,e,t,r){if(e==="linear")return n;if(e==="relu")return Ho(n);if(e==="elu")return Vh(n);if(e==="relu6")return gC(n);if(e==="prelu")return Tg(n,t);if(e==="leakyrelu")return wg(n,r);if(e==="sigmoid")return Ha(n);throw new Error(`Unknown fused activation ${e}.`)}const Bg=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(u=u||"linear",Bg(q.state.gradientDepth,u)===!1){A(s==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let C=Wo(n,e,t,r,s,o,a);return i!=null&&(C=le(C,i)),Pg(C,u,c,l)}const h=B(n,"x","conv2d","float32"),d=B(e,"filter","conv2d","float32");let p=h,f=!1;h.rank===3&&(f=!0,p=K(h,[1,h.shape[0],h.shape[1],h.shape[2]])),A(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),A(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),En("fused conv2d",r,a);const m=s==="NHWC"?p.shape[3]:p.shape[1];A(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),A(cn(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const g=Zt(p.shape,d.shape,t,o,r,a);let x;i!=null&&(x=B(i,"bias","fused conv2d"),[x]=St(x,h),s==="NHWC"?Pe(g.outShape,x.shape):(A(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),A(x.shape.length===0||x.shape[0]===g.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let y;if(c!=null){const C=c.shape;if(A(C.length<=1||C.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${C.length}.`),C.length===1)A(C[0]===1||C[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the number of output channels (${g.outChannels}).`);else if(C.length===3)try{Pe(C,g.outShape)}catch{const S=`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(S)}y=B(c,"prelu weights","fused conv2d")}const b=(C,T)=>{A(s==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[S,k,N,I]=T,E=Mg(C,N,u);A(zo(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const F=fg(k.shape,E,S,t,r),O=_g(k,E,S.shape,t,r),D=[F,O];if(I!=null){const M=Lg(I,E);D.push(M)}return D},v={x:p,filter:d,bias:x,preluActivationWeights:y},w={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:l};return i==null?Ka((T,S,k)=>{let N=q.runKernel(Ah,v,w);return k([S,T,N]),f&&(N=K(N,[N.shape[1],N.shape[2],N.shape[3]])),{value:N,gradFunc:b}})(p,d):Ka((T,S,k,N)=>{let I=q.runKernel(Ah,v,w);return N([S,T,I,k]),f&&(I=K(I,[I.shape[1],I.shape[2],I.shape[3]])),{value:I,gradFunc:b}})(p,d,x)}const IB=X({fusedConv2d_:CB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(n,e,t,r,s,o=[1,1],a){let i=n;n.rank===3&&(i=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=K(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:i,dy:u},l={strides:r,pad:s,dimRoundingMode:a,dilations:o,filterShape:t};return q.runKernel(bm,c,l)}const SB=X({depthwiseConv2dNativeBackpropFilter_:kB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n,e,t,r,s,o=[1,1],a){let i=e,u=!1;e.rank===3&&(u=!0,i=K(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:i,filter:t},l={strides:r,pad:s,dimRoundingMode:a,dilations:o,inputShape:n},h=q.runKernel(wm,c,l);return u?K(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const TB=X({depthwiseConv2dNativeBackpropInput_:NB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EB({a:n,b:e,transposeA:t=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(Bg(q.state.gradientDepth,o)===!1){let I=tt(n,e,t,r);return s!=null&&(I=le(I,s)),Pg(I,o,a,i)}let u=B(n,"a","fused matMul"),c=B(e,"b","fused matMul");[u,c]=St(u,c);const l=t?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?c.shape[c.rank-1]:c.shape[c.rank-2],d=t?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),m=c.shape.slice(0,-2),g=ne(f),x=ne(m);A(l===h,()=>`Error in fused matMul: inner shapes (${l}) and (${h}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${t} and transposeB=${r} must match.`);const b=Pe(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,p]),v=t?K(u,[g,l,d]):K(u,[g,d,l]),w=r?K(c,[x,p,h]):K(c,[x,h,p]);let C;s!=null&&(C=B(s,"bias","fused matMul"),[C]=St(C,u),Pe(b,C.shape));let T;a!=null&&(T=B(a,"prelu weights","fused matMul"));const S=(I,E)=>{const[F,O,D,M]=E,P=Mg(K(I,D.shape),D,o);let L,z;if(!t&&!r?(L=tt(P,O,!1,!0),z=tt(F,P,!0,!1)):!t&&r?(L=tt(P,O,!1,!1),z=tt(P,F,!0,!1)):t&&!r?(L=tt(O,P,!1,!0),z=tt(F,P,!1,!1)):(L=tt(O,P,!0,!0),z=tt(P,F,!0,!0)),s!=null){const W=Lg(M,P);return[L,z,W]}else return[L,z]},k={a:v,b:w,bias:C,preluActivationWeights:T},N={transposeA:t,transposeB:r,activation:o,leakyreluAlpha:i};return s==null?Ka((E,F,O)=>{const D=q.runKernel(Rh,k,N);return O([E,F,D]),{value:K(D,b),gradFunc:S}})(v,w):Ka((E,F,O,D)=>{const M=q.runKernel(Rh,k,N);return D([E,F,M,O]),{value:K(M,b),gradFunc:S}})(v,w,C)}const RC=X({fusedMatMul_:EB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(n,e,t,r,s="bilinear",o=0){const a=B(n,"image","cropAndResize"),i=B(e,"boxes","cropAndResize","float32"),u=B(t,"boxInd","cropAndResize","int32"),c=i.shape[0];A(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),A(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),A(u.rank===1&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),A(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),A(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),A(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);const l={image:a,boxes:i,boxInd:u},h={method:s,extrapolationValue:o,cropSize:r};return q.runKernel(xm,l,h)}const AB=X({cropAndResize_:RB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(n){const e=B(n,"image","flipLeftRight","float32");A(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return q.runKernel(Em,t,{})}const DB=X({flipLeftRight_:$B});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FB(n){const e=B(n,"image","grayscaleToRGB"),t=e.rank-1,r=e.shape[t];A(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),A(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,t),s[t]=3,Nr(e,s)}const OB=X({grayscaleToRGB_:FB});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _B(n){const e=B(n,"image","RGBToGrayscale"),t=e.rank-1,r=e.shape[t];A(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),A(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const s=e.dtype,o=ge(e,"float32"),a=zn([.2989,.587,.114]);let i;switch(e.rank){case 2:i=Hu("ij,j->i",o,a);break;case 3:i=Hu("ijk,k->ij",o,a);break;case 4:i=Hu("ijkl,l->ijk",o,a);break;case 5:i=Hu("ijklm,m->ijkl",o,a);break;case 6:i=Hu("ijklmn,n->ijklm",o,a);break;default:throw new Error("Not a valid tensor rank.")}return i=An(i,-1),ge(i,s)}const MB=X({rgbToGrayscale_:_B});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n,e,t=0,r=.5){const s=B(n,"image","rotateWithOffset","float32");A(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const o={image:s},a={radians:e,fillValue:t,center:r};return q.runKernel(jm,o,a)}const PB=X({rotateWithOffset_:LB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xa(n,e,t,r,s,o){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=n.shape[0];return t=Math.min(t,a),A(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),A(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),A(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),A(e.rank===1,()=>"scores must be a 1D tensor"),A(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),A(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const o=B(n,"boxes","nonMaxSuppression","float32"),a=B(e,"scores","nonMaxSuppression","float32"),i=Xa(o,a,t,r,s);t=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u={maxOutputSize:t,iouThreshold:r,scoreThreshold:s};return q.runKernel(Om,{boxes:o,scores:a},u)}const zB=X({nonMaxSuppression_:BB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(n,e,t){const r=WB(n,e,t),s=r<0?-(r+1):r;n.splice(s,0,e)}function WB(n,e,t){return GB(n,e,t||UB)}function UB(n,e){return n>e?1:n<e?-1:0}function GB(n,e,t){let r=0,s=n.length,o=0,a=!1;for(;r<s;){o=r+(s-r>>>1);const i=t(e,n[o]);i>0?r=o+1:(s=o,a=!i)}return a?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zg(n,e,t,r,s){return Ug(n,e,t,r,s,0)}function Vg(n,e,t,r,s,o){return Ug(n,e,t,r,s,0,!1,o,!0)}function Wg(n,e,t,r,s,o){return Ug(n,e,t,r,s,o,!0)}function Ug(n,e,t,r,s,o,a=!1,i=!1,u=!1){const c=[];for(let g=0;g<e.length;g++)e[g]>s&&c.push({score:e[g],boxIndex:g,suppressBeginIndex:0});c.sort(AC);const l=o>0?-.5/o:0,h=[],d=[];for(;h.length<t&&c.length>0;){const g=c.pop(),{score:x,boxIndex:y,suppressBeginIndex:b}=g;if(x<s)break;let v=!1;for(let w=h.length-1;w>=b;--w){const C=HB(n,y,h[w]);if(C>=r){v=!0;break}if(g.score=g.score*qB(r,l,C),g.score<=s)break}g.suppressBeginIndex=h.length,v||(g.score===x?(h.push(y),d.push(g.score)):g.score>s&&VB(c,g,AC))}const p=h.length,f=t-p;i&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const m={selectedIndices:h};return a&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function HB(n,e,t){const r=n.subarray(e*4,e*4+4),s=n.subarray(t*4,t*4+4),o=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(s[0],s[2]),l=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(i-o)*(u-a),f=(h-c)*(d-l);if(p<=0||f<=0)return 0;const m=Math.max(o,c),g=Math.max(a,l),x=Math.min(i,h),y=Math.min(u,d),b=Math.max(x-m,0)*Math.max(y-g,0);return b/(p+f-b)}function qB(n,e,t){const r=Math.exp(e*t*t);return t<=n?r:0}function AC(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function jB(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const o=B(n,"boxes","nonMaxSuppressionAsync"),a=B(e,"scores","nonMaxSuppressionAsync"),i=Xa(o,a,t,r,s);t=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u=await Promise.all([o.data(),a.data()]),c=u[0],l=u[1],{selectedIndices:h}=zg(c,l,t,r,s);return o!==n&&o.dispose(),a!==e&&a.dispose(),zn(h,"int32")}const KB=jB;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=B(n,"boxes","nonMaxSuppression"),i=B(e,"scores","nonMaxSuppression"),u=Xa(a,i,t,r,s,o);t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const c={boxes:a,scores:i},l={maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o},h=q.runKernel(Mm,c,l);return{selectedIndices:h[0],selectedScores:h[1]}}const YB=X({nonMaxSuppressionWithScore_:XB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function QB(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=B(n,"boxes","nonMaxSuppressionAsync"),i=B(e,"scores","nonMaxSuppressionAsync"),u=Xa(a,i,t,r,s,o);t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const c=await Promise.all([a.data(),i.data()]),l=c[0],h=c[1],{selectedIndices:d,selectedScores:p}=Wg(l,h,t,r,s,o);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:zn(d,"int32"),selectedScores:zn(p)}}const JB=QB;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=B(n,"boxes","nonMaxSuppression"),i=B(e,"scores","nonMaxSuppression"),u=Xa(a,i,t,r,s,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,d={boxes:a,scores:i},p={maxOutputSize:c,iouThreshold:l,scoreThreshold:h,padToMaxOutputSize:o},f=q.runKernel(_m,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const e4=X({nonMaxSuppressionPadded_:ZB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function t4(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=B(n,"boxes","nonMaxSuppressionAsync"),i=B(e,"scores","nonMaxSuppressionAsync"),u=Xa(a,i,t,r,s,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Vg(d,p,c,l,h,o);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:zn(f,"int32"),validOutputs:nt(m,"int32")}}const n4=t4;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4(n,e,t=!1,r=!1){const s=B(n,"images","resizeBilinear");A(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),A(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),A(r===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=K(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},u={alignCorners:t,halfPixelCenters:r,size:e},c=q.runKernel(yh,i,u);return a?K(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const $C=X({resizeBilinear_:r4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(n,e,t=!1,r=!1){const s=B(n,"images","resizeNearestNeighbor");A(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),A(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),A(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),A(r===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=K(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},u={alignCorners:t,halfPixelCenters:r,size:e},c=q.runKernel(xh,i,u);return a?K(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const DC=X({resizeNearestNeighbor_:s4});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(n,e="binary",t=!1,r=.5){const s=B(n,"image","threshold"),o=.2989,a=.587,i=.114,u=s.shape[0]*s.shape[1];let c=G(zn([r]),255),l,h,d,p;if(A(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),A(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),A(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),A(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),s.shape[2]===3){[l,h,d]=Zn(s,[1,1,1],-1);const g=G(l,o),x=G(h,a),y=G(d,i);p=le(le(g,x),y)}else p=n;if(e==="otsu"){const g=s3(ge(xC(p),"int32"),Aw([]),256);c=a4(g,u)}const f=t?ja(p,c):Jn(p,c);return ge(G(f,255),"int32")}function a4(n,e){let t=zn([-1]),r=zn([0]),s=zn([0]),o,a,i,u,c,l;for(let h=0;h<n.size-1;h++){o=ct(n,0,h+1),a=ct(n,h+1),c=Ae(Re(o),e),l=Ae(Re(a),e);const d=Re(G(o,Xu(0,o.size)));i=Ae(d,Re(o));const p=zh(a.shape,o.size),f=le(Xu(0,a.size),p),m=G(a,f);u=Ae(Re(m),Re(a));const g=De(i,u),x=De(i,u),y=G(c,l);s=G(G(y,g),x);const b=Jn(s,r);r=bn(b,s,r),t=bn(b,zn([h]),t)}return t}const i4=X({threshold_:o4});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(n,e,t="nearest",r="constant",s=0,o){const a=B(n,"image","transform","float32"),i=B(e,"transforms","transform","float32");A(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),A(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),A(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:a,transforms:i},c={interpolation:t,fillMode:r,fillValue:s,outputShape:o};return q.runKernel(Hm,u,c)}const c4=X({transform_:u4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l4(n,e,t){const r=B(n,"a","bandPart");A(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[o,a]=r.shape.slice(-2);let i,u;typeof e=="number"?(A(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),A(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),i=B(e<0?o:e,"numLower","bandPart")):(A(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),i=bn(Hh(e,0),o,ju(e,o))),typeof t=="number"?(A(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),A(t<=a,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`),u=B(t<0?a:t,"numUpper","bandPart")):(A(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=bn(Hh(t,0),a,ju(t,a)));const c=K(Xu(0,o,1,"int32"),[-1,1]),l=Xu(0,a,1,"int32"),h=De(c,l),d=bs(ja(h,i),Go(h,Tt(u))),p=qt([o,a],r.dtype);return K(ws(Ko(K(r,[-1,o,a])).map(f=>bn(d,f,p))),s)}const h4=X({bandPart_:l4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d4(n){let e;if(Array.isArray(n)){e=!1,A(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=n[0].shape[0];for(let o=1;o<n.length;++o)A(n[o].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${s})`)}else e=!0,n=Zn(n,n.shape[0],0).map(s=>Yu(s,[0]));A(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],r=n;for(let s=0;s<n.length;++s)t.push(q.tidy(()=>{let o=r[s];if(s>0)for(let a=0;a<s;++a){const i=G(Re(G(t[a],o)),t[a]);o=De(o,i)}return Ae(o,Uh(o,"euclidean"))}));return e?ws(t,0):t}const p4=X({gramSchmidt_:d4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(n,e=!1){if(A(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return FC(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((u,c)=>u*c),r=Ko(K(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],o=[];r.forEach(u=>{const[c,l]=FC(u,e);s.push(c),o.push(l)});const a=K(ws(s,0),n.shape),i=K(ws(o,0),n.shape);return[a,i]}}function FC(n,e=!1){return q.tidy(()=>{A(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],r=n.shape[1];let s=tC(t),o=Bo(n);const a=Og([[1]],[1,1]);let i=Bo(a);const u=t>=r?r:t;for(let c=0;c<u;++c){const l=o,h=i,d=s;[i,o,s]=q.tidy(()=>{const p=ct(o,[c,c],[t-c,1]),f=Uh(p),m=ct(o,[c,c],[1,1]),g=bn(Jn(m,0),Og([[-1]]),Og([[1]])),x=De(m,G(g,f)),y=Ae(p,x);y.shape[0]===1?i=Bo(a):i=Rn([a,ct(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);const b=Tt(Ae(tt(g,x),f)),v=ct(o,[c,0],[t-c,r]),w=G(b,i),C=Ye(i);if(c===0)o=De(v,tt(w,tt(C,v)));else{const k=De(v,tt(w,tt(C,v)));o=Rn([ct(o,[0,0],[c,r]),k],0)}const T=Ye(w),S=ct(s,[0,c],[t,s.shape[1]-c]);if(c===0)s=De(S,tt(tt(S,i),T));else{const k=De(S,tt(tt(S,i),T));s=Rn([ct(s,[0,0],[t,c]),k],1)}return[i,o,s]}),Ge([l,h,d])}return!e&&t>r&&(s=ct(s,[0,0],[t,r]),o=ct(o,[0,0],[r,r])),[s,o]})}const m4=X({qr_:f4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cs={flipLeftRight:DB,grayscaleToRGB:OB,resizeNearestNeighbor:DC,resizeBilinear:$C,rgbToGrayscale:MB,rotateWithOffset:PB,cropAndResize:AB,nonMaxSuppression:zB,nonMaxSuppressionAsync:KB,nonMaxSuppressionWithScore:YB,nonMaxSuppressionWithScoreAsync:JB,nonMaxSuppressionPadded:e4,nonMaxSuppressionPaddedAsync:n4,threshold:i4,transform:c4},g4={bandPart:h4,gramSchmidt:p4,qr:m4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x4=new Map,y4=new Map;class Ya{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ur{constructor(){this.classNameMap={}}static getMap(){return ur.instance==null&&(ur.instance=new ur),ur.instance}static register(e){ur.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ce(n,e,t){A(n.className!=null,()=>"Class being registered does not have the static className property defined."),A(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),A(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const r=t,s=e+">"+r;return ur.register(n),x4.set(s,n),y4.set(n,s),n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ys extends Ya{minimize(e,t=!1,r){const{value:s,grads:o}=this.computeGradients(e,r);if(r!=null){const a=r.map(i=>({name:i.name,tensor:o[i.name]}));this.applyGradients(a)}else this.applyGradients(o);return Ge(o),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return SL(e,t)}dispose(){this.iterations_!=null&&Ge(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:nt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ys,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OC extends Ys{static get className(){return"Adadelta"}constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=q.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=q.registeredVariables[r],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accum_grad`,variable:Q(()=>Xe(o).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${r}/accum_var`,variable:Q(()=>Xe(o).variable(a))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const u=this.accumulatedGrads[s].variable,c=this.accumulatedUpdates[s].variable;Q(()=>{const l=le(G(u,this.rho),G(dt(i),1-this.rho)),h=G(Ae(ln(le(c,this.epsilon)),ln(le(u,this.epsilon))),i),d=le(G(c,this.rho),G(dt(h),1-this.rho));u.assign(l),c.assign(d);const p=le(G(h,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ge(this.accumulatedGrads.map(e=>e.variable)),Ge(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _C extends Ys{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=q.registeredVariables[r];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accumulator`,variable:Q(()=>zh(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[s].tensor:e[r];if(a==null)return;const i=this.accumulatedGrads[s].variable;Q(()=>{const u=le(i,dt(a));i.assign(u);const c=le(G(Ae(a,ln(le(u,q.backend.epsilon()))),-this.learningRate),o);o.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ge(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MC extends Ys{static get className(){return"Adam"}constructor(e,t,r,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Q(()=>{this.accBeta1=nt(t).variable(),this.accBeta2=nt(r).variable()}),s==null&&(this.epsilon=q.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);Q(()=>{const r=De(1,this.accBeta1),s=De(1,this.accBeta2);t.forEach((o,a)=>{const i=q.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:Q(()=>Xe(i).variable(u))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:Q(()=>Xe(i).variable(u))});const c=Array.isArray(e)?e[a].tensor:e[o];if(c==null)return;const l=this.accumulatedFirstMoment[a].variable,h=this.accumulatedSecondMoment[a].variable,d=le(G(l,this.beta1),G(c,1-this.beta1)),p=le(G(h,this.beta2),G(dt(c),1-this.beta2)),f=Ae(d,r),m=Ae(p,s);l.assign(d),h.assign(p);const g=le(G(Ae(f,le(ln(m),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(G(this.accBeta1,this.beta1)),this.accBeta2.assign(G(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ge(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Ge(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Q(()=>{this.accBeta1.assign(Uo(this.beta1,this.iterations_+1)),this.accBeta2.assign(Uo(this.beta2,this.iterations_+1))});const t=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LC extends Ys{static get className(){return"Adamax"}constructor(e,t,r,s=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Q(()=>{this.iteration=nt(0).variable(),this.accBeta1=nt(t).variable()}),s==null&&(this.epsilon=q.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);Q(()=>{const r=De(1,this.accBeta1),s=Ae(-this.learningRate,le(G(this.iteration,this.decay),1));t.forEach((o,a)=>{const i=q.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:Xe(i).variable(u)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:Xe(i).variable(u)});const c=Array.isArray(e)?e[a].tensor:e[o];if(c==null)return;const l=this.accumulatedFirstMoment[a].variable,h=this.accumulatedWeightedInfNorm[a].variable,d=le(G(l,this.beta1),G(c,1-this.beta1)),p=G(h,this.beta2),f=vn(c),m=Ks(p,f);l.assign(d),h.assign(m);const g=le(G(Ae(s,r),Ae(d,le(m,this.epsilon))),i);i.assign(g)}),this.iteration.assign(le(this.iteration,1)),this.accBeta1.assign(G(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ge(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Ge(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gg extends Ys{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=Array.isArray(e)?e[s].tensor:e[r];if(o==null)return;const a=q.registeredVariables[r];Q(()=>{const i=le(G(this.c,o),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Gr(nt(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PC extends Gg{static get className(){return"Momentum"}constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=nt(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=q.registeredVariables[r];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${r}/momentum`,variable:Q(()=>Xe(o).variable(!1))});const a=this.accumulations[s].variable,i=Array.isArray(e)?e[s].tensor:e[r];i!=null&&Q(()=>{let u;const c=le(G(this.m,a),i);this.useNesterov?u=le(G(this.c,le(i,G(c,this.m))),o):u=le(G(this.c,c),o),a.assign(c),o.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ge(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BC extends Ys{static get className(){return"RMSProp"}constructor(e,t=.9,r=0,s=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,s==null&&(this.epsilon=q.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=q.registeredVariables[r],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${r}/rms`,variable:Q(()=>Xe(o).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${r}/momentum`,variable:Q(()=>Xe(o).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${r}/mg`,variable:Q(()=>Xe(o).variable(a))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const u=this.accumulatedMeanSquares[s].variable,c=this.accumulatedMoments[s].variable;Q(()=>{const l=le(G(u,this.decay),G(dt(i),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[s].variable,d=le(G(h,this.decay),G(i,1-this.decay)),p=Ae(G(i,this.learningRate),ln(De(l,le(dt(d),this.epsilon)))),f=le(G(c,this.momentum),p);u.assign(l),h.assign(d),c.assign(f);const m=De(o,f);o.assign(m)}else{const h=le(G(u,this.decay),G(dt(i),1-this.decay)),d=le(G(c,this.momentum),Ae(G(i,this.learningRate),ln(le(h,this.epsilon))));u.assign(h),c.assign(d);const p=De(o,d);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ge(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ge(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Ge(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v4=[OC,_C,MC,LC,PC,BC,Gg];function b4(){for(const n of v4)ce(n)}function Hg(n,e){const t=n.shape.length,r=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${t}`);if(ne(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const s=e.shape,o=s[s.length-1];let a=1;for(let h=0;h<s.length-1;++h)a*=s[h];const i=n.shape,u=s.slice();u.pop();let c=1;for(let h=o;h<t;++h)c*=i[h],u.push(i[h]);const l=[...Ee(n.shape).map(h=>h/c),1].slice(0,o);return[u,a,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qg=-2,w4=-1;function jg(n,e,t){const r=n.shape.length;A(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),A(r===t.length,()=>`Error in slice${r}D: Length of size ${t} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)A(e[s]+t[s]<=n.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+t[s]}) would overflow input.shape[${s}] (${n.shape[s]})`)}function C4(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function Kg(n,e,t){const r=[];for(let s=0;s<n.length;s++)r[s]=Math.ceil((e[s]-n[s])/t[s]);return r}function zC(n,e,t,r){const s=[...n];for(let o=s.length;o<r.length;o++)s.push(1);for(let o=0;o<t;o++)o===0?s[e]=1:(s.splice(e,0,1),s.pop());return s}function VC(n,e,t){return t<=n?t:t-(e-1)}function WC(n,e){const t=[];for(let r=0;r<n;r++)t.push(e+r);return t}function I4(n,e,t,r,s,o,a,i,u){const c=n.length;let l=new Array(c),h=new Array(c),d=new Array(c);if(e.length&&t>0){const p=e[0],f=t+1;l=UC(a,p,f,r,n),h=GC(i,p,f,s,n),d=zC(o,p,f,n)}else for(let p=0;p<c;p++)l[p]=qC(a,r,o,n,p,u),h[p]=jC(i,s,o,n,p,u),d[p]=HC(o,p,u);return{begin:l,end:h,strides:d}}function UC(n,e,t,r,s){const o=[...s],a=WC(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const u=VC(e,t,i);let c=r[u];n&1<<u&&(c=0),o[i]=c}return o}function GC(n,e,t,r,s){const o=[...s],a=WC(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const u=VC(e,t,i);let c=r[u];n&1<<u&&(c=Number.MAX_SAFE_INTEGER),o[i]=c}for(let i=0;i<o.length;i++){const u=s[i];o[i]<0&&(o[i]+=u),o[i]=$o(0,o[i],s[i])}return o}function HC(n,e,t){let r=n[e];return(t&1<<e||r==null)&&(r=1),r}function qC(n,e,t,r,s,o){let a=e[s];const i=t[s]||1;(n&1<<s||o&1<<s||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=$o(0,a,u-1),a}function jC(n,e,t,r,s,o){let a=e[s];const i=t[s]||1;(n&1<<s||o&1<<s||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),i>0?a=$o(0,a,u):a=$o(-1,a,u-1),a}function Xg(n,e,t){let r=t.length;for(let s=0;s<t.length;s++)if(t[s]>1){r=s;break}for(let s=r+1;s<t.length;s++)if(e[s]>0||t[s]!==n[s])return!1;return!0}function Yg(n,e){let t=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)t+=n[r]*e[r];return t}function nd(n,e,t){let r;const s=n.shape.length;typeof e=="number"?r=[e,...new Array(s-1).fill(0)]:e.length<s?r=e.concat(new Array(s-e.length).fill(0)):r=e.slice(),r.forEach(a=>{A(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(s).fill(-1):typeof t=="number"?o=[t,...new Array(s-1).fill(-1)]:t.length<s?o=t.concat(new Array(s-t.length).fill(-1)):o=t,o=o.map((a,i)=>a>=0?a:(A(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),n.shape[i]-r[i])),[r,o]}function Qg(n,e,t,r,s,o,a,i,u){let c;if(r==null?(c=new Array(e.length),c.fill(1)):c=r,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:c.slice(),beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let b=0;b<h.dims;b++)l&&(1<<b&i)!==0&&h.numAddAxisAfterEllipsis++,1<<b&a&&(l=!0);l||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};k4(h,d);let p=!0,f=!0,m=!0;const g=[],x=[];for(let b=0;b<n.length;++b){if(d.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);const v=!!(d.shrinkAxisMask&1<<b),w=n[b];if(w===-1){g.push(v?1:-1);continue}const C=[d.beginMask&1<<b,d.endMask&1<<b],T=[d.strides[b]>0?0:-1,d.strides[b]>0?w:w-1];if(v&&d.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[b]===1;const S=!!(d.beginMask&1<<b&&d.endMask&1<<b);if(d.beginValid&&d.endValid){if(v){const E=d.begin[b]<0?w+d.begin[b]:d.begin[b];if(d.begin[b]=E,d.end[b]=d.begin[b]+1,E<0||E>=w)throw Error(`slice index ${d.begin[b]} of dimension ${b} out of bounds.`)}else d.begin[b]=KC(d.begin[b],0,d.strides[b],w,C,T),d.end[b]=KC(d.end[b],1,d.strides[b],w,C,T);const I=d.strides[b]===1&&d.begin[b]===0&&d.end[b]===w;p=p&&I,f=f&&(b===0&&d.strides[b]===1||I)}else p=p&&d.strides[b]===1&&S,f=f&&(b===0&&d.strides[b]===1||S);let k,N=!1;if(d.beginValid&&d.endValid?(k=d.end[b]-d.begin[b],N=!0):v?(k=1,N=!0):S&&w>=0&&(d.strides[b]<0?k=-w:k=w,N=!0),N){let I;k===0||k<0!=d.strides[b]<0?I=0:I=Math.trunc(k/d.strides[b])+(k%d.strides[b]!==0?1:0),g.push(I)}else g.push(-1)}for(let b=0;b<d.finalShapeGatherIndices.length;++b){const v=d.finalShapeGatherIndices[b];v>=0?x.push(g[v]):v===qg&&x.push(1)}return{finalShapeSparse:x.filter((b,v)=>d.finalShapeGatherIndices[v]!==qg),finalShape:x,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function k4(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<n.dims;r++)if(1<<r&n.ellipsisMask){const s=Math.min(e.dims-(n.dims-r)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<s;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=r}else if(1<<r&n.newAxisMask)e.finalShapeGatherIndices.push(qg),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[r]),n.end!=null&&(e.end[t]=n.end[r]),e.strides[t]=n.strides[r],n.beginMask&1<<r&&(e.beginMask|=1<<t),n.endMask&1<<r&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(w4),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[t]=r,t++}}function KC(n,e,t,r,s,o){if(s[e])return t>0?o[e]:o[e+1&1];{const a=n<0?r+n:n;return a<o[0]?o[0]:a>o[1]?o[1]:a}}const S4=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:jg,computeFlatOffset:Yg,computeOutShape:Kg,getNormalizedAxes:I4,isSliceContinous:Xg,maskToAxes:C4,parseSliceParams:nd,sliceInfo:Qg,startForAxis:qC,startIndicesWithElidedDims:UC,stopForAxis:jC,stopIndicesWithElidedDims:GC,stridesForAxis:HC,stridesWithElidedDims:zC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class N4{static sgd(e){return new Gg(e)}static momentum(e,t,r=!1){return new PC(e,t,r)}static rmsprop(e,t=.9,r=0,s=null,o=!1){return new BC(e,t,r,s,o)}static adam(e=.001,t=.9,r=.999,s=null){return new MC(e,t,r,s)}static adadelta(e=.001,t=.95,r=null){return new OC(e,t,r)}static adamax(e=.002,t=.9,r=.999,s=null,o=0){return new LC(e,t,r,s,o)}static adagrad(e,t=.1){return new _C(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qa=N4;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T4=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function XC(){return new Promise(n=>T4(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jg(n,e){const t=n[0].length;n.forEach((s,o)=>{A(s.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),A(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const r=n[0];n.forEach((s,o)=>{for(let a=0;a<t;a++)A(a===e||s[a]===r[a],()=>`Error in concat${t}D: Shape of tensors[${o}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${o}.`)})}function Xr(n,e){const t=n[0].slice();for(let r=1;r<n.length;r++)t[e]+=n[r][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Tr;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Tr||(Tr={}));function YC(n,e,t){let r=new Array;if(t==null&&e==null)return r;if(e==null)for(;r.length<n+t.length;)r.push(-1);else r=e.slice();if(t==null)return r;if(n+t.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${r.length}`);for(let s=1;s<t.length;++s){const o=t[s],a=r[r.length-t.length+s],i=r[a];if(o>=0)if(i>=0){if(i!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+n}] = ${o} but shape[${s+n}] = ${i}`)}else r[a]=o}return r}function QC(n){const e={FIRST_DIM_SIZE:Tr.FIRST_DIM_SIZE,VALUE_ROWIDS:Tr.VALUE_ROWIDS,ROW_LENGTHS:Tr.ROW_LENGTHS,ROW_SPLITS:Tr.ROW_SPLITS,ROW_LIMITS:Tr.ROW_LIMITS,ROW_STARTS:Tr.ROW_STARTS},t=[];for(const r of n)if(r in e)t.push(e[r]);else break;return t}function JC(n){return n.length===0?0:n[0]===Tr.FIRST_DIM_SIZE?n.length-1:n.length}function ZC(n,e){if(n==null||e==null)return;const t=n.length,r=e.length;if(t>=r)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(t,r-1);++s){const o=n[s],a=e[s+1];if(o>=0&&a>=0&&o!==1&&o!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-n.length}] = ${o} but ragged tensor input.flatValues.shape[${s-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zg=30;function rd(n){return n<=Zg?n:em(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ex(n,e,t){const r=t*(typeof n=="number"?n:n[0]),s=e*(typeof n=="number"?n:n[1]);return[r,s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ju(n,e,t,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(n[0]/t),s=s.concat(n.slice(1));else{s=s.concat(n[0]);const o=e.length;for(let a=0;a<o;++a)s=s.concat([n[a+1]/e[a],e[a]]);s=s.concat(n.slice(o+1))}return s}function Zu(n,e,t=!0){const r=[];if(t){r.push(e);for(let s=e+1;s<n;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{const s=[],o=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?o.push(a):s.push(a);r.push(...s),r.push(0),r.push(...o)}return r}function ec(n,e,t,r=!0){const s=[];r?s.push(n[0]/t):s.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?r?s.push(e[o-1]*n[o]):s.push(n[o]/e[o-1]):s.push(n[o]);return s}function tx(n,e){const t=[0];for(let r=0;r<e;++r)t.push(n[r][0]);return t}function nx(n,e,t){const r=n.slice(0,1);for(let s=0;s<t;++s)r.push(n[s+1]-e[s][0]-e[s][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sd=1.7580993408473768,od=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rx=.3275911,sx=.254829592,ox=-.284496736,ax=1.421413741,ix=-1.453152027,ux=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Is(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let r=0;r<t.length;r+=2)t[r]=n[r/2],t[r+1]=e[r/2];return t}function eI(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let r=0;r<n.length;r+=2)e[r/2]=n[r],t[r/2]=n[r+1];return{real:e,imag:t}}function tI(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function nI(n){const e=Math.floor(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function cx(n,e){const t=n[e*2],r=n[e*2+1];return{real:t,imag:r}}function rI(n,e,t,r){n[r*2]=e,n[r*2+1]=t}function sI(n,e){const t=new Float32Array(n/2),r=new Float32Array(n/2);for(let s=0;s<Math.ceil(n/2);s++){const o=(e?2:-2)*Math.PI*(s/n);t[s]=Math.cos(o),r[s]=Math.sin(o)}return{real:t,imag:r}}function oI(n,e,t){const r=(t?2:-2)*Math.PI*(n/e),s=Math.cos(r),o=Math.sin(r);return{real:s,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lx="->",E4=/->/g,aI=",",iI="...";function hx(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(E4,"").length)/lx.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${lx}").`);const[r,s]=n.split(lx);A(r.indexOf(iI)===-1,()=>`The ellipsis notation ("${iI}") is not supported yet.`);const o=r.split(aI),a=o.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<s.length;++d){const p=s[d];if(!o.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);i.indexOf(p)===-1&&i.push(p)}for(let d=0;d<r.length;++d){const p=r[d];i.indexOf(p)===-1&&p!==aI&&i.push(p)}const u=new Array(o.length);for(let d=0;d<a;++d){if(new Set(o[d].split("")).size!==o[d].length)throw new Error(`Found duplicate axes in input component ${o[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let p=0;p<o[d].length;++p)u[d].push(i.indexOf(o[d][p]))}const c=i.length,l=s.length,h=[];for(let d=l;d<c;++d)h.push(d);return{allDims:i,summedDims:h,idDims:u}}function dx(n,e){let t=new Array(n);t.fill(-1);for(let s=0;s<e.length;++s)t[e[s]]=s;const r=[];for(let s=0;s<n;++s)t[s]===-1&&r.push(s);return t=t.filter(s=>s!==-1),{permutationIndices:t,expandDims:r}}function px(n,e,t){const r=new Array(n);for(let s=0;s<t.length;++s){const o=t[s].shape;for(let a=0;a<e[s].length;++a)r[e[s][a]]===void 0?r[e[s][a]]=o[a]:A(r[e[s][a]]===o[a],()=>`Expected dimension ${r[e[s][a]]} at axis ${a} of input shaped ${JSON.stringify(o)}, but got dimension ${o[a]}`)}}function fx(n,e){const t=n,r=[];let s=0;n.length===0&&t.push(-1),s=n.length+1;for(let a=0;a<s;++a)r.push([]);const o=[];for(let a=0;a<t.length;++a){const i=t[a],u=R4(e,i);for(const c of u)o.indexOf(c)===-1&&(r[a].push(c),o.push(c))}return{path:t,steps:r}}function mx(n){return n.every((e,t)=>e===t)}function R4(n,e){const t=[];for(let r=0;r<n.length;++r)(n[r].length===0||n[r].indexOf(e)!==-1||e===-1)&&t.push(r);return t}function gx(n,e,t=0){let r=[];if(typeof e=="number")A(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(n.shape[t]/e);else{const s=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);A(s<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const a=e.reduce((i,u)=>u>0?i+u:i);e[o]=n.shape[t]-a}A(n.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uI(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function cI(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function lI(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hI(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function dI(n,e){return`size ${n} must be non-negative, not ${e}`}function pI(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function fI(n,e){const t=ne(n),r=ne(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${n} outputShape= ${e}`}function mI(n,e){const t=ne(n),r=ne(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${r}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xx(){return"segment ids must be >= 0"}function gI(){return"segment ids are not increasing"}function xI(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function yI(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vI(n,e){let t=!1,r;for(n<=Zg?(r=n,t=!0):r=em(n,Math.floor(Math.sqrt(n)));!t;)r>e||r===n?t=!0:r=em(n,r+1);return r}function bI(n,e,t){const r=[],s=n.length;for(let o=0;o<s;o++)o!==e?r.push(n[o]):r.push(t);return r}function yx(n,e,t,r){const s=e.shape.length,o=n.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${o}).`);if(t<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${t}).`);for(let h=0;h<r;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const a=n.shape[t],i=[];let u=1,c=1,l=1;for(let h=0;h<r;++h)i.push(n.shape[h]),u*=n.shape[h];for(let h=r;h<t;h++)i.push(n.shape[h]),c*=n.shape[h];for(let h=r;h<s;h++)i.push(e.shape[h]);for(let h=t+1;h<o;h++)i.push(n.shape[h]),l*=n.shape[h];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:a,outputShape:i}}const A4=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:yx,computeOutShape:bI,segOpComputeOptimalWindowSize:vI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ks(n){try{return n.map(e=>Gs(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function wI(n){return n.map(e=>Us(e))}const $4=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:sx,ERF_A2:ox,ERF_A3:ax,ERF_A4:ix,ERF_A5:ux,ERF_P:rx,PARALLELIZE_THRESHOLD:Zg,get RowPartitionType(){return Tr},SELU_SCALE:od,SELU_SCALEALPHA:sd,applyActivation:Pg,assertAndGetBroadcastShape:Pe,assertAxesAreInnerMostDims:en,assertParamsConsistent:Jg,assignToTypedArray:rI,axesAreInnerMostDims:yg,calculateShapes:jo,checkEinsumDimSizes:px,checkPadOnDimRoundingMode:En,combineLocations:Zw,combineRaggedTensorToTensorShapes:YC,complexWithEvenIndex:tI,complexWithOddIndex:nI,computeConv2DInfo:Zt,computeConv3DInfo:qs,computeDefaultPad:lg,computeDilation2DInfo:Vu,computeOptimalWindowSize:rd,computeOutAndReduceShapes:Ht,computeOutShape:Xr,computePool2DInfo:ar,computePool3DInfo:ys,convertConv2DDataFormat:vs,decodeEinsumEquation:hx,eitherStridesOrDilationsAreOne:cn,expandShapeToKeepDim:Dt,exponent:oI,exponents:sI,fromStringArrayToUint8:wI,fromUint8ToStringArray:ks,getAxesPermutation:gt,getBroadcastDims:qa,getComplexWithIndex:cx,getEinsumComputePath:fx,getEinsumPermutation:dx,getFusedBiasGradient:Lg,getFusedDyActivation:Mg,getImageCenter:ex,getInnerMostAxes:Nt,getPermuted:Zu,getRaggedRank:JC,getReductionAxes:Mt,getReshaped:Ju,getReshapedPermuted:ec,getRowPartitionTypesHelper:QC,getSliceBeginCoords:tx,getSliceSize:nx,getSparseFillEmptyRowsIndicesDenseShapeMismatch:uI,getSparseFillEmptyRowsNegativeIndexErrorMessage:cI,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:lI,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:pI,getSparseReshapeInputOutputMismatchErrorMessage:mI,getSparseReshapeInputOutputMultipleErrorMessage:fI,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:hI,getSparseReshapeNegativeOutputDimErrorMessage:dI,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:yI,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:xx,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:gI,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:xI,getUndoAxesPermutation:js,isIdentityPermutation:mx,log:p_,mergeRealAndImagArrays:Is,prepareAndValidate:Hg,prepareSplitSize:gx,segment_util:A4,shouldFuse:Bg,slice_util:S4,splitRealAndImagArrays:eI,stridesOrDilationsArePositive:Vo,tupleValuesAreOne:zo,upcastType:Bn,validateDefaultValueShape:ZC,validateInput:uB,validateUpdateShape:SC,warn:Yn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */b4();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CI={kernelName:Rl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,Qu(ge(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D4={kernelName:Wi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=dt(ge(t,"float32")),s=ln(De(nt(1),r));return Tt(Ae(n,s))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F4={kernelName:Ui,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=ln(De(dt(ge(t,"float32")),1));return Ae(n,r)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O4={kernelName:La,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Pe(t.shape,r.shape);return{a:()=>{let i=n;const u=Mt(t.shape,s);return u.length>0&&(i=Re(i,u)),K(i,t.shape)},b:()=>{let i=n;const u=Mt(r.shape,s);return u.length>0&&(i=Re(i,u)),K(i,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _4={kernelName:om,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((r,s)=>{t[s]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M4={kernelName:Al,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Xe(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L4={kernelName:$l,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Xe(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P4={kernelName:Gi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,ln(De(nt(1),dt(ge(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B4={kernelName:Hi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=ln(le(nt(1),dt(ge(t,"float32"))));return Ae(n,r)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z4={kernelName:Ki,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Pe(t.shape,r.shape);return{a:()=>{const i=le(dt(t),dt(r));let u=G(n,Ae(r,i));const c=Mt(t.shape,s);return c.length>0&&(u=Re(u,c)),K(u,t.shape)},b:()=>{const i=le(dt(t),dt(r));let u=Tt(G(n,Ae(t,i)));const c=Mt(r.shape,s);return c.length>0&&(u=Re(u,c)),K(u,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V4={kernelName:qi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,le(dt(ge(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W4={kernelName:ji,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,De(nt(1),dt(ge(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4(n,e,t,r,s,o){const a=B(n,"dy","avgPool3dGrad"),i=B(e,"input","avgPool3dGrad");let u=a,c=i,l=!1;i.rank===4&&(l=!0,u=K(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),c=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),A(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),En("avgPool3dGrad",s,o);const h={dy:u,input:c},d={filterSize:t,strides:r,pad:s,dimRoundingMode:o},p=q.runKernel(cm,h,d);return l?K(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const G4=X({avgPool3dGrad_:U4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H4={kernelName:Fl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{filterSize:s,strides:o,pad:a,dimRoundingMode:i}=t;return{x:()=>G4(n,r,s,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q4(n,e,t,r,s){const o=B(n,"dy","avgPoolGrad"),a=B(e,"input","avgPoolGrad");A(a.rank===o.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${o.rank})`);let i=a,u=o,c=!1;a.rank===3&&(c=!0,i=K(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),A(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);const l={dy:u,input:i},h={filterSize:t,strides:r,pad:s},d=q.runKernel(um,l,h);return c?K(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const j4=X({avgPoolGrad_:q4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K4={kernelName:Dl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{filterSize:s,strides:o,pad:a}=t;return{x:()=>j4(n,r,s,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X4={kernelName:Ol,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[r,s]=e,{transposeA:o,transposeB:a}=t;return!o&&!a?{a:()=>tt(n,s,!1,!0),b:()=>tt(r,n,!0,!1)}:!o&&a?{a:()=>tt(n,s,!1,!1),b:()=>tt(n,r,!0,!1)}:o&&!a?{a:()=>tt(s,n,!1,!0),b:()=>tt(r,n,!1,!1)}:{a:()=>tt(s,n,!0,!0),b:()=>tt(n,r,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y4={kernelName:_l,gradFunc:(n,e,t)=>{const{blockShape:r,crops:s}=t;return{x:()=>Ng(n,r,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q4={kernelName:c_,gradFunc:(n,e,t)=>{const r=t,s=r.inputShape,o=r.shape,a=Array.from(o);for(let u=s.length-1;u>=0;u--)if(s[u]===o[u])a[u]=1;else if(s[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${o}].`);const i=[];for(let u=0;u<a.length;u++)a[u]>1&&i.push(u);return{x:()=>Re(n,i,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J4={kernelName:Xi,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z4={kernelName:Yi,gradFunc:n=>({x:()=>Xe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ez={kernelName:Qi,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{clipValueMin:s,clipValueMax:o}=t;return{x:()=>bn(bs(Go(r,s),ja(r,o)),n,Xe(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tz={kernelName:Ml,inputsToSave:["x"],gradFunc:CI.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nz={kernelName:Ll,saveAllInputs:!0,gradFunc:(n,e,t)=>{const r=e.map(u=>u.shape),{axis:s}=t,o=Ve(s,e[0].shape)[0],a=r.map(u=>u[o]);return Zn(n,a,o).map(u=>()=>u)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rz={kernelName:Pl,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[r,s]=e,{dilations:o,strides:a,pad:i,dataFormat:u}=t;return A(zo(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>fg(r.shape,n,s,a,i,u),filter:()=>_g(r,n,s.shape,a,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sz={kernelName:Bl,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[r,s]=e,{strides:o,pad:a,dataFormat:i,dimRoundingMode:u}=t;return{dy:()=>Wo(n,s,o,a,i,1,u),filter:()=>_g(n,r,s.shape,o,a,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oz(n,e,t,r,s){let o=n;n.rank===4&&(o=K(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=e;a.rank===4&&(a=K(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),A(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),A(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),A(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),A(o.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${t[3]}.`),A(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);const i={x:o,dy:a},u={strides:r,pad:s,filterShape:t};return q.runKernel(fm,i,u)}const az=X({conv3DBackpropFilter_:oz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iz={kernelName:zl,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:r,strides:s,pad:o}=t;A(zo(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[a,i]=e;return{x:()=>Kw(a.shape,n,i,s,o),filter:()=>az(a,n,i.shape,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uz={kernelName:Ji,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(Tt(wC(ge(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cz={kernelName:Zi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(CC(ge(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lz={kernelName:Vl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{axis:s,exclusive:o,reverse:a}=t;return{x:()=>{const i=gt([s],r.rank);let u=Yw(n,s,o,!a);return i!=null&&(u=Ye(u,i)),u}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hz={kernelName:Wl,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:r,strides:s,pad:o,dimRoundingMode:a}=t,i=r??[1,1];A(zo(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[u,c]=e;return A(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),A(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),A(u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),A(cn(s,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${i}'.`),En("depthwiseConv2d",o,a),{x:()=>TB(u.shape,n,c,s,o,i,a),filter:()=>SB(u,n,c.shape,s,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dz={kernelName:Ul,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[r,s]=e,o={x:r,filter:s,dy:n},a={x:r,filter:s,dy:n};return{x:()=>q.runKernel(Cm,o,t),filter:()=>q.runKernel(Im,a,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pz={kernelName:tu,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,r={dy:n,y:t};return{x:()=>q.runKernel(Sm,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fz={kernelName:nu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,r=G(jr(Tt(dt(t))),2/Math.sqrt(Math.PI));return{x:()=>G(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mz={kernelName:ru,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gz={kernelName:Hl,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>K(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xz={kernelName:su,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,jr(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yz={kernelName:ou,gradFunc:n=>({x:()=>Xe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vz={kernelName:au,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Pe(t.shape,r.shape);return{a:()=>{const i=Ae(n,ge(r,"float32")),u=Mt(t.shape,s);return u.length>0?K(Re(i,u),t.shape):i},b:()=>{let i=G(n,ge(t,"float32"));const u=Mt(r.shape,s);u.length>0&&(i=K(Re(i,u),r.shape));const c=dt(r);return Tt(Ae(i,ge(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bz={kernelName:ql,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:r}=t,[s,o,a,i]=e,u=i??nt(1),c=Mt(o.shape,s.shape),l=[];if(o.rank===1){for(let v=0;v<s.shape.length-1;++v)l.push(s.shape[v]);l.push(1)}const h=De(s,o),d=G(n,u),p=yC(le(a,nt(r))),f=G(G(G(p,p),p),nt(-.5));return{x:()=>o.rank===1?K(G(G(n,Nr(K(p,[1,1,1,o.shape[0]]),l)),u),s.shape):K(G(G(n,p),u),s.shape),mean:()=>{let v=G(G(p,nt(-1)),d);return o.rank===1&&(v=Re(v,c)),K(v,o.shape)},variance:()=>{let v=G(G(f,h),d);return o.rank===1&&(v=Re(v,c)),K(v,o.shape)},scale:()=>{const v=G(h,p);let w=G(n,v);return o.rank===1&&(w=Re(w,c)),K(w,o.shape)},offset:()=>{let v=n;return o.rank===1&&(v=Re(v,c)),K(v,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wz={kernelName:jl,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[r,s]=e,{axis:o,batchDims:a}=t,i=Ve(o,r.shape)[0],u=(c,l,h)=>()=>{const d=c.shape,p=l.size,f=d.slice(0,i),m=f.length,g=d.slice(o,d.length).slice(1),x=g.length,y=II(0,m),b=II(m+1,m+1+x),v=kI([f,[p],g]),w=K(h,v),C=K(l,[p]),T=kI([[m],y,b]),S=Ye(w,T);let k=TC(S,C,c.shape[i]);const N=js(T);return k=Ye(k,N),k};if(a===1){const c=r.shape[0],l=r.split(c,0);return{x:()=>ws(l.map((p,f)=>u(p,s.slice(f,1),n.slice(f,1))())).reshape(r.shape),indices:()=>s}}else return{x:u(r,s,n),indices:()=>s}}};function II(n,e){const t=[];for(let r=n;r<e;++r)t.push(r);return t}function kI(n){const e=[];for(let t=0;t<n.length;++t)for(let r=0;r<n[t].length;++r)e.push(n[t][r]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cz={kernelName:iu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e;return{a:()=>Xe(t),b:()=>Xe(r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iz={kernelName:uu,gradFunc:n=>({x:()=>ge(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kz={kernelName:cu,gradFunc:n=>({x:()=>Xe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sz={kernelName:lu,gradFunc:n=>({x:()=>Xe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nz={kernelName:hu,gradFunc:n=>({x:()=>Xe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tz={kernelName:Xl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{alpha:s}=t,o=Jn(r,0);return{x:()=>bn(o,n,G(n,s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ez={kernelName:pu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,le(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rz={kernelName:du,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,ge(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Az={kernelName:h_,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r]=e,{axis:s}=t;return{logits:()=>{const a=jr(r);return De(n,G(Re(n,s,!0),a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $z(n,e,t,r=5,s=1,o=1,a=.5){const i={x:n,y:e,dy:t},u={depthRadius:r,bias:s,alpha:o,beta:a};return q.runKernel($m,i,u)}const Dz=X({localResponseNormalizationBackprop_:$z});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fz={kernelName:th,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r,s]=e,{depthRadius:o,bias:a,alpha:i,beta:u}=t;return{x:()=>Dz(r,s,n,o,a,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SI(n,e,t,r){return e.rank<t.rank&&(e=K(e,Dt(e.shape,r))),n.rank<t.rank&&(n=K(n,Dt(n.shape,r))),{x:()=>G(n,ge(qr(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NI={kernelName:nh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const r=t,{reductionIndices:s}=r,o=e[0],a=e[1],i=Ve(s,o.shape),u=SI(n,a,o,i);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oz={kernelName:fu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e;return{a:()=>G(n,ge(Go(t,r),"float32")),b:()=>G(n,ge(Hh(t,r),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(n,e,t,r,s,o,a){const i=B(n,"dy","maxPool3dGrad"),u=B(e,"input","maxPool3dGrad"),c=B(t,"output","maxPool3dGrad");let l=i,h=u,d=c,p=!1;u.rank===4&&(p=!0,l=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=K(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=K(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),A(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),A(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),A(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),En("maxPool3dGrad",o,a);const f={dy:l,input:h,output:d},m={filterSize:r,strides:s,pad:o,dimRoundingMode:a},g=q.runKernel(Fm,f,m);return p?K(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const Mz=X({maxPool3dGrad_:_z});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lz={kernelName:sh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r,s]=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=t;return{x:()=>Mz(n,r,s,o,a,i,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pz(n,e,t,r,s,o,a){const i=B(n,"dy","maxPoolGrad"),u=B(e,"input","maxPoolGrad"),c=B(t,"output","maxPoolGrad");A(u.rank===i.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${i.rank})`),A(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),A(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),En("maxPoolGrad",o,a);const l={dy:i,input:u,output:c},h={filterSize:r,strides:s,pad:o,dimRoundingMode:a};return q.runKernel(Dm,l,h)}const Bz=X({maxPoolGrad_:Pz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zz={kernelName:rh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r,s]=e,{filterSize:o,strides:a,pad:i}=t;return{x:()=>Bz(n,r,s,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vz={kernelName:oh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{axis:s}=t,o=Ve(s,r.shape),i=Ht(r.shape,o)[1],u=ne(i);return{x:()=>{const l=r.shape.slice();o.forEach(p=>{l[p]=1});const h=K(n,l);return Ae(G(h,Xs(r.shape,"float32")),u)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wz={kernelName:ah,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const r=t,{axis:s}=r,[o,a]=e,i=Ve(s,o.shape),u=SI(n,a,o,i);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uz={kernelName:mu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e;return{a:()=>G(n,ge(ja(t,r),"float32")),b:()=>G(n,ge(Jn(t,r),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gz={kernelName:ih,inputsToSave:["x"],gradFunc:(n,e,t)=>{const r=e[0],{paddings:s}=t,o=s.map(a=>a[0]);return{x:()=>ct(n,o,r.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hz={kernelName:gu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Pe(t.shape,r.shape);return{a:()=>{const i=Mt(t.shape,s);return i.length>0?K(Re(n,i),t.shape):n},b:()=>{const i=G(n,Tt(Gh(Ae(t,r)))),u=Mt(r.shape,s);return u.length>0?K(Re(i,u),r.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qz={kernelName:xu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Pe(t.shape,r.shape);return{a:()=>{const i=G(n,ge(r,"float32")),u=Mt(t.shape,s);return u.length>0?K(Re(i,u),t.shape):i},b:()=>{const i=G(n,ge(t,"float32")),u=Mt(r.shape,s);return u.length>0?K(Re(i,u),r.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jz={kernelName:uh,gradFunc:n=>({x:()=>Tt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kz={kernelName:hh,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>qt(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xz={kernelName:lh,gradFunc:n=>({x:()=>Xe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yz={kernelName:dh,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:r}=t;return Ko(n,r).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TI={kernelName:ph,inputsToSave:["x"],gradFunc:(n,e,t)=>{const r=e[0],{paddings:s}=t,o=s.map(a=>a[0]);return{x:()=>ct(n,o,r.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qz={kernelName:yu,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,r,s]=e,o=t,a=r,i=Pe(o.shape,a.shape);return{a:()=>{const l=ge(a,"float32");let h=G(n,G(l,Uo(o,De(l,nt(1)))));const d=Mt(o.shape,i);return d.length>0&&(h=Re(h,d)),K(h,o.shape)},b:()=>{const l=Jn(o,0),h=bn(l,Kr(o),Xe(o));let d=G(n,G(s,h));const p=Mt(a.shape,i);return p.length>0&&(d=Re(d,p)),K(d,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jz={kernelName:fh,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,r]=e,s=Jn(t,0);return{x:()=>bn(s,n,G(n,r)),alpha:()=>{let o=bn(s,Xe(n),G(n,t));const a=Mt(r.shape,n.shape);return a.length>0&&(o=Re(o,a)),K(o,r.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zz(n,e,t){const r=n.shape.slice();r[t]=1;const s=K(e,r),o=gg(n,t,!0,!1),a=gg(n,t,!0,!0),i=G(o,a);return G(s,i)}function eV(n,e,t){const r=n.shape.length,s=r-t.length,o=gt(t,r);let a=n;o!=null&&(a=Ye(n,o));const i=a.shape.slice(),c=i.splice(r-t.length,t.length).reduce((d,p)=>d*p,1);i.push(c);const l=a.reshape(i);let h=Zz(l,e,s);if(h=h.reshape(a.shape),o!=null){const d=js(o);h=Ye(h,d)}return h}const tV={kernelName:mh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{axis:s}=t;let o=[];return s==null?o=r.shape.map((a,i)=>i):typeof s=="number"?o=[s]:o=s,{x:()=>eV(r,n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nV={kernelName:eu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Pe(t.shape,r.shape);return{a:()=>{const i=Ae(n,ge(r,"float32")),u=Mt(t.shape,s);return u.length>0?K(Re(i,u),t.shape):i},b:()=>{let i=G(n,ge(t,"float32"));const u=Mt(r.shape,s);u.length>0&&(i=K(Re(i,u),r.shape));const c=dt(r);return Tt(Ae(i,ge(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rV={kernelName:vu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,Tt(dt(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sV={kernelName:wu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,r=G(ja(t,6),Qu(t));return{x:()=>G(n,ge(r,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oV={kernelName:bu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,ge(Qu(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aV={kernelName:gh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>K(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iV={kernelName:yh,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[r]=e,s={dy:n,images:r};return{images:()=>q.runKernel(zm,s,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uV={kernelName:xh,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[r]=e,s={dy:n,images:r};return{images:()=>q.runKernel(Bm,s,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cV={kernelName:vh,gradFunc:(n,e,t)=>{const{dims:r}=t,s=Ve(r,n.shape);return{x:()=>qo(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lV={kernelName:Cu,gradFunc:n=>({x:()=>Xe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hV={kernelName:Iu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Tt(Ae(n,G(Uo(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dV={kernelName:bh,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>ge(Xe(t),"float32"),t:()=>G(n,ge(t,n.dtype)),e:()=>G(n,ge(Cg(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pV={kernelName:ku,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=Jn(t,nt(0)),s=nt(sd),o=nt(od),a=G(n,o),i=G(G(n,s),jr(ge(t,"float32")));return bn(r,a,i)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fV={kernelName:Eu,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,G(t,De(nt(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mV={kernelName:Tu,gradFunc:n=>({x:()=>Xe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gV={kernelName:Su,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(mg(ge(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xV={kernelName:Nu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(Xw(ge(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yV={kernelName:wh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{begin:s,size:o}=t,a=r.shape,[i,u]=nd(r,s,o),c=[];for(let l=0;l<n.rank;l++)c.push([i[l],a[l]-i[l]-u[l]]);return{x:()=>Sg(n,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vV={kernelName:Sh,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r]=e,{dim:s}=t,o=!0,a=G(n,r);return{logits:()=>De(a,G(Re(a,[s],o),r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bV={kernelName:Ru,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,Ha(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EI={kernelName:Ih,gradFunc:(n,e,t)=>{const{blockShape:r,paddings:s}=t;return{x:()=>pg(n,r,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RI={kernelName:kh,gradFunc:(n,e,t)=>{const{axis:r}=t;return{x:()=>Rn(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wV={kernelName:Au,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,G(ln(ge(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CV={kernelName:Vm,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(n,G(ge(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IV={kernelName:$u,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=nt(2);return{a:()=>G(n,G(s,De(t,r))),b:()=>G(n,G(s,De(r,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kV={kernelName:Mu,gradFunc:n=>({x:()=>Xe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SV={kernelName:Du,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Pe(t.shape,r.shape);return{a:()=>{let i=n;const u=Mt(t.shape,s);return u.length>0&&(i=Re(i,u)),K(i,t.shape)},b:()=>{let i=n;const u=Mt(r.shape,s);return u.length>0&&(i=Re(i,u)),K(Tt(i),r.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NV={kernelName:Ch,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,s=r.shape.slice(),{axis:o}=t;Ve(o,r.shape).forEach(c=>{s[c]=1});const i=K(n,s),u=G(i,Xs(r.shape,"float32"));return{x:()=>u}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TV={kernelName:Fu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ae(n,dt(mg(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EV={kernelName:Ou,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>G(De(nt(1),dt(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RV={kernelName:_u,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{reps:s}=t;return{x:()=>{let a=Xe(r);if(r.rank===1)for(let i=0;i<s[0];++i)a=le(a,ct(n,[i*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let i=0;i<s[0];++i)for(let u=0;u<s[1];++u)a=le(a,ct(n,[i*r.shape[0],u*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let i=0;i<s[0];++i)for(let u=0;u<s[1];++u)for(let c=0;c<s[2];++c)a=le(a,ct(n,[i*r.shape[0],u*r.shape[1],c*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let i=0;i<s[0];++i)for(let u=0;u<s[1];++u)for(let c=0;c<s[2];++c)for(let l=0;l<s[3];++l)a=le(a,ct(n,[i*r.shape[0],u*r.shape[1],c*r.shape[2],l*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AV={kernelName:Pa,gradFunc:(n,e,t)=>{const r=t,{perm:s}=r,o=js(s);return{x:()=>Ye(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $V={kernelName:Nh,gradFunc:(n,e,t)=>{const r=t,{axis:s}=r;return{value:()=>ws(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DV={kernelName:Th,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>FV(n,t)}}};function FV(n,e){const t=Ks(e,Xe(e)),r=vg(n,t);let s=Go(e,nt(0,"int32"));const o=r.rank-s.rank;for(let i=0;i<o;++i)s=An(s,i+1);s=bs(s,Xs(r.shape,"bool"));const a=Xe(r);return bn(s,r,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OV={kernelName:Eh,gradFunc:n=>({x:()=>Xe(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _V=[CI,D4,F4,O4,_4,M4,L4,P4,B4,z4,V4,W4,H4,K4,X4,Y4,Q4,J4,Z4,ez,tz,nz,sz,rz,iz,uz,cz,lz,hz,dz,nV,pz,fz,mz,gz,xz,vz,yz,bz,wz,Cz,Iz,kz,Sz,Nz,Tz,Ez,Rz,Az,Fz,NI,NI,Oz,Lz,zz,Vz,Wz,Uz,Gz,Hz,qz,jz,Kz,Xz,Yz,TI,TI,Qz,Jz,tV,rV,sV,oV,aV,iV,uV,cV,lV,hV,dV,pV,fV,mV,gV,xV,yV,vV,bV,EI,EI,RI,RI,wV,IV,CV,kV,SV,NV,TV,EV,RV,AV,$V,DV,OV];for(const n of _V)f_(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.abs=function(){return this.throwIfDisposed(),vn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.acos=function(){return this.throwIfDisposed(),xM(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.acosh=function(){return this.throwIfDisposed(),vM(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.add=function(n){return this.throwIfDisposed(),le(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.all=function(n,e){return this.throwIfDisposed(),Hw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.any=function(n,e){return this.throwIfDisposed(),cg(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.argMax=function(n){return this.throwIfDisposed(),zu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.argMin=function(n){return this.throwIfDisposed(),kM(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.asScalar=function(){return this.throwIfDisposed(),A(this.size===1,()=>"The array must have only 1 element."),K(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.asType=function(n){return this.throwIfDisposed(),ge(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.as1D=function(){return this.throwIfDisposed(),K(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.as2D=function(n,e){return this.throwIfDisposed(),K(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),K(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.as4D=function(n,e,t,r){return this.throwIfDisposed(),K(this,[n,e,t,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.as5D=function(n,e,t,r,s){return this.throwIfDisposed(),K(this,[n,e,t,r,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.asin=function(){return this.throwIfDisposed(),NM(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.asinh=function(){return this.throwIfDisposed(),EM(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.atan=function(){return this.throwIfDisposed(),AM(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.atan2=function(n){return this.throwIfDisposed(),DM(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.atanh=function(){return this.throwIfDisposed(),OM(this)},te().prototype.avgPool=function(n,e,t,r){return this.throwIfDisposed(),dg(this,n,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),pg(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.batchNorm=function(n,e,t,r,s){return this.throwIfDisposed(),Bh(this,n,e,t,r,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.broadcastTo=function(n){return this.throwIfDisposed(),Gu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.cast=function(n){return this.throwIfDisposed(),ge(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.ceil=function(){return this.throwIfDisposed(),i3(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),Qn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof _t&&(n=[n]),Rn([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.conv1d=function(n,e,t,r,s,o){return this.throwIfDisposed(),qw(this,n,e,t,r,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.conv2dTranspose=function(n,e,t,r,s){return this.throwIfDisposed(),jw(this,n,e,t,r,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.conv2d=function(n,e,t,r,s,o){return this.throwIfDisposed(),Wo(this,n,e,t,r,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.cos=function(){return this.throwIfDisposed(),mg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.cosh=function(){return this.throwIfDisposed(),Xw(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),gg(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),Yw(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),D3(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.depthwiseConv2d=function(n,e,t,r,s,o){return this.throwIfDisposed(),xg(this,n,e,t,r,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.dilation2d=function(n,e,t,r,s){return this.throwIfDisposed(),_3(this,n,e,t,r,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.divNoNan=function(n){return this.throwIfDisposed(),z3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.div=function(n){return this.throwIfDisposed(),Ae(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.dot=function(n){return this.throwIfDisposed(),W3(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.elu=function(){return this.throwIfDisposed(),Vh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.equal=function(n){return this.throwIfDisposed(),qr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.erf=function(){return this.throwIfDisposed(),Jw(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),eL(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.exp=function(){return this.throwIfDisposed(),jr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.expandDims=function(n){return this.throwIfDisposed(),An(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.expm1=function(){return this.throwIfDisposed(),sL(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.fft=function(){return this.throwIfDisposed(),kC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.flatten=function(){return this.throwIfDisposed(),K(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.floor=function(){return this.throwIfDisposed(),Gh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.floorDiv=function(n){return this.throwIfDisposed(),Gw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.gather=function(n,e,t){return this.throwIfDisposed(),vg(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Go(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.greater=function(n){return this.throwIfDisposed(),Jn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.ifft=function(){return this.throwIfDisposed(),Fg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.irfft=function(){return this.throwIfDisposed(),XP(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.isFinite=function(){return this.throwIfDisposed(),pL(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.isInf=function(){return this.throwIfDisposed(),mL(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.isNaN=function(){return this.throwIfDisposed(),xL(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.leakyRelu=function(n){return this.throwIfDisposed(),wg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.lessEqual=function(n){return this.throwIfDisposed(),ja(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.less=function(n){return this.throwIfDisposed(),Hh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.localResponseNormalization=function(n,e,t,r){return this.throwIfDisposed(),CL(this,n,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.logSigmoid=function(){return this.throwIfDisposed(),RL(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.logSoftmax=function(n){return this.throwIfDisposed(),rC(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),sC(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.log=function(){return this.throwIfDisposed(),Kr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.log1p=function(){return this.throwIfDisposed(),nC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.logicalAnd=function(n){return this.throwIfDisposed(),bs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.logicalNot=function(){return this.throwIfDisposed(),Cg(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.logicalOr=function(n){return this.throwIfDisposed(),oC(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.logicalXor=function(n){return this.throwIfDisposed(),LL(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),tt(this,n,e,t)},te().prototype.maxPool=function(n,e,t,r){return this.throwIfDisposed(),Ig(this,n,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.max=function(n,e){return this.throwIfDisposed(),Sr(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.maximum=function(n){return this.throwIfDisposed(),Ks(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.mean=function(n,e){return this.throwIfDisposed(),Ft(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.min=function(n,e){return this.throwIfDisposed(),Wh(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.minimum=function(n){return this.throwIfDisposed(),ju(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),HL(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.mod=function(n){return this.throwIfDisposed(),jL(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.mul=function(n){return this.throwIfDisposed(),G(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.neg=function(){return this.throwIfDisposed(),Tt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.norm=function(n,e,t){return this.throwIfDisposed(),Uh(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.notEqual=function(n){return this.throwIfDisposed(),qh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),aC(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.onesLike=function(){return this.throwIfDisposed(),ir(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.pad=function(n,e){return this.throwIfDisposed(),Sg(this,n,e)},te().prototype.pool=function(n,e,t,r,s,o){return this.throwIfDisposed(),rP(this,n,e,t,r,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.pow=function(n){return this.throwIfDisposed(),Uo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.prelu=function(n){return this.throwIfDisposed(),Tg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.prod=function(n,e){return this.throwIfDisposed(),aP(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.reciprocal=function(){return this.throwIfDisposed(),RP(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.relu=function(){return this.throwIfDisposed(),Ho(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.relu6=function(){return this.throwIfDisposed(),gC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.reshapeAs=function(n){return this.throwIfDisposed(),K(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.reshape=function(n){return this.throwIfDisposed(),K(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),$C(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),DC(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.reverse=function(n){return this.throwIfDisposed(),qo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.rfft=function(){return this.throwIfDisposed(),JP(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.round=function(){return this.throwIfDisposed(),xC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.rsqrt=function(){return this.throwIfDisposed(),yC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.selu=function(){return this.throwIfDisposed(),vC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.separableConv2d=function(n,e,t,r,s,o){return this.throwIfDisposed(),bC(this,n,e,t,r,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.sigmoid=function(){return this.throwIfDisposed(),Ha(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.sign=function(){return this.throwIfDisposed(),PP(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.sin=function(){return this.throwIfDisposed(),wC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.sinh=function(){return this.throwIfDisposed(),CC(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.slice=function(n,e){return this.throwIfDisposed(),ct(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.softmax=function(n){return this.throwIfDisposed(),Dg(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.softplus=function(){return this.throwIfDisposed(),qu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),Ng(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.split=function(n,e){return this.throwIfDisposed(),Zn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.sqrt=function(){return this.throwIfDisposed(),ln(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.square=function(){return this.throwIfDisposed(),dt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.squaredDifference=function(n){return this.throwIfDisposed(),eB(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.squeeze=function(n){return this.throwIfDisposed(),Yu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof _t?[this,n]:[this,...n];return ws(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.step=function(n){return this.throwIfDisposed(),Qu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.stridedSlice=function(n,e,t,r,s,o,a,i){return this.throwIfDisposed(),oB(this,n,e,t,r,s,o,a,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.sub=function(n){return this.throwIfDisposed(),De(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.sum=function(n,e){return this.throwIfDisposed(),Re(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.tan=function(){return this.throwIfDisposed(),iB(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.tanh=function(){return this.throwIfDisposed(),Ph(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.tile=function(n){return this.throwIfDisposed(),Nr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.toBool=function(){return this.throwIfDisposed(),ge(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.toFloat=function(){return this.throwIfDisposed(),ge(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.toInt=function(){return this.throwIfDisposed(),ge(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.topk=function(n,e){return this.throwIfDisposed(),lB(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.transpose=function(n){return this.throwIfDisposed(),Ye(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.unique=function(n){return this.throwIfDisposed(),pB(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),TC(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.unstack=function(n){return this.throwIfDisposed(),Ko(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.where=function(n,e){return this.throwIfDisposed(),bn(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */te().prototype.zerosLike=function(){return this.throwIfDisposed(),Xe(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Yr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Yr.prototype)}}class cr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,cr.prototype)}}class U extends Error{constructor(e){super(e),Object.setPrototypeOf(this,U.prototype)}}class Be extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Be.prototype)}}class vx extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vx.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class AI{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const r=this.cache.keys().next().value;this.cache.delete(r)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const r=this.cache.keys().next().value;this.cache.delete(r)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Xo(n,e){if(Array.isArray(n)){let t=[];for(let r=0;r<e;r++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function Qr(n,e){if(!n)throw new vx(e)}function $I(n,e){let t=0;for(const r of n)r===e&&t++;return t}function $n(n){return n.length===1?n[0]:n}function st(n){return Array.isArray(n)?n:[n]}function Ss(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function Yo(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let lr={};function bx(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function wx(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>wx(e));else{const e=Object.keys(n);for(const t of e){const r=n[t];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?n[t]=r.value:wx(r))}}}function tc(n,e={},t={},r="object",s=!1){if(typeof n=="string"){const o=n;let a;if(o in t)a=t[o];else if(o in lr)a=lr[o];else if(a=e[o],a==null)throw new U(`Unknown ${r}: ${n}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const o=n;if(o.className==null||o.config==null)throw new U(`${r}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const a=o.className;let i,u;if(a in t?[i,u]=t[a]:a in lr?[i,u]=lr.className:a in e&&([i,u]=e[a]),i==null)throw new U(`Unknown ${r}: ${a}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){const c={};for(const p of Object.keys(lr))c[p]=lr[p];for(const p of Object.keys(t))c[p]=t[p];const l=o.config;l.customObjects=c;const h=Object.assign({},lr);for(const p of Object.keys(t))lr[p]=t[p];wx(o.config);const d=u(i,o.config,t,s);return lr=Object.assign({},h),d}else{const c=Object.assign({},lr);for(const h of Object.keys(t))lr[h]=t[h];const l=new i(o.config);return lr=Object.assign({},c),l}}}function MV(n,e){return n<e?-1:n>e?1:0}function ad(n,e){return-1*MV(n,e)}function Qs(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function LV(n){if(n==null)throw new U(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function Qo(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new U(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function Cx(n,e,t=0,r=1/0){return Qr(t>=0),Qr(r>=t),Array.isArray(n)&&n.length>=t&&n.length<=r&&n.every(s=>typeof s===e)}function jt(n,e){Array.isArray(n)?(A(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,r)=>jt(t,`element ${r+1} of ${e}`))):A(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${DI(n)}.`)}function DI(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>DI(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function PV(n,e,t){let r=t!=null?t():Nn(),s;return(...a)=>{const i=t!=null?t():Nn();return i-r<e||(r=i,s=n(...a)),s}}function FI(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let BV=0;function OI(){return BV++}const id={};function ud(n=""){return n in id||(id[n]=0),id[n]+=1,n+id[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const zV=["channelsFirst","channelsLast"],VV=["nearest","bilinear"],WV=["valid","same","causal"],UV=["max","avg"],GV=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ja=new Map;function Et(n){Qo(zV,"DataFormat",n)}function HV(n){Qo(VV,"InterpolationFormat",n)}function er(n){Qo(WV,"PaddingMode",n)}function _I(n){Qo(UV,"PoolMode",n)}const nc=[],MI="/";function Jo(n,e){nc.push(n);try{const t=e();return nc.pop(),t}catch(t){throw nc.pop(),t}}function qV(){return nc.length===0?"":nc.join(MI)+MI}function LI(n){if(!BI(n))throw new Error("Not a valid tensor name: '"+n+"'");return qV()+n}function PI(n){if(!BI(n))throw new Error("Not a valid tensor name: '"+n+"'");Ja.has(n)||Ja.set(n,0);const e=Ja.get(n);if(Ja.set(n,Ja.get(n)+1),e>0){const t=`${n}_${e}`;return Ja.set(t,1),t}else return n}const jV=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function BI(n){return!!n.match(jV)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function KV(n){return n===parseInt(n.toString(),10)}function Js(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let r=1;for(let s=e;s<t;++s)r*=n[s];return r}function Za(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const r=n[t];r<e&&(e=r)}return e}function Zs(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const r=n[t];r>e&&(e=r)}return e}function Er(n,e){if(e<n)throw new U(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let r=n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Ix;function Lt(){return Ix==null&&(Ix=W_().epsilon()),Ix}function Rr(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Jr(n,e){return ge(n,e)}function rc(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),K(n,t)}function XV(n,e){return Q(()=>{if(n.shape.length!==2)throw new U(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=rc(n,1);return Nx(t,[1,e,1])})}function YV(n){const e=[Js(n.shape)];return K(n,e)}function QV(n){if(n.rank<=1)throw new U(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Js(n.shape,1)];return K(n,e)}function Zo(n,e,t){return Q(()=>{switch(n.rank){case 1:return Ag(n,e,t);case 2:return IC(n,[e,0],[t,n.shape[1]]);case 3:return $g(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return td(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return ct(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return ct(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new U(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function kx(n,e,t){return Q(()=>{switch(n.rank){case 1:return Ag(n,e,t);case 2:return IC(n,[0,e],[n.shape[0],t]);case 3:return $g(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return td(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new U(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function cd(n,e,t,r){return Q(()=>{switch(n.rank){case 1:return Ag(n,e,t);case 2:switch(r){case 1:return Zo(n,e,t);case 2:return kx(n,e,t);default:throw new U(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Zo(n,e,t);case 2:return $g(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return kx(n,e,t);default:throw new U(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Zo(n,e,t);case 2:return td(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return td(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return kx(n,e,t);default:throw new U(`The axis is not within the rank of the tensor ${r}`)}default:throw new U(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Sx(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),Rn(n,e)}function zI(n,e){switch(n.rank){case 1:return l3([n,e]);case 2:return d3([n,e],0);case 3:return f3([n,e],0);case 4:return g3([n,e],0);default:throw new U(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function Nx(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new U(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return Nr(n,e)}function ld(n,e=0,t=1,r,s){return SP(n,e,t,r,s)}function Zr(n,e,t,r){if(n.rank<2||e.rank<2)throw new Be(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const s=n.shape.slice(-1)[0],o=e.shape.slice(-2)[0];if(s!==o)throw new Be(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return RC({a:n,b:e,transposeA:!1,transposeB:!1,bias:r?Tx(n.rank,r,Rr()):null,activation:t});{const s=n.shape.slice(),o=s.pop();n=K(n,[-1,o]);const a=e.shape.slice(),i=a.pop(),u=a.pop(),c=[...a,i],l=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=K(Ye(e,l),[u,-1]);const h=[...s,...c];return K(RC({a:n,b:e,transposeA:!1,transposeB:!1,bias:r?Tx(n.rank,r,Rr()):null,activation:t}),h)}}function VI(n,e,t){return Q(()=>(Array.isArray(e)?e=zn(e,"int32"):e=ge(e,"int32"),vg(n,e,t)))}function sc(n){return G(n,n)}function Tx(n,e,t){const r=e.shape;if(e.rank!==1&&e.rank!==n)throw new U(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return r.length===1?K(e,[1,r[0],1,1,1]):K(e,[1,r[3],r[0],r[1],r[2]]);if(t==="channelsLast")return r.length===1?K(e,[1,1,1,1,r[0]]):K(e,[1].concat(r))}else if(n===4){if(t==="channelsFirst")return r.length===1?K(e,[1,r[0],1,1]):K(e,[1,r[2],r[0],r[1]]);if(t==="channelsLast")return r.length===1?K(e,[1,1,1,r[0]]):K(e,[1].concat(r))}else if(n===3){if(t==="channelsFirst")return r.length===1?K(e,[1,r[0],1]):K(e,[1,r[1],r[0]]);if(t==="channelsLast")return r.length===1?K(e,[1,1,r[0]]):K(e,[1].concat(r))}else if(n<3)return e;throw new U(`Unsupported input rank by biasAdd: ${e.rank}`)}function Ar(n,e,t){return Q(()=>(t==null&&(t=Rr()),Et(t),le(n,Tx(n.rank,e,t))))}function JV(n,e=1){if(e!==1)throw new Be(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Vh(n)}function ZV(n){return Q(()=>Ae(n,le(vn(n),1)))}function WI(n,e,t,r){return Q(()=>bB(n,e,t,r))}function eW(n){return Q(()=>{const e=le(.5,G(.2,n));return Qn(e,0,1)})}function oc(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const tW=["fanIn","fanOut","fanAvg"],nW=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rW(n){Qo(tW,"FanMode",n)}function sW(n){Qo(nW,"Distribution",n)}class hr extends Ya{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class UI extends hr{apply(e,t){return qt(e,t)}}UI.className="Zeros",ce(UI);class Ex extends hr{apply(e,t){return Xs(e,t)}}Ex.className="Ones",ce(Ex);class GI extends hr{constructor(e){if(super(),typeof e!="object")throw new U(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new U(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Q(()=>G(nt(this.value),Xs(e,t)))}getConfig(){return{value:this.value}}}GI.className="Constant",ce(GI);class HI extends hr{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ku(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}HI.className="RandomUniform",ce(HI);class qI extends hr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Be(`randomNormal does not support dType ${t}.`);return ld(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}qI.className="RandomNormal",ce(qI);class jI extends hr{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Be(`truncatedNormal does not support dType ${t}.`);return NC(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}jI.className="TruncatedNormal",ce(jI);class KI extends hr{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return Q(()=>{if(e.length!==2||e[0]!==e[1])throw new U("Identity matrix initializer can only be used for 2D square matrices.");return G(this.gain,tC(e[0]))})}getConfig(){return{gain:this.gain}}}KI.className="Identity",ce(KI);function oW(n,e="channelsLast"){let t,r;if(Et(e),n.length===2)t=n[0],r=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const s=Js(n,2);t=n[1]*s,r=n[0]*s}else if(e==="channelsLast"){const s=Js(n,0,n.length-2);t=n[n.length-2]*s,r=n[n.length-1]*s}}else{const s=Js(n);t=Math.sqrt(s),r=Math.sqrt(s)}return[t,r]}class Vn extends hr{constructor(e){if(super(),e.scale<0)throw new U(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,rW(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,sW(this.distribution),this.seed=e.seed}apply(e,t){const r=oW(e),s=r[0],o=r[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,o):a/=Math.max(1,(s+o)/2),this.distribution==="normal"){const i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Be(`${this.getClassName()} does not support dType ${t}.`);return NC(e,0,i,t,this.seed)}else{const i=Math.sqrt(3*a);return Ku(e,-i,i,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Vn.className="VarianceScaling",ce(Vn);class Rx extends Vn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Vn.className}}Rx.className="GlorotUniform",ce(Rx);class Ax extends Vn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Vn.className}}Ax.className="GlorotNormal",ce(Ax);class $x extends Vn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Vn.className}}$x.className="HeNormal",ce($x);class Dx extends Vn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Vn.className}}Dx.className="HeUniform",ce(Dx);class Fx extends Vn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Vn.className}}Fx.className="LeCunNormal",ce(Fx);class Ox extends Vn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Vn.className}}Ox.className="LeCunUniform",ce(Ox);class XI extends hr{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Q(()=>{if(e.length<2)throw new Be("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const r=ne(e.slice(0,-1)),s=e[e.length-1],o=r*s;o>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${o}) elements: Slowness may result.`);const a=[Math.max(s,r),Math.min(s,r)],i=ld(a,0,1,t,this.seed),u=g4.qr(i,!1);let c=u[0];const h=u[1].flatten().stridedSlice([0],[Math.min(s,r)*Math.min(s,r)],[Math.min(s,r)+1]);return c=G(c,h.sign()),r<s&&(c=c.transpose()),G(nt(this.gain),c.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}XI.className="Orthogonal",ce(XI);const YI={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function QI(n,e={}){return tc(n,ur.getMap().classNameMap,e,"initializer")}function xt(n){return bx(n)}function pt(n){if(typeof n=="string"){const e=n in YI?YI[n]:n;if(e==="GlorotNormal")return new Ax;if(e==="GlorotUniform")return new Rx;if(e==="HeNormal")return new $x;if(e==="HeUniform")return new Dx;if(e==="LeCunNormal")return new Fx;if(e==="LeCunUniform")return new Ox;{const t={};return t.className=e,t.config={},QI(t)}}else return n instanceof hr?n:QI(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _x(n){return Array.isArray(n)&&Array.isArray(n[0])}function hd(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Oe(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new U(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function Ze(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new U(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dd(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((r,s)=>r*s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const JI="Variable";class aW{constructor(e,t="float32",r=JI,s=!0,o=null){this.dtype=t??"float32",this.shape=e.shape,this.id=OI(),r=r??JI,this.originalName=LI(r),this.name=PI(this.originalName),this.trainable_=s,this.constraint=o,this.val=gB(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),iW(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function iW(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function Mx(n){return n.map(e=>e.read())}function Lx(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Pt{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class es{constructor(e,t,r,s,o,a,i){this.dtype=e,this.shape=t,this.sourceLayer=r,this.inputs=s,this.callArgs=o,this.outputTensorIndex=i,this.id=OI(),a!=null&&(this.originalName=LI(a),this.name=PI(this.originalName)),this.rank=t.length}}let uW=0;class pd{constructor(e,t){this.callArgs=t,this.id=uW++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const r of e.inboundLayers)r!=null&&r.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let cW=0;class Ue extends Ya{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=cW++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const r=this.getClassName();t=Ss(r)+"_"+ud(r)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let r;if(e.batchInputShape!=null)r=e.batchInputShape;else if(e.inputShape!=null){let o=null;e.batchSize!=null&&(o=e.batchSize),r=[o].concat(e.inputShape)}this.batchInputShape=r;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new cr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new U(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return $n(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return $n(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Yr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Yr(`Layer ${this.name} is not connected, no input to return.`);return $n(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Yr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Yr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return $n(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=st(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const r=st(this.inputSpec);if(t.length!==r.length)throw new U(`Layer ${this.name} expects ${r.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let s=0;s<t.length;s++){const o=t[s],a=r[s];if(a==null)continue;const i=o.rank;if(a.ndim!=null&&i!==a.ndim)throw new U(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(a.maxNDim!=null&&i>a.maxNDim)throw new U(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(a.minNDim!=null&&i<a.minNDim)throw new U(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(a.dtype!=null&&o.dtype!==a.dtype)throw new U(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${o.dtype}.`);if(a.axes){const u=o.shape;for(const c in a.axes){const l=Number(c),h=a.axes[c],d=l>=0?u[l]:u[u.length+l];if(h!=null&&[h,null].indexOf(d)===-1)throw new U(`Input ${s} is incompatible with layer ${this.name}: expected axis ${l} of input shape to have value ${h} but got shape ${u}.`)}}if(a.shape!=null)for(let u=0;u<a.shape.length;++u){const c=a.shape[u],l=o.shape[u];if(c!=null&&l!=null&&c!==l)throw new U(`Input ${s} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const r=st(e),s=dW(e),o=pW(e);if(s===o)throw new U("Arguments to apply() must be all SymbolicTensors or all Tensors");return Jo(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const a=[];for(const i of st(e))a.push(i.shape);this.build($n(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const i=st(a),u=[];for(let c of i)r.indexOf(c)!==-1&&(c=c.clone()),u.push(c);if(a=$n(u),this.activityRegularizer!=null)throw new Be("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=lW(e),i=this.computeOutputShape(a);let u;const c=hW(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?u=i.map((l,h)=>new es(c,l,this,st(e),t,this.name,h)):u=new es(c,i,this,st(e),t,this.name),this.addInboundNode(e,u,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Be("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((r,s)=>{r!=null&&e[s]!=null&&e[s]!==r&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Yr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const r=JSON.stringify(t.outputShapes);e.indexOf(r)===-1&&e.push(r)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Yr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new cr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return dd(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Mx(e?this.trainableWeights:this.weights)}setWeights(e){Q(()=>{const t=this.weights;if(t.length!==e.length)throw new U(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const r=[],s=Mx(t);for(let o=0;o<s.length;++o){const a=s[o],i=t[o],u=e[o];if(!et(a.shape,u.shape))throw new U(`Layer weight shape ${a.shape} not compatible with provided weight shape ${u.shape}`);r.push([i,u])}Lx(r)})}addWeight(e,t,r,s,o,a,i,u){if(this._addedWeightNames.indexOf(e)!==-1)throw new U(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),r==null&&(r="float32"),this.fastWeightInitDuringBuild&&(s=u!=null?u():pt("zeros"));const c=s.apply(t,r),l=new aW(c,r,e,a,i);return c.dispose(),o!=null&&this.addLoss(()=>o.apply(l.read())),a==null&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=st(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(r=>{if(r!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,r){if(!this.supportsMasking)return;const s=this.computeMask(e,r),o=st(t),a=st(s);if(o.length!==a.length)throw new Error(`${this.name} outputs ${o.length} tensors but ${o.length} masks for those tensors`);for(let i=0;i<o.length;i++)o[i].kerasMask=a[i]}addInboundNode(e,t,r,s,o,a,i=null){const u=st(e);t=st(t),r=st(r),s=st(s),o=hd(o),a=hd(a);const c=[],l=[],h=[];for(const d of u)c.push(d.sourceLayer),l.push(d.nodeIndex),h.push(d.tensorIndex);new pd({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:h,inputTensors:u,outputTensors:t,inputMasks:r,outputMasks:s,inputShapes:o,outputShapes:a},i);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function lW(n){n=st(n);const e=[];for(const t of n)e.push(t.shape);return $n(e)}function hW(n){return"float32"}function ZI(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const r=e.inboundNodes[t];if(r.inboundLayers.length===0)return r.inputTensors;{const s=[];for(let o=0;o<r.inboundLayers.length;o++){const a=r.inputTensors[o],i=r.inboundLayers[o],u=r.nodeIndices[o],c=ZI(a,i,u);for(const l of c)s.indexOf(l)===-1&&s.push(l)}return s}}}function dW(n){let e=!0;for(const t of st(n))if(!(t instanceof es)){e=!1;break}return e}function pW(n){let e=!0;for(const t of st(n))if(t instanceof es){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ac extends Ue{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:ud("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new U("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new U("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new U("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const r=e.dtype||"float32";this.batchInputShape=t,this.dtype=r,this.inputSpec=[{shape:t}];const s=new es(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new pd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new U(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}ac.className="InputLayer",ce(ac);function fW(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new U("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new ac({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mW(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return ge(e,n.dtype)}catch{throw new U(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class eo{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof eo)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,r){if(this.id2Value[e.id]==null)this.id2Value[e.id]=mW(e,t),this.name2Id[e.name]=e.id,r!=null&&(this.id2Mask[e.id]=r);else throw new U(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof es){if(this.id2Value[e.id]==null)throw new U(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new U(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof es){if(this.id2Value[e.id]==null)throw new U(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new U(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Ge(this.id2Mask)}}const fd=new AI,md=new AI;function gW(n){fd!=null&&fd.setMaxEntries(n),md!=null&&md.setMaxEntries(n)}function ic(n,e,t,r){const s=t==null?!1:t.training,o=Array.isArray(n),a=o?n:[n],i=a.map(f=>f.name),u=[],c=e.names();for(const f of i)c.indexOf(f)!==-1?u.push(e.getValue(f)):u.push(null);const l=i.join(",")+"|"+e.names().sort().join(",");let h=fd.get(l),d;if(h==null){const f=xW(a,e);h=f.sorted,d=f.recipientCounts,fd.put(l,h),md.put(l,d)}d={},s||Object.assign(d,md.get(l));const p=new eo(e);for(let f=0;f<h.length;++f){const m=h[f],g=m.sourceLayer;if(g instanceof ac)continue;const x=[],y=[],b=[];let v=!1;for(const k of m.inputs){const N=p.getValue(k),I=p.getMask(k);x.push(N),y.push(I),I!=null&&(v=!0),s||(d[k.name]--,d[k.name]===0&&!e.hasKey(k)&&i.indexOf(k.name)===-1&&!N.isDisposed&&k.sourceLayer.stateful!==!0&&b.push(N))}v&&(t=t||{},t.mask=y[0]);const w=st(g.apply(x,t));let C=null;g.supportsMasking&&(C=g.computeMask(x,y));const T=vW(m),S=Array.isArray(T)?T:[T];for(let k=0;k<S.length;++k){p.hasKey(S[k])||p.add(S[k],w[k],Array.isArray(C)?C[0]:C);const N=i.indexOf(S[k].name);N!==-1&&(u[N]=w[k])}s||Ge(b)}return p.disposeMasks(),o?u:u[0]}function xW(n,e){A(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],r={};if(n.length===1){const s=e2(n[0],e);t=s.sorted,r=s.recipientMap}else{const s=new Set;for(const o of n){const{sorted:a,recipientMap:i}=e2(o,e);for(const u of a)s.has(u.name)||(t.push(u),s.add(u.name));for(const u in i)r[u]==null&&(r[u]=new Set),i[u].forEach(c=>r[u].add(c))}}return{sorted:t,recipientCounts:yW(r)}}function yW(n){const e={};for(const t in n)e[t]=n[t].size;return e}function e2(n,e){const t=new Set,r=[],s={};for(const i of e.names())t.add(i);const o=[],a=[];for(o.push(n);o.length>0;){const i=o[o.length-1];if(t.has(i.name)){o.pop();continue}const u=a[a.length-1]===o.length-1;if(i.inputs.length===0||u)o.pop(),r.push(i),t.add(i.name),u&&a.pop();else{a.push(o.length-1);for(const c of i.inputs)s[c.name]==null&&(s[c.name]=new Set),s[c.name].add(i.name),!t.has(c.name)&&o.push(c)}}return{sorted:r,recipientMap:s}}function vW(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let r=0;r<n.sourceLayer.inboundNodes.length;++r)for(const s of n.sourceLayer.inboundNodes[r].outputTensors)if(s.id===n.id){t=r;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Z().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,gW);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Px(n,e){return Q(()=>ln(Re(G(n,n),e,!0)))}class uc extends Ya{getConfig(){return{}}}class t2 extends uc{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Q(()=>{const t=Px(e,this.axis),r=Qn(t,0,this.maxValue);return G(e,Ae(r,le(Lt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}t2.className="MaxNorm",ce(t2);class n2 extends uc{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Q(()=>Ae(e,le(Lt(),Px(e,this.axis))))}getConfig(){return{axis:this.axis}}}n2.className="UnitNorm",ce(n2);class r2 extends uc{apply(e){return Ho(e)}}r2.className="NonNeg",ce(r2);class s2 extends uc{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Q(()=>{const t=Px(e,this.axis),r=le(G(this.rate,Qn(t,this.minValue,this.maxValue)),G(1-this.rate,t));return G(e,Ae(r,le(Lt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}s2.className="MinMaxNorm",ce(s2);const o2={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Bt(n){return bx(n)}function a2(n,e={}){return tc(n,ur.getMap().classNameMap,e,"constraint")}function zt(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in o2?o2[n]:n,config:{}};return a2(t)}else return n instanceof uc?n:a2(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function ea(n){if(n==null)return;const e=[],t=[],r=[];for(const s in n){const o=n[s];if(typeof o!="number"){const a=o;e.push(a.data()),t.push(s),r.push(a)}}if(e.length>0){const s=await Promise.all(e);for(let o=0;o<s.length;++o)n[t[o]]=s[o][0];Ge(r)}}function i2(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var u2;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(u2||(u2={}));const bW=125;class cc{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class wW{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class CW extends cc{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const r=t.size==null?0:t.size;this.seen+=r;for(const s in t){const o=t[s];if(typeof o=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+o*r;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;const i=Q(()=>le(this.totals[s],G(o,r)));this.totals[s]=i,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const r of this.params.metrics)this.totals[r]!=null&&(typeof this.totals[r]=="number"?t[r]=this.totals[r]/this.seen:Q(()=>{const s=G(Ae(1,this.seen),this.totals[r]);t[r]=s,this.totals[r].dispose(),Gr(t[r])}))}}class IW extends cc{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const r in t)this.history[r]==null&&(this.history[r]=[]),this.history[r].push(t[r])}async syncData(){const e=[],t=[],r=[];for(const o in this.history){const a=this.history[o];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){const u=a[i];e.push(u.data()),t.push(o),r.push(i)}}const s=await Promise.all(e);for(let o=0;o<s.length;++o)this.history[t[o]][r[o]].dispose(),this.history[t[o]][r[o]]=s[o][0]}}class kW extends cc{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||XC,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=bW),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Jf(this.yieldEvery)&&(this.maybeWait=PV(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,r){const s=[];this.yield!=null&&(await ea(r),s.push(this.yield(e,t,r))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await ea(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const r=[];this.epochEnd!=null&&(await ea(t),r.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&r.push(this.nextFrameFunc()),await Promise.all(r)}async onBatchBegin(e,t){this.batchBegin!=null&&(await ea(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const r=[];this.batchEnd!=null&&(await ea(t),r.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?r.push(this.nextFrameFunc()):Jf(this.yieldEvery)&&r.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(r)}async onTrainBegin(e){this.trainBegin!=null&&(await ea(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await ea(e),await this.trainEnd(e))}}function c2(n,e){return n==null&&(n={}),n instanceof cc?[n]:Array.isArray(n)&&n[0]instanceof cc?n:st(n).map(r=>new kW(r,e))}class dr{constructor(){}static registerCallbackConstructor(e,t){A(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),dr.checkForDuplicate(t),dr.constructors[e]==null&&(dr.constructors[e]=[]),dr.constructors[e].push(t)}static checkForDuplicate(e){for(const t in dr.constructors)dr.constructors[+t].forEach(s=>{if(s===e)throw new U("Duplicate callback constructor.")})}static clear(){dr.constructors={}}static createCallbacks(e){const t=[];for(const r in dr.constructors){const s=+r;e>=s&&t.push(...dr.constructors[s])}return t.map(r=>new r)}}dr.constructors={};function l2(n,e,t,r,s,o,a,i,u){const c=new IW,l=[new CW,...dr.createCallbacks(e)];n!=null&&l.push(...n),l.push(c);const h=new wW(l);return h.setParams({epochs:t,initialEpoch:r,samples:s,steps:o,batchSize:a,verbose:e,doValidation:i,metrics:u}),{callbackList:h,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ns(n,e={},t=!1){return tc(n,ur.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gd(n,e){return Q(()=>{n.dtype!=="float32"&&(n=ge(n,"float32"));const t=Re(sc(n),e,!0),r=zh(t.shape,Lt()),s=ln(Ks(t,r));return Ae(n,s)})}function xd(n,e){return Q(()=>Ft(sc(De(e,n)),-1))}function Bx(n,e){return Q(()=>Ft(vn(De(e,n)),-1))}function zx(n,e){return Q(()=>{const t=De(n,e),r=Qn(vn(n),Lt(),Number.MAX_VALUE),s=vn(Ae(t,r));return G(100,Ft(s,-1))})}function SW(n,e){return Q(()=>{const t=Qn(e,Lt(),Number.MAX_VALUE),r=Kr(le(1,t)),s=Qn(n,Lt(),Number.MAX_VALUE),o=Kr(le(1,s));return Ft(sc(De(r,o)),-1)})}function NW(n,e){return Q(()=>{const t=Ks(0,De(1,G(n,e)));return Ft(sc(t),-1)})}function TW(n,e){return Q(()=>{const t=Ks(0,De(1,G(n,e)));return Ft(t,-1)})}function EW(n,e){return Q(()=>{const t=Re(G(n,e),-1),r=Sr(G(De(1,n),e),-1);return Ks(0,le(1,De(r,t)))})}function RW(n,e){return Q(()=>{const t=Math.log(2),r=De(e,n),s=De(le(r,qu(G(-2,r))),t);return Ft(s,-1)})}function lc(n,e,t=!1){return Q(()=>{if(t)e=Dg(e);else{const r=Re(e,e.shape.length-1,!0);e=Ae(e,r)}return e=Qn(e,Lt(),1-Lt()),Tt(Re(G(ge(n,"float32"),Kr(e)),e.shape.length-1))})}function yd(n,e,t=!1){return Q(()=>{const r=ge(Gh(YV(n)),"int32");e=Qn(e,Lt(),1-Lt());const s=e.shape,o=K(aC(r,s[s.length-1]),s);return lc(o,e,t)})}function AW(n,e){if(!et(n.shape,e.shape))throw new U(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return Q(()=>{const t=Ho(e),r=Tt(vn(e));return le(De(t,G(e,n)),nC(jr(r)))})}function vd(n,e){return Q(()=>{let t;return t=Qn(e,Lt(),1-Lt()),t=Kr(Ae(t,De(1,t))),Ft(AW(n,t),-1)})}function $W(n,e){return Q(()=>{const t=Qn(n,Lt(),1),r=Qn(e,Lt(),1);return Re(G(n,Kr(Ae(t,r))),-1)})}function DW(n,e){return Q(()=>{const t=Kr(le(Lt(),e));return Ft(De(e,G(n,t)),-1)})}function h2(n,e){return Q(()=>{const t=gd(n,-1),r=gd(e,-1),s=G(t,r);return Tt(Re(s,-1))})}const bd={meanSquaredError:xd,meanAbsoluteError:Bx,meanAbsolutePercentageError:zx,meanSquaredLogarithmicError:SW,squaredHinge:NW,hinge:TW,categoricalHinge:EW,logcosh:RW,categoricalCrossentropy:lc,sparseCategoricalCrossentropy:yd,binaryCrossentropy:vd,kullbackLeiblerDivergence:$W,poisson:DW,cosineProximity:h2};function Vx(n){if(typeof n=="string"){if(n in bd)return bd[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new U(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function d2(n,e){return Q(()=>{const t=G(.5,ir(e)),r=Jr(Jn(e,t),n.dtype);return Ft(qr(n,r),-1)})}function p2(n,e){return Q(()=>Jr(qr(zu(n,-1),zu(e,-1)),"float32"))}function FW(n,e){return Q(()=>ge(Re(bs(qr(n,1),qr(e,1))),"float32"))}function OW(n,e){return Q(()=>ge(Re(bs(qr(n,0),qr(e,1))),"float32"))}function _W(n,e){return Q(()=>{const t=FW(n,e),r=OW(n,e),s=le(t,r);return ge(bn(Jn(s,0),Ae(t,s),0),"float32")})}function MW(n,e){return vd(n,e)}function LW(n,e){return n.rank===e.rank&&(n=Yu(n,[n.rank-1])),e=zu(e,-1),e.dtype!==n.dtype&&(e=ge(e,n.dtype)),ge(qr(n,e),"float32")}const PW=xd,BW=xd,zW=Bx,VW=Bx,WW=zx,UW=zx,f2=lc,GW=h2,m2=yd,wd={binaryAccuracy:d2,categoricalAccuracy:p2,precision:_W,categoricalCrossentropy:f2,sparseCategoricalCrossentropy:m2,mse:PW,MSE:BW,mae:zW,MAE:VW,mape:WW,MAPE:UW,cosine:GW};function HW(n){if(typeof n=="string"&&n in wd)return wd[n];if(typeof n!="string"&&n!=null)return n;throw new U(`Unknown metric ${n}`)}function Cd(n){if(Qr(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(bd))if(bd[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(wd))if(wd[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qW(n){const e={Adagrad:()=>Qa.adagrad(.01),Adadelta:()=>Qa.adadelta(1,.95,Lt()),Adam:()=>Qa.adam(.001,.9,.999,Lt()),Adamax:()=>Qa.adamax(.002,.9,.999,Lt(),0),RMSProp:()=>Qa.rmsprop(.001,.9,0,Lt()),SGD:()=>Qa.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new U(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const g2=1*1024*1024;function x2(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!Wx(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const r=JSON.stringify(n);r.length>g2&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${g2}.`)}}function Wx(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!Wx(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!Wx(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function jW(n,e,t,r=console.log){const s=XW(n),o=["Layer (type)","Input Shape","Output shape","Param #"];s?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(l=>Math.floor(e*l)));let a;if(!s){o.push("Receives inputs"),a=[];for(const l in n.nodesByDepth)a.push(...n.nodesByDepth[l])}r("_".repeat(e)),Id(o,t,r),r("=".repeat(e));const i=n.layers;for(let l=0;l<i.length;++l)s?YW(i[l],t,r):QW(i[l],t,a,r),r((l===i.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const u=KW(n),c=dd(n.nonTrainableWeights);r(`Total params: ${u+c}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${c}`),r("_".repeat(e))}function KW(n){let e;return n.collectedTrainableWeights!=null?e=dd(n.collectedTrainableWeights):e=dd(n.trainableWeights),e}function XW(n){let e=!0;const t=[],r=[];for(const s in n.nodesByDepth)t.push(n.nodesByDepth[s]);for(const s of t){if(s.length>1||s.length===1&&s[0].inboundLayers.length>1){e=!1;break}r.push(...s)}if(e)for(const s of n.layers){let o=!1;for(const a of s.inboundNodes)if(r.indexOf(a)!==-1)if(o){e=!1;break}else o=!0;if(!e)break}return e}function Id(n,e,t=console.log){let r="";for(let s=0;s<n.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=n[s],r=r.slice(0,e[s]),r+=" ".repeat(e[s]-r.length);t(r)}function YW(n,e,t){let r,s;try{s=n.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{s="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const o=n.name,a=n.getClassName(),i=[`${o} (${a})`,s,r,n.countParams().toString()];Id(i,e,t)}function QW(n,e,t,r){let s,o;try{o=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{o="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const a=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];a.push(`${p}[${f}][${m}]`)}const i=n.name,u=n.getClassName(),c=a.length===0?"":a[0],l=[`${i} (${u})`,o,s,n.countParams().toString(),c];Id(l,e,r);for(let h=1;h<a.length;++h)Id(["","","","",a[h]],e,r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function y2(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function Ux(n,e){if(n===null)return null;if(typeof n=="string")return Yo(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],r=n.length;for(let s=0;s<r;++s){const o=n[s];y2(e,s,o)?t.push(o):t.push(Ux(o,e))}return t}else{const t={};for(const r of Object.keys(n)){const s=n[r];if(r==="name"&&typeof s=="string")t[r]=s;else{const o=Yo(r);t[o]=Ux(s,o)}}return t}}function Gx(n,e){if(n==null)return null;if(typeof n=="string")return Ss(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],r=n.length;for(let s=0;s<r;++s){const o=n[s];y2(e,s,o)?t.push(o):t.push(Gx(o,e))}return t}else{const t={};for(const r of Object.keys(n)){const s=n[r],o=Ss(r);(r==="name"||r==="className")&&typeof s=="string"?t[o]=s:t[o]=Gx(s,r)}return t}}/** @license See the LICENSE file. */const v2="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const JW=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class $r extends Ue{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const y=this.getClassName().toLowerCase();this.name=ud(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Qs(this.inputs).length!==this.inputs.length)throw new U(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Qs(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const b=y.sourceLayer,v=y.nodeIndex,w=y.tensorIndex;this.outputLayers.push(b),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(w)}for(const y of this.inputs){const b=y.sourceLayer,v=y.nodeIndex,w=y.tensorIndex;Qr(v===0,"input layer has >1 nodes"),Qr(w===0,"input layer has >1 tensors"),this.inputLayers.push(b),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const b=this.inputLayers[y];if(!(b instanceof ac))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${b.getClassName()}.`);this.inputNames.push(b.name),this.feedInputShapes.push(b.batchInputShape),this.feedInputNames.push(b.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);const t={},r={},s={},o={},a={},i=[],u=(y,b,v,w,C,T)=>{(w==null||C==null||T==null)&&(w=y.sourceLayer,C=y.nodeIndex,T=y.tensorIndex);const S=w.inboundNodes[C];if(v.indexOf(S)!==-1)throw new cr(`The tensor ${y.name} at layer "${w.name}" is part of a cycle.`);if(b.indexOf(S)!==-1)return;this.containerNodes.add($r.nodeKey(w,C)),w.id in a||(a[w.id]=Object.keys(a).length),v.indexOf(S)===-1&&v.push(S);const k=S.inboundLayers.length;for(let N=0;N<k;N++){const I=S.inputTensors[N],E=S.inboundLayers[N],F=S.nodeIndices[N],O=S.tensorIndices[N];u(I,b,v,E,F,O)}for(b.push(S);v.indexOf(S)>=0;)v.splice(v.indexOf(S),1);i.push(S)},c=[],l=[];for(const y of this.outputs)u(y,c,l);const h=i.slice().reverse();for(const y of h){r[y.id]=y,y.id in t||(t[y.id]=0);let b=t[y.id];const v=s[y.outboundLayer.id]==null?0:s[y.outboundLayer.id];b=Math.max(b,v),s[y.outboundLayer.id]=b,o[y.outboundLayer.id]=y.outboundLayer,t[y.id]=b;for(let w=0;w<y.inboundLayers.length;w++){const C=y.inboundLayers[w],T=y.nodeIndices[w],S=C.inboundNodes[T],k=t[S.id]==null?0:t[S.id];t[S.id]=Math.max(b+1,k),r[S.id]=S}}const d={};for(const y in t){const b=t[y];b in d||(d[b]=[]),d[b].push(r[y])}const p={};for(const y in s){const b=s[y];b in p||(p[b]=[]),p[b].push(o[y])}let f=Object.keys(p).map(y=>parseInt(y,10)).sort(ad);this.layers=[];for(const y of f){const b=p[y];b.sort((v,w)=>{const C=a[v.id],T=a[w.id];return C<T?-1:C>T?1:0});for(const v of b)v instanceof $r&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=p,f=Object.keys(d).map(y=>parseInt(y,10)).sort(ad);const m=this.inputs.slice(),g=[];for(const y of f)for(const b of d[y]){const v=b.outboundLayer;if(v!=null){for(const w of b.inputTensors)if(m.indexOf(w)===-1)throw new cr(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${v.name}". The following previous layers were accessed without issue: ${g}`);for(const w of b.outputTensors)m.push(w);g.push(v.name)}}this.nodesByDepth=d;const x=this.layers.map(y=>y.name);for(const y of x){const b=x.filter(v=>v===y).length;if(b!==1)throw new cr(`The name "${y}" is used ${b} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new pd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(r=>r.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new U("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const r of this.layers)t.push(...r.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const r={};let s=0;const o=JW(e);o&&this.parseWeights(e);for(const i of this.layers)for(const[u,c]of i.weights.entries()){const l=o?`${c.name.split("/").slice(0,-1).join("/")+"/"}${u}`:c.originalName;if(r[l]!=null)throw new U(`Duplicate weight name: ${l}`);r[l]=c,s++}const a=[];for(const i in e){let u=i;if(r[i]==null){const c=i.split("/");u=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(r[u]!=null)a.push([r[u],e[i]]);else if(t)throw new U(`Provided weight data has no target variable: ${i}`);delete r[u]}if(t){const i=[];for(const u in r)i.push(u);if(i.length>0)throw new U(`${i.length} of ${s} weights are not set: ${i}`)}Lx(a)}parseWeights(e){for(const t in Object.keys(e)){const r=t.split("/"),s=["vars","layer_checkpoint_dependencies"],o=r.map(a=>a.startsWith("_")?a.slice(1):a).filter(a=>!s.includes(a)).join("/");o!==t&&(e[o]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${v2}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const r=Gx(this.updatedConfig());return t?JSON.stringify(r):r}call(e,t){return Q(()=>{e=st(e);const r=new eo;for(let s=0;s<this.inputs.length;++s)r.add(this.inputs[s],e[s]);return ic(this.outputs,r,t)})}computeMask(e,t){return Q(()=>{e=st(e);let r;return t==null?r=Xo(null,e.length):r=st(t),this.runInternalGraph(e,r)[1]})}computeOutputShape(e){const t=hd(e);if(t.length!==this.inputLayers.length)throw new U(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const r={};for(let i=0;i<t.length;i++){const u=this.inputLayers[i],c=t[i],l=u.name+"_0_0";r[l]=c}const s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(ad);if(s.length>1)for(const i of s){const u=this.nodesByDepth[i];for(const c of u){const l=c.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(l.id)!==-1)continue;const h=[];for(let m=0;m<c.inboundLayers.length;m++){const g=c.inboundLayers[m],x=c.nodeIndices[m],y=c.tensorIndices[m],b=`${g.name}_${x}_${y}`,v=r[b];h.push(v)}const d=l.computeOutputShape($n(h)),p=hd(d),f=l.inboundNodes.indexOf(c);for(let m=0;m<p.length;m++){const g=`${l.name}_${f}_${m}`;r[g]=p[m]}}}const o=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const u=this.outputLayers[i],c=this.outputLayersNodeIndices[i],l=this.outputLayersTensorIndices[i],h=`${u.name}_${c}_${l}`;a.push(h)}for(let i=0;i<a.length;i++){const u=a[i];Qr(u in r),o.push(r[u])}return $n(o)}runInternalGraph(e,t){t==null&&(t=Xo(null,e.length));const r={};for(let u=0;u<this.inputs.length;++u){const c=this.inputs[u],l=e[u],h=t[u];r[c.id]=[l,h]}const s=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(ad);for(const u of s){const c=this.nodesByDepth[u];for(const l of c){const h=l.outboundLayer,d=l.inputTensors,p=l.outputTensors,f=new Array;for(const m of d)m.id in r&&f.push(r[m.id]);if(f.length===d.length){let m={},g,x,y,b;if(l.callArgs!=null&&(m=l.callArgs),f.length===1){const[v,w]=f[0];m.mask==null&&(m.mask=w),y=st(h.call(v,m)),b=st(h.computeMask(v,w)),g=[v],x=[w]}else g=f.map(v=>v[0]),x=f.map(v=>v[1]),m.mask==null&&(m.mask=x),y=st(h.call(g,m)),b=st(h.computeMask(g,x));if(h.activityRegularizer)throw new Be("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<p.length;++v){const w=p[v],C=y[v],T=b[v];r[w.id]=[C,T]}}}}const o=[],a=[],i=[];for(const u of this.outputs){Qr(u.id in r,`Could not compute output ${u.name} : ${u.id}`);const[c,l]=r[u.id];i.push(c.shape),o.push(c),a.push(l)}return[o,a,i]}buildNodeConversionMap(e){const t={};let r;for(const s of this.layers){r=s instanceof $r?1:0;for(let o=0;o<s.inboundNodes.length;o++){const a=$r.nodeKey(s,o);this.containerNodes.has(a)&&(t[a]=r,r+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new U("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const r of this.layers)if(r.name===e)return r;throw new U(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new U(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Q(()=>{const e=[];for(const t of this.layers)for(let r=0;r<t.inboundNodes.length;++r){const s=$r.nodeKey(t,r);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),r=[];for(const a of this.layers){const i=a.getClassName(),u=a.getConfig(),c=[];for(let h=0;h<a.inboundNodes.length;h++){const d=a.inboundNodes[h],p=$r.nodeKey(a,h);let f={};if(this.containerNodes.has(p)){if(d.callArgs)try{JSON.stringify(d.callArgs),f=d.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(d.inboundLayers.length>0){const m=[];for(let g=0;g<d.inboundLayers.length;g++){const x=d.inboundLayers[g],y=d.nodeIndices[g],b=d.tensorIndices[g],v=$r.nodeKey(x,y);let w=t[v];w==null&&(w=0),m.push([x.name,w,b,f])}c.push(m)}}}const l={};l.name=a.name,l.className=i,l.config=u,l.inboundNodes=c,r.push(l)}e.layers=r;const s=[];for(let a=0;a<this.inputLayers.length;a++){const i=this.inputLayers[a],u=this.inputLayersNodeIndices[a],c=$r.nodeKey(i,u);if(!this.containerNodes.has(c))continue;let l=t[c];l==null&&(l=0);const h=this.inputLayersTensorIndices[a];s.push([i.name,l,h])}e.inputLayers=s;const o=[];for(let a=0;a<this.outputLayers.length;a++){const i=this.outputLayers[a],u=this.outputLayersNodeIndices[a],c=$r.nodeKey(i,u);if(!this.containerNodes.has(c))continue;let l=t[c];l==null&&(l=0);const h=this.outputLayersTensorIndices[a];o.push([i.name,l,h])}return e.outputLayers=o,e}static fromConfig(e,t,r={},s=!1){const o={},a={};function i(g,x){g.name in a?a[g.name].push(x):a[g.name]=[x]}function u(g,x){const y=[];let b;for(const v of x){const w=v[0],C=v[1],T=v[2];if(b=v[3]==null?{}:v[3],!(w in o)){i(g,x);return}const S=o[w];if(S.inboundNodes.length<=C){i(g,x);return}const k=S.inboundNodes[C];y.push(k.outputTensors[T])}y.length>0&&g.apply($n(y),b)}function c(g){const x=g.name,y=Ns(g,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(s),o[x]=y,g.inboundNodes.forEach(v=>{if(!(v instanceof Array))throw new U(`Corrupted configuration, expected array for nodeData: ${v}`);i(y,v)})}const l=t.name,h=t.layers;for(const g of h)c(g);for(;!LV(a);)for(const g of h){const x=o[g.name];if(x.name in a){const y=a[x.name];delete a[x.name];for(const b of y)u(x,b)}}const d=[],p=[],f=t.inputLayers;for(const g of f){const x=g[0],y=g[1],b=g[2];Qr(x in o);const w=o[x].inboundNodes[y].outputTensors;d.push(w[b])}const m=t.outputLayers;for(const g of m){const x=g[0],y=g[1],b=g[2];Qr(x in o);const w=o[x].inboundNodes[y].outputTensors;p.push(w[b])}return new e({inputs:d,outputs:p,name:l})}get stateful(){if(this._stateful)throw new U("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Q(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ZW(n,e,t){const r=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>null);if(r===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==r)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const s=[];return e.forEach(o=>{o in n?s.push(n[o]):s.push(null)}),s}else throw new Error(`The model has multiple (${r}) outputs, so ${t} must be either an array with ${r} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function b2(n,e){return ZW(n,e,"classWeight")}async function w2(n,e,t,r){if(t!=null){const s=Q(()=>{if(n.shape.length===1)return Bo(n);if(n.shape.length===2){if(n.shape[1]>1)return zu(n,1);if(n.shape[1]===1)return K(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await s.data());Ge(s);const a=[];return o.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),zn(a,"float32")}else return null}function eU(n,e){return G(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const tU=32;function C2(n,e){let t,r;const s=e;t=s.xs,r=s.ys,A(t!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const o=I2("input",n.inputNames,t),a=I2("output",n.outputNames,r),i=o[0].shape[0];A(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),A(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let u=0;u<o.length;u++)A(o[u].shape[0]===i,()=>`Batch size mismatch: input ${n.inputNames[u]} has ${o[u].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);for(let u=0;u<a.length;u++)A(a[u].shape[0]===i,()=>`Batch size mismatch: output ${n.outputNames[u]} has ${a[u].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);return{xs:o,ys:a}}function I2(n,e,t){if(t instanceof _t)return[t];if(Array.isArray(t))return A(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const r=[];for(const s of e){if(t[s]==null)throw new U(`The feature data generated by the dataset lacks the required ${n} key '${s}'.`);r.push(t[s])}return r}}function nU(n){if(n.length===3)throw new Be("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function rU(n,e,t){const r=t.batchesPerEpoch!=null;if(A(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),A(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),A(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),A(!r||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),A(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const s=t.validationData!=null;let o,a;if(s)if(k2(t.validationData))A(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const g=nU(t.validationData);o=g.xs,a=g.ys}const i=n.makeTrainFunction(),u=n.getDedupedMetricsNames();let c;s?c=u.slice().concat(u.map(g=>"val_"+g)):c=u.slice();const l=c2(t.callbacks,t.yieldEvery),h=t.verbose==null?1:t.verbose,{callbackList:d,history:p}=l2(l,h,t.epochs,null,null,sU(e,t),null,s,c);d.setModel(n),n.history=p,await d.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,m=await e.iterator();for(;f<t.epochs;){const g={};await d.onEpochBegin(f);let x=0,y=0;for(r||(m=await e.iterator());!r||x<t.batchesPerEpoch;){const b=await m.next();if(r&&b.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(b.value!=null){const{xs:v,ys:w}=C2(n,b.value),C={};C.batch=y,C.size=v[0].shape[0],await d.onBatchBegin(y,C);const T=[];if(t.classWeight!=null){const N=b2(t.classWeight,n.outputNames);for(let I=0;I<N.length;++I)T.push(await w2(w[I],null,N[I]))}const S=v.concat(w).concat(T),k=i(S);Ge(S);for(let N=0;N<u.length;++N){const I=u[N],E=k[N];C[I]=E,Gr(E)}await d.onBatchEnd(y,C),i2(C),y++,x++}if(r?x>=t.batchesPerEpoch:b.done){if(s){let v;k2(t.validationData)?v=st(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):v=st(n.evaluate(o,a,{batchSize:t.validationBatchSize==null?tU:t.validationBatchSize,verbose:0}));for(let w=0;w<n.metricsNames.length;++w)g[`val_${n.metricsNames[w]}`]=v[w]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function sU(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function k2(n){return typeof n.iterator=="function"}function oU(n){return typeof n.next=="function"}async function aU(n,e,t){t=t||{};const r=t.batches!=null,s=n.testFunction;let o=[];if(t.verbose>0)throw new Be("Verbose mode is not implemented yet.");A(!r||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const a=oU(e)?e:await e.iterator();let i=0,u=0;for(;!r||u<t.batches;){const c=await a.next();if(o=Q(()=>{if(c.value){const{xs:l,ys:h}=C2(n,c.value),d=l.concat(h),p=Q(()=>s(d));if(Ge(d),u===0)for(let m=0;m<p.length;++m)o.push(nt(0));const f=d[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],x=o[m];o[m]=Q(()=>le(o[m],G(f,g))),u>0&&Ge(x)}Ge(p),i+=f,++u}return o}),c.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<o.length;++c){const l=o[c];o[c]=Ae(o[c],i),Ge(l)}return $n(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Hx(n){A(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function hc(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(r=>Zo(r,e,t-e)):Zo(n,e,t-e)}function qx(n,e){return Q(()=>n==null?null:Array.isArray(n)?n.map(t=>qx(t,e)):VI(n,e.dtype==="int32"?e:ge(e,"int32")))}function jx(n,e){const t=[];let r=0,s=null;for(;r<n;)s=r+e,s>=n&&(s=n),t.push([r,s]),r=s;return t}function S2(n){const e=[];n instanceof _t&&(n=[n]);for(let t=0;t<n.length;++t){const r=n[t];if(r.rank===1)e.push(rc(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function Dr(n,e){if(n==null)return;const t=[];if(e instanceof _t)t.push(e.id);else if(Array.isArray(e))e.forEach(s=>t.push(s.id));else if(e!=null)for(const s in e){const o=e[s];t.push(o.id)}const r=[];if(n instanceof _t)t.indexOf(n.id)===-1&&r.push(n);else if(Array.isArray(n))n.forEach(s=>{t.indexOf(s.id)===-1&&r.push(s)});else if(n!=null)for(const s in n){const o=n[s];t.indexOf(o.id)===-1&&r.push(o)}r.forEach(s=>{s.isDisposed||s.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iU(n){return n instanceof _t}function Kx(n){return Array.isArray(n)}function N2(n){return!iU(n)&&!Kx(n)}function T2(n,e,t,r=!0,s=""){if(e==null||e.length===0){if(n!=null){let a=!1;if(Kx(n)&&n.length>0)a=!0;else if(N2(n)){for(const i in n)if(n.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new U(`Error when checking model ${s} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(a=>null);let o;if(N2(n)){n=n,o=[];for(const a of e){if(n[a]==null)throw new U(`No data provided for "${a}". Need data for each key in: ${e}`);o.push(n[a])}}else if(Kx(n)){if(n=n,n.length!==e.length)throw new U(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,e.length>1)throw new U(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=S2(o),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const i=o[a];if(i.shape.length!==t[a].length)throw new U(`Error when checking ${s}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let u=0;u<t[a].length;++u){if(u===0&&!r)continue;const c=i.shape[u],l=t[a][u];if(l!=null&&l>=0&&c!==l)throw new U(`${s} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return o}function uU(n,e,t){const r=Qs(n.map(o=>o.shape[0]));r.sort();const s=Qs(e.map(o=>o.shape[0]));if(s.sort(),r.length>1)throw new U(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(s.length>1)throw new U(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(o=>o.shape))}`);if(r.length>0&&s.length>0&&!et(r,s))throw new U(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}function cU(n,e,t){const r=[xd,vd,lc];for(let s=0;s<n.length;++s){const o=n[s],a=e[s],i=t[s];if(a!=null){if(a===lc&&o.shape[o.shape.length-1]===1)throw new U(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(a)!==-1){const u=o.shape.slice(1),c=i.slice(1);for(let l=0;l<u.length;++l){const h=u[l],d=c[l];if(d!=null&&h!==d)throw new U(`A target Tensor with shape ${o.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function E2(n,e,t,r=!0,s=""){let o;if(Array.isArray(n)){if(n.length!==e.length)throw new U(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(e.length>1)throw new U(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const i=o[a];if(i.shape.length!==t[a].length)throw new U(`Error when checking ${s}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let u=0;u<t[a].length;++u){if(u===0&&!r)continue;const c=i.shape[u],l=t[a][u];if(l!=null&&l!==c)throw new U(`Error when checking ${s}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function lU(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(r=>t);{const r=[];for(const s of e){let o=t.hasOwnProperty(s)?t[s]:[];Array.isArray(o)||(o=[o]),r.push(o)}return r}}const hU="layers-model";class ei extends $r{constructor(e){super(e),this.isTraining=!1}summary(e,t,r=console.log){if(!this.built)throw new U("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");jW(this,e,t,r)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=qW(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ys))throw new U("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new U(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Vx(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new U(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>Vx(i))}else{const a=Vx(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const i=this.internalOutputShapes[a],u=this.outputNames[a];this.feedOutputNames.push(u),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}const r=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Jo("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(r.indexOf(a)!==-1)continue;const i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const s=lU(e.metrics,this.outputNames),o=(a,i,u)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([u,a])};Jo("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(r.indexOf(a)!==-1)continue;const i=s[a];(c=>{const l="";let h,d,p;for(const f of c){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===vd?["accuracy","acc"].indexOf(f)!==-1?d=d2:["crossentropy","ce"].indexOf(f)!==-1&&(d=MW):this.lossFunctions[a]===yd?["accuracy","acc"].indexOf(f)!==-1?d=LW:["crossentropy","ce"].indexOf(f)!==-1&&(d=m2):["accuracy","acc"].indexOf(f)!==-1?d=p2:["crossentropy","ce"].indexOf(f)!==-1&&(d=f2);let x;["accuracy","acc"].indexOf(f)!==-1?x="acc":["crossentropy","ce"].indexOf(f)!==-1&&(x="ce"),p=d,h=l+x}else p=HW(f),h=l+Cd(f);let m;Jo(h,()=>{m=p}),o(a,h,m)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,r={}){const s=r.batchSize==null?32:r.batchSize;Hx(s);const a=this.standardizeUserDataXY(e,t,!0,s);try{const i=a[0].concat(a[1]);this.makeTestFunction();const u=this.testFunction,c=this.testLoop(u,i,s,r.verbose,r.steps);return $n(c)}finally{Dr(a[0],e),Dr(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),aU(this,e,t)}checkNumSamples(e,t,r,s="steps"){let o;if(r!=null){if(o=null,t!=null)throw new U(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?o=e[0].shape[0]:o=e.shape[0];else throw new U(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return o}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new U("`outputs` is an empty Array, which is not allowed.");const r=Array.isArray(t),s=r?t:[t],o=this.retrieveSymbolicTensors(s),a=new eo;if(e instanceof _t&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new U(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)a.add(this.inputs[u],e[u])}else for(const u of this.inputs){const c=e[u.name];if(c==null)throw new U(`No value is provided for the model's input ${u.name}`);a.add(u,c)}const i=ic(o,a);return r?i:i[0]}retrieveSymbolicTensors(e){const t=Xo(null,e.length);let r=e.length;for(const s of this.layers){const o=Array.isArray(s.output)?s.output:[s.output],a=o.map(i=>i.name);for(let i=0;i<e.length;++i){const u=a.indexOf(e[i]);if(u!==-1&&(t[i]=o[u],r--),r===0)break}if(r===0)break}if(r>0){const s=[];throw t.forEach((o,a)=>{o==null&&s.push(e[a])}),new U(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,r=!1){return Q(()=>{const s=this.checkNumSamples(e);if(r)throw new Be("Verbose predictLoop() is not implemented yet.");const o=jx(s,t),a=this.outputs.map(i=>[]);for(let i=0;i<o.length;++i)Q(()=>{const c=o[i][0],l=o[i][1],h=hc(e,c,l),d=[];if(Array.isArray(h))for(let f=0;f<h.length;++f)d.push({key:this.inputs[f],value:h[f]});else d.push({key:this.inputs[0],value:h});const p=new eo(d);return ic(this.outputs,p)}).forEach((c,l)=>a[l].push(c));return $n(a.map(i=>Rn(i,0)))})}predict(e,t={}){const r=S2(e);E2(r,this.inputNames,this.feedInputShapes,!1);try{const s=t.batchSize==null?32:t.batchSize;return Hx(s),this.predictLoop(r,s)}finally{Dr(r,e)}}predictOnBatch(e){E2(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,r=!0,s){if(this.optimizer_==null)throw new cr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let a=0;a<this.feedOutputShapes.length;++a){const i=this.feedOutputShapes[a];this.feedLossFns[a]===yd?o.push(i.slice(0,i.length-1).concat([1])):o.push(i)}if(e=T2(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=T2(t,this.feedOutputNames,o,!1,"target"),uU(e,t),cU(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new U(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,r,s,o=!0,a){const[i,u]=this.standardizeUserDataXY(e,t,o,a);if(r!=null)throw new Error("sample weight is not supported yet.");let c=null;if(s!=null){const l=b2(s,this.outputNames);c=[];for(let h=0;h<l.length;++h)c.push(await w2(u[h],null,l[h]))}return[i,u,c]}testLoop(e,t,r,s=0,o){return Q(()=>{const a=this.checkNumSamples(t,r,o,"steps"),i=[];if(s>0)throw new Be("Verbose mode is not implemented yet.");if(o!=null)throw new Be("steps mode in testLoop() is not implemented yet");{const u=jx(a,r),c=zn(Er(0,a));for(let l=0;l<u.length;++l){const h=u[l][0],d=u[l][1],p=Zo(c,h,d-h),f=qx(t,p),m=e(f);if(l===0)for(let g=0;g<m.length;++g)i.push(nt(0));for(let g=0;g<m.length;++g){const x=m[g];i[g]=le(i[g],G(d-h,x))}}for(let l=0;l<i.length;++l)i[l]=Ae(i[l],a)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let r=0;r<e.length;++r){const s=e[r];let o=s;if($I(e,s)>1){const a=$I(e.slice(0,r),s);o+=`_${a}`}t.push(o)}return t}makeTrainFunction(){return e=>{const t=[],r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{const h=[];for(let m=0;m<this.inputs.length;++m)h.push({key:this.inputs[m],value:r[m]});const d=new eo(h),p=ic(this.outputs,d,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let x=g(s[m],p[m]);o[m]!=null&&(x=eU(x,o[m]));const y=Ft(x);t.push(y),m===0?f=x:f=le(f,x)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=t[m];else{const x=this.metricsTensors[m][0],y=this.metricsTensors[m][1];g=Ft(x(s[y],p[y]))}Gr(g),a.push(g)}return f=Ft(f),this.calculateLosses().forEach(m=>{f=le(f,m)}),f},u=this.collectedTrainableWeights.map(h=>h.read());return[this.optimizer_.minimize(i,!0,u)].concat(a)}}makeTestFunction(){this.testFunction=e=>Q(()=>{const t=[];let r;const s=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let c=0;c<this.inputs.length;++c)a.push({key:this.inputs[c],value:s[c]});const i=new eo(a),u=ic(this.outputs,i);for(let c=0;c<this.lossFunctions.length;++c){const l=this.lossFunctions[c],h=Ft(l(o[c],u[c]));c===0?r=h:r=le(r,h),t.push(r)}for(let c=0;c<this.metricsTensors.length;++c){const l=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=Ft(l(o[h],u[h]));t.push(d)}return t})}async fit(e,t,r={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let s,o,a,i,u,c,l,h,d;try{const p=r.batchSize==null?32:r.batchSize;Hx(p);const m=await this.standardizeUserData(e,t,r.sampleWeight,r.classWeight,!1,p);s=m[0],o=m[1],d=m[2];let g=!1,x;if(r.validationData!=null&&r.validationData.length>0){if(g=!0,r.validationData.length===2)u=r.validationData[0],c=r.validationData[1];else throw r.validationData.length===3?new Be("validationData including sample weights is not supported yet."):new U(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);const N=await this.standardizeUserData(u,c,null,null,!0,p);l=N[0],h=N[1],x=l.concat(h)}else if(r.validationSplit!=null&&r.validationSplit>0&&r.validationSplit<1){g=!0;const k=Math.floor(s[0].shape[0]*(1-r.validationSplit)),N=s[0].shape[0];l=hc(s,k,N),a=s,s=hc(s,0,k),h=hc(o,k,N),i=o,o=hc(o,0,k),x=l.concat(h)}else r.validationSteps!=null&&(g=!0);const y=s.concat(o).concat(d);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let w,C;g?(this.makeTestFunction(),w=this.testFunction,C=v.slice().concat(v.map(k=>"val_"+k))):(w=null,x=[],C=v.slice());const T=c2(r.callbacks,r.yieldEvery);return await this.fitLoop(b,y,v,p,r.epochs,r.verbose,T,w,x,r.shuffle,C,r.initialEpoch,null,null)}finally{this.isTraining=!1,Dr(s,e),Dr(o,t),Dr(a,e),Dr(i,t),Dr(l,u),Dr(h,c),d!=null&&Ge(d)}}async fitLoop(e,t,r,s,o,a,i,u,c,l,h,d,p,f){s==null&&(s=32),o==null&&(o=1),l==null&&(l=!0),d==null&&(d=0);let m=!1;if(u!=null&&c!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new U("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,s,p,"steps_per_epoch");let x;g!=null&&(x=Er(0,g)),a==null&&(a=1);const{callbackList:y,history:b}=l2(i,a,o,d,g,p,s,m,h);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let v=d;v<o;++v){await y.onEpochBegin(v);const w={};if(p!=null)throw new Be("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new Be("batch shuffling is not implemneted yet");l&&YO(x);const C=zn(x),T=jx(g,s);for(let S=0;S<T.length;++S){const k={};if(await y.onBatchBegin(S,k),Q(()=>{const N=T[S][0],I=T[S][1],E=Zo(C,N,I-N);k.batch=S,k.size=I-N;const F=qx(t,E),O=e(F);for(let D=0;D<r.length;++D){const M=r[D],P=O[D];k[M]=P,Gr(P)}if(S===T.length-1&&m){const D=this.testLoop(u,c,s);for(let M=0;M<r.length;++M){const P=r[M],L=D[M];Gr(L),w["val_"+P]=L}}}),await y.onBatchEnd(S,k),i2(k),this.stopTraining_)break}C.dispose()}if(await y.onEpochEnd(v,w),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return rU(this,e,t)}async trainOnBatch(e,t){const r=await this.standardizeUserData(e,t),s=r[0],o=r[1],i=this.makeTrainFunction()(s.concat(o)),u=[];for(const c of i){const l=await c.data();u.push(l[0])}return Ge(i),Dr(r[0],e),Dr(r[1],t),$n(u)}getNamedWeights(e){const t=[],r=e!=null&&e.trainableOnly,s=r?this.trainableWeights:this.weights,o=this.getWeights(r);for(let a=0;a<s.length;++a)r&&!s[a].trainable||t.push({name:s[a].originalName,tensor:o[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=$w().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-$w().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Ss(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Ss(t))}else{const t=Object.keys(this.loss);e={};const r=this.loss;for(const s of t)if(typeof r[s]=="string")e[s]=Ss(r[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Ss(Cd(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Ss(Cd(e)));{const e={};for(const t in this.metrics)e[t]=Ss(Cd(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ux(e.optimizer_config),r=Ns(t);let s;if(typeof e.loss=="string")s=Yo(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>Yo(a));else if(e.loss!=null){s={};for(const a in e.loss)s[a]=Yo(e.loss[a])}let o;if(Array.isArray(e.metrics))o=e.metrics.map(a=>Yo(a));else if(e.metrics!=null){o={};for(const a in e.metrics)o[a]=Yo(e.metrics[a])}this.compile({loss:s,metrics:o,optimizer:r})}async save(e,t){if(typeof e=="string"){const c=j_(e);if(c.length===0)throw new U(`Cannot find any save handlers for URL '${e}'`);if(c.length>1)throw new U(`Found more than one (${c.length}) save handlers for URL '${e}'`);e=c[0]}if(e.save==null)throw new U("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Ow(this.getNamedWeights(t)),i={modelTopology:this.toJSON(null,!1),format:hU,generatedBy:`TensorFlow.js tfjs-layers v${v2}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:l,specs:h}=await Ow(await this.optimizer.getWeights(),c);r.specs.push(...h),r.data=q_([r.data,l])}return this.userDefinedMetadata!=null&&(x2(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=r.data,i.weightSpecs=r.specs,e.save(i)}setUserDefinedMetadata(e){x2(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}ei.className="Model",ce(ei);class R2 extends ei{}R2.className="Functional",ce(R2);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class dc extends ei{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:ud("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(r=>r<0))throw new U(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof dc||e instanceof ei;let r;if(t){if(r=e,r.outputs.length!==1)throw new U("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(r.inputs.length!==1)throw new U("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new U("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const s=fW({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=r.outputs,this.inputs=r.inputs;else{if(e.inboundNodes.length!==1)throw new U(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new U("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ZI(this.outputs[0])}this.inboundNodes=[],new pd({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Xo(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{const s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Ze(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ei({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,r=console.log){this.built||this.build(),super.summary(e,t,r)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,r={}){if(!this.built)throw new cr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,r)}async evaluateDataset(e,t){if(!this.built)throw new cr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,r={}){if(!this.built)throw new cr("The model needs to be compiled before being used.");return this.model.fit(e,t,r)}async fitDataset(e,t){if(!this.built)throw new cr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,r={},s=!1){let o,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new U("Legacy serialization format not supported yet.");o=t}else A(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof dc))throw new Be(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const u of o){const l=Ns(u,void 0,s);s&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new U("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new U("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const r={};r.className=t.getClassName(),r.config=t.getConfig(),e.push(r)}return{name:this.name,layers:e}}}dc.className="Sequential",ce(dc);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let hn=class extends Ya{getConfig(){return{}}};class A2 extends hn{apply(e,t=1){return JV(e,t)}}A2.className="elu",ce(A2);class $2 extends hn{apply(e){return vC(e)}}$2.className="selu",ce($2);class D2 extends hn{apply(e){return Ho(e)}}D2.className="relu",ce(D2);class F2 extends hn{apply(e){return Q(()=>ju(6,Ho(e)))}}F2.className="relu6",ce(F2);class O2 extends hn{apply(e){return e}}O2.className="linear",ce(O2);class _2 extends hn{apply(e){return Ha(e)}}_2.className="sigmoid",ce(_2);class M2 extends hn{apply(e){return eW(e)}}M2.className="hardSigmoid",ce(M2);class L2 extends hn{apply(e){return qu(e)}}L2.className="softplus",ce(L2);class P2 extends hn{apply(e){return ZV(e)}}P2.className="softsign",ce(P2);class B2 extends hn{apply(e){return Ph(e)}}B2.className="tanh",ce(B2);let Xx=class extends hn{apply(e,t=-1){return Dg(e,t)}};Xx.className="softmax",ce(Xx);class z2 extends hn{apply(e,t=-1){return rC(e,t)}}z2.className="logSoftmax",ce(z2);class V2 extends hn{apply(e){return Q(()=>Q(()=>{const t=Math.sqrt(2),r=G(.5,le(1,Jw(Ae(e,t))));return G(e,r)}))}}V2.className="gelu",ce(V2);class W2 extends hn{apply(e){return Q(()=>G(.5,G(e,le(1,Ph(G(ln(Ae(2,Math.PI)),le(e,G(.044715,Uo(e,3)))))))))}}W2.className="gelu_new",ce(W2);class U2 extends hn{apply(e){return Q(()=>G(e,Ph(qu(e))))}}U2.className="mish",ce(U2);class G2 extends hn{apply(e,t=1){return Q(()=>G(Ha(G(e,t)),e))}}G2.className="swish",ce(G2);function to(n){return n.getClassName()}function Yx(n,e={}){return tc(n,ur.getMap().classNameMap,e,"activation")}function no(n){if(n==null){const e={};return e.className="linear",e.config={},Yx(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},Yx(e)}else return n instanceof hn?n:Yx(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dU(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class H2 extends Ya{}class q2 extends H2{constructor(e){super(),dU(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return Q(()=>{let t=qt([1]);return this.hasL1&&(t=le(t,Re(G(this.l1,vn(e))))),this.hasL2&&(t=le(t,Re(G(this.l2,sc(e))))),K(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}q2.className="L1L2",ce(q2);const j2={l1l2:"L1L2"};function it(n){return bx(n)}function K2(n,e={}){return tc(n,ur.getMap().classNameMap,e,"regularizer")}function ft(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in j2?j2[n]:n,config:{}};return K2(t)}else return n instanceof H2?n:K2(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class X2 extends Ue{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Oe(e);let r=Ho(e);return this.maxValue!=null&&(r=Qn(r,0,this.maxValue)),r}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}X2.className="ReLU",ce(X2);class Y2 extends Ue{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const r=Oe(e);return wg(r,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Y2.className="LeakyReLU",ce(Y2);class Q2 extends Ue{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=pt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ft(e.alphaRegularizer),this.alphaConstraint=zt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new U(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Ze(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const r={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)r[s]=e[s];this.inputSpec=[new Pt({ndim:e.length,axes:r})],this.built=!0}call(e,t){return e=Oe(e),Tg(e,this.alpha.read())}getConfig(){const e={alphaInitializer:xt(this.alphaInitializer),alphaRegularizer:it(this.alphaRegularizer),alphaConstraint:Bt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Q2.className="PReLU",ce(Q2);let J2=class extends Ue{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Be(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const r=Oe(e);return Vh(r)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};J2.className="ELU",ce(J2);class Z2 extends Ue{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const r=Oe(e);return G(r,ge(Jn(r,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Z2.className="ThresholdedReLU",ce(Z2);class ek extends Ue{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Xx().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return Q(()=>{let r=Oe(e);const s=t.mask;if(s!=null){const o=G(De(Xs(r.shape),ge(s,r.dtype)),nt(-1e9));r=le(r,o)}return this.axis instanceof Array?this.axis.length>1?jr(De(r,sC(r,this.axis,!0))):this.softmax(r,this.axis[0]):this.softmax(r,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}ek.className="Softmax",ce(ek);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ti(n,e,t){if(typeof n=="number")return Xo(n,e);if(n.length!==e)throw new U(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let r=0;r<e;++r){const s=n[r];if(!KV(s))throw new U(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${s}`)}return n}function Fr(n,e,t,r,s=1){if(n==null)return n;const o=e+(e-1)*(s-1);let a;return t==="same"?a=n:a=n-o+1,Math.floor((a+r-1)/r)}function ts(n,e,t,r){if(n==null)return null;if(r==="valid")n=n*e+Zs([t-e,0]);else if(r==="same")n=n*e;else throw new U(`Unsupport padding mode: ${r}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qx(n,e){return Q(()=>(Et(e),e==="channelsFirst"?Ye(n,[0,2,3,1]):n))}function tk(n,e){return Q(()=>(Et(e),e==="channelsFirst"?Ye(n,[0,2,3,4,1]):n))}function pU(n,e,t,r=1,s="valid",o,a=1){return Q(()=>{if(o==null&&(o=Rr()),Et(o),n.shape.length!==3)throw new U(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new U(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new U(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(o==="channelsFirst"&&(n=Ye(n,[0,2,1])),s==="causal")throw new Be("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=qw(n,e,r,s==="same"?"same":"valid","NWC",a);return t!=null&&(i=Ar(i,t)),i})}function nk(n,e,t,r=[1,1],s="valid",o,a,i=null){return Q(()=>{if(o==null&&(o=Rr()),Et(o),n.rank!==3&&n.rank!==4)throw new U(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new U(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let u=Qx(n,o);if(s==="causal")throw new Be("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=IB({x:u,filter:e,strides:r,pad:s==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),o==="channelsFirst"&&(u=Ye(u,[0,3,1,2])),u})}function fU(n,e,t,r=[1,1,1],s="valid",o,a){return Q(()=>{if(o==null&&(o=Rr()),Et(o),n.rank!==4&&n.rank!==5)throw new U(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new U(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let i=tk(n,o);if(s==="causal")throw new Be("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=C3(i,e,r,s==="same"?"same":"valid","NDHWC",a),t!=null&&(i=Ar(i,t)),o==="channelsFirst"&&(i=Ye(i,[0,4,1,2,3])),i})}class kd extends Ue{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",kd.verifyArgs(t),this.rank=e,jt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Be(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ti(t.kernelSize,e,"kernelSize"),this.strides=ti(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,er(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Et(this.dataFormat),this.activation=no(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=pt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=zt(t.biasConstraint),this.biasRegularizer=ft(t.biasRegularizer),this.activityRegularizer=ft(t.activityRegularizer),this.dilationRate=ti(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new U(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new U(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new U(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Qr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Cx(e.kernelSize,"number",1,3))throw new U(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:to(this.activation),useBias:this.useBias,biasInitializer:xt(this.biasInitializer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),biasConstraint:Bt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class ni extends kd{constructor(e,t){super(e,t),this.kernel=null,ni.verifyArgs(t),this.filters=t.filters,jt(this.filters,"filters"),this.kernelInitializer=pt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=zt(t.kernelConstraint),this.kernelRegularizer=ft(t.kernelRegularizer)}build(e){e=Ze(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new U(`The channel dimension of the input should be defined. Found ${e[t]}`);const r=e[t],s=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:r}}],this.built=!0}call(e,t){return Q(()=>{e=Oe(e);let r;const s=this.bias==null?null:this.bias.read(),o=FI(this.activation.getClassName());if(o!=null&&this.rank===2)r=nk(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)r=pU(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)r=nk(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)r=fU(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Be("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(r=this.activation.apply(r))}return r})}computeOutputShape(e){e=Ze(e);const t=[],r=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let o=0;o<r.length;++o){const a=Fr(r[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:xt(this.kernelInitializer),kernelRegularizer:it(this.kernelRegularizer),kernelConstraint:Bt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new U(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class pc extends ni{constructor(e){super(2,e),pc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Cx(e.kernelSize,"number",1,2))throw new U(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}pc.className="Conv2D",ce(pc);class fc extends ni{constructor(e){super(3,e),fc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new U(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}fc.className="Conv3D",ce(fc);class rk extends pc{constructor(e){if(super(e),this.inputSpec=[new Pt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new U(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ze(e),e.length!==4)throw new U("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new U("The channel dimension of the inputs should be defined. Found `None`.");const r=e[t],s=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Pt({ndim:4,axes:{[t]:r}})],this.built=!0}call(e,t){return Q(()=>{let r=Oe(e);if(r.shape.length!==4)throw new U(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const s=r.shape,o=s[0];let a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);const u=s[a],c=s[i],l=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],p=this.strides[1],f=ts(u,d,l,this.padding),m=ts(c,p,h,this.padding),g=[o,f,m,this.filters];this.dataFormat!=="channelsLast"&&(r=Ye(r,[0,2,3,1]));let x=jw(r,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Ye(x,[0,3,1,2])),this.bias!=null&&(x=Ar(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(e){e=Ze(e);const t=e.slice();let r,s,o;this.dataFormat==="channelsFirst"?(r=1,s=2,o=3):(r=3,s=1,o=2);const a=this.kernelSize[0],i=this.kernelSize[1],u=this.strides[0],c=this.strides[1];return t[r]=this.filters,t[s]=ts(t[s],u,a,this.padding),t[o]=ts(t[o],c,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}rk.className="Conv2DTranspose",ce(rk);class sk extends fc{constructor(e){if(super(e),this.inputSpec=[new Pt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new U(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ze(e),e.length!==5)throw new U("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new U("The channel dimension of the inputs should be defined. Found `None`.");const r=e[t],s=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Pt({ndim:5,axes:{[t]:r}})],this.built=!0}call(e,t){return Q(()=>{let r=Oe(e);if(r.shape.length!==5)throw new U(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const s=r.shape,o=s[0];let a,i,u;this.dataFormat==="channelsFirst"?(u=2,a=3,i=4):(u=1,a=2,i=3);const c=s[u],l=s[a],h=s[i],d=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],x=this.strides[2],y=ts(c,m,d,this.padding),b=ts(l,g,p,this.padding),v=ts(h,x,f,this.padding),w=[o,y,b,v,this.filters];this.dataFormat!=="channelsLast"&&(r=Ye(r,[0,2,3,4,1]));let C=S3(r,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(C=Ye(C,[0,4,1,2,3])),this.bias!==null&&(C=Ar(C,this.bias.read(),this.dataFormat)),this.activation!==null&&(C=this.activation.apply(C)),C})}computeOutputShape(e){e=Ze(e);const t=e.slice();let r,s,o,a;this.dataFormat==="channelsFirst"?(r=1,s=2,o=3,a=4):(r=4,s=1,o=2,a=3);const i=this.kernelSize[0],u=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],h=this.strides[1],d=this.strides[2];return t[r]=this.filters,t[s]=ts(t[s],l,i,this.padding),t[o]=ts(t[o],h,u,this.padding),t[a]=ts(t[a],d,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}sk.className="Conv3DTranspose",ce(sk);class ok extends ni{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new U("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new U("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new U(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=pt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ft(t.depthwiseRegularizer),this.depthwiseConstraint=zt(t.depthwiseConstraint),this.pointwiseInitializer=pt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ft(t.pointwiseRegularizer),this.pointwiseConstraint=zt(t.pointwiseConstraint)}build(e){if(e=Ze(e),e.length<this.rank+2)throw new U(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new U(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const r=e[t],s=this.kernelSize.concat([r,this.depthMultiplier]),o=[];for(let i=0;i<this.rank;++i)o.push(1);o.push(r*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Pt({ndim:this.rank+2,axes:{[t]:r}})],this.built=!0}call(e,t){return Q(()=>{e=Oe(e);let r;if(this.rank===1)throw new Be("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ye(e,[0,2,3,1])),r=bC(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=Ar(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),this.dataFormat==="channelsFirst"&&(r=Ye(r,[0,3,1,2])),r})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=xt(this.depthwiseInitializer),e.pointwiseInitializer=xt(this.pointwiseInitializer),e.depthwiseRegularizer=it(this.depthwiseRegularizer),e.pointwiseRegularizer=it(this.pointwiseRegularizer),e.depthwiseConstraint=Bt(this.depthwiseConstraint),e.pointwiseConstraint=Bt(this.pointwiseConstraint),e}}ok.className="SeparableConv";class ak extends ok{constructor(e){super(2,e)}}ak.className="SeparableConv2D",ce(ak);class Sd extends ni{constructor(e){super(1,e),Sd.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Cx(e.kernelSize,"number",1,1))throw new U(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Sd.className="Conv1D",ce(Sd);class ik extends Ue{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Q(()=>{if(e=Oe(e),this.dataFormat==="channelsLast"){const r=cd(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return cd(r,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const r=cd(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return cd(r,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}ik.className="Cropping2D",ce(ik);class uk extends Ue{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Et(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,HV(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],r=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,r]}else{const t=e[1]==null?null:this.size[0]*e[1],r=e[2]==null?null:this.size[1]*e[2];return[e[0],t,r,e[3]]}}call(e,t){return Q(()=>{let r=Oe(e);const s=r.shape;if(this.dataFormat==="channelsFirst"){r=Ye(r,[0,2,3,1]);const o=this.size[0]*s[2],a=this.size[1]*s[3],i=this.interpolation==="nearest"?Cs.resizeNearestNeighbor(r,[o,a]):Cs.resizeBilinear(r,[o,a]);return Ye(i,[0,3,1,2])}else{const o=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?Cs.resizeNearestNeighbor(r,[o,a]):Cs.resizeBilinear(r,[o,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}uk.className="UpSampling2D",ce(uk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function mU(n,e,t=[1,1],r="valid",s,o){return Q(()=>{s==null&&(s=Rr()),Et(s);let a=Qx(n,s);if(n.rank!==4)throw new U(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new U(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=xg(a,e,t,r==="same"?"same":"valid","NHWC",o),s==="channelsFirst"&&(a=Ye(a,[0,3,1,2])),a})}class ck extends kd{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=pt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=zt(e.depthwiseConstraint),this.depthwiseRegularizer=ft(e.depthwiseRegularizer)}build(e){if(e=Ze(e),e.length<4)throw new U(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new U(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const r=e[t],s=[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Q(()=>{e=Oe(e);let r=mU(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=Ar(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),r})}computeOutputShape(e){e=Ze(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=Fr(t,this.kernelSize[0],this.padding,this.strides[0]),a=Fr(r,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,o,a]:[e[0],o,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=xt(this.depthwiseInitializer),e.depthwiseRegularizer=it(this.depthwiseRegularizer),e.depthwiseConstraint=Bt(this.depthwiseRegularizer),e}}ck.className="DepthwiseConv2D",ce(ck);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lk(n,e,t,r){if(Array.isArray(n)){if(e!=null||t!=null)throw new U("When inputs is an array, neither initialState or constants should be provided");r!=null&&(t=n.slice(n.length-r,n.length),n=n.slice(0,n.length-r)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function s(o){return o==null||Array.isArray(o)?o:[o]}return e=s(e),t=s(t),{inputs:n,initialState:e,constants:t}}function hk(n,e,t,r=!1,s,o,a=!1,i=!1){return Q(()=>{const u=e.shape.length;if(u<3)throw new U(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(Er(2,u));e=Ye(e,c),a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),s!=null&&(s=ge(ge(s,"bool"),"float32"),s.rank===u-1&&(s=An(s,-1)),s=Ye(s,c)),r&&(e=qo(e,0),s!=null&&(s=qo(s,0)));const l=[];let h,d=t;const p=e.shape[0],f=Ko(e);let m;s!=null&&(m=Ko(s));for(let x=0;x<p;++x){const y=f[x],b=Q(()=>n(y,d));if(s==null)h=b[0],d=b[1];else{const v=Q(()=>{const w=m[x],C=De(ir(w),w),T=le(G(b[0],w),G(d[0],C)),S=d.map((k,N)=>le(G(b[1][N],w),G(k,C)));return{output:T,newStates:S}});h=v.output,d=v.newStates}i&&l.push(h)}let g;return i&&(g=ws(l,1)),[h,g,d]})}class ro extends Ue{constructor(e){super(e);let t;if(e.cell==null)throw new U("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new ey({cells:e.cell}):t=e.cell,t.stateSize==null)throw new U("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Pt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Er(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){_x(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const r=t[0];let s;if(this.returnSequences?s=[e[0],e[1],r]:s=[e[0],r],this.returnState){const o=[];for(const a of t)o.push([e[0],a]);return[s].concat(o)}else return s}computeMask(e,t){return Q(()=>{Array.isArray(t)&&(t=t[0]);const r=this.returnSequences?t:null;if(this.returnState){const s=this.states.map(o=>null);return[r].concat(s)}else return r})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let r=0;r<e;++r)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Be("Constants support is not implemented in RNN yet.");_x(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,r=e.slice(2);this.inputSpec[0]=new Pt({shape:[t,null,...r]});const s=[e[0]].concat(e.slice(2));this.cell.build(s);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!et(this.stateSpec.map(a=>a.shape[a.shape.length-1]),o))throw new U(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(a=>new Pt({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Q(()=>{if(!this.stateful)throw new Yr("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape[0];if(r==null)throw new U("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>qt([r,s])):this.states_=[qt([r,this.cell.stateSize])];else if(e==null)Ge(this.states_),this.keptStates!=null&&(Ge(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>qt([r,s])):this.states_[0]=qt([r,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new U(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Ge(this.states_);for(let s=0;s<this.states_.length;++s){const o=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,i=[r,a];if(!et(o.shape,i))throw new U(`State ${s} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${o.shape}`);this.states_[s]=o}}this.states_=this.states_.map(s=>Gr(s.clone()))})}apply(e,t){let r=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});const o=lk(e,r,s,this.numConstants);e=o.inputs,r=o.initialState,s=o.constants;let a=[],i=[];if(r!=null){t.initialState=r,a=a.concat(r),this.stateSpec=[];for(const c of r)this.stateSpec.push(new Pt({shape:c.shape}));i=i.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof es){const c=[e].concat(a),l=this.inputSpec.concat(i),h=this.inputSpec;this.inputSpec=l;const d=super.apply(c,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return Q(()=>{const r=t==null?null:t.mask,s=t==null?null:t.training;let o=t==null?null:t.initialState;e=Oe(e),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==a)throw new U(`RNN Layer has ${a} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},c=hk((f,m)=>{const g=this.cell.call([f].concat(m),i);return[g[0],g.slice(1)]},e,o,this.goBackwards,r,null,this.unroll,this.returnSequences),l=c[0],h=c[1],d=c[2];this.stateful&&this.resetStates(d,s);const p=this.returnSequences?h:l;return this.returnState?[p].concat(d):p})}getInitialState(e){return Q(()=>{let t=qt(e.shape);return t=Re(t,[1,2]),t=rc(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?Nx(t,[1,r]):t):this.cell.stateSize>1?[Nx(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const r=this.cell.getConfig();return this.getClassName()===ro.className&&(t.cell={className:this.cell.getClassName(),config:r}),Object.assign(Object.assign(Object.assign({},r),e),t)}static fromConfig(e,t,r={}){const s=t.cell,o=Ns(s,r);return new e(Object.assign(t,{cell:o}))}}ro.className="RNN",ce(ro);class Nd extends Ue{}class Jx extends Nd{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,jt(this.units,"units"),this.activation=no(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=pt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ft(e.kernelRegularizer),this.recurrentRegularizer=ft(e.recurrentRegularizer),this.biasRegularizer=ft(e.biasRegularizer),this.kernelConstraint=zt(e.kernelConstraint),this.recurrentConstraint=zt(e.recurrentConstraint),this.biasConstraint=zt(e.biasConstraint),this.dropout=Za([1,Zs([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Za([1,Zs([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ze(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Q(()=>{if(e=e,e.length!==2)throw new U(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let r=e[1];e=e[0];const s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=so({ones:()=>ir(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=so({ones:()=>ir(r),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let o;const a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?o=Zr(G(e,a),this.kernel.read()):o=Zr(e,this.kernel.read()),this.bias!=null&&(o=Ar(o,this.bias.read())),i!=null&&(r=G(r,i));let u=le(o,Zr(r,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:to(this.activation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),recurrentInitializer:xt(this.recurrentInitializer),biasInitializer:xt(this.biasInitializer),kernelRegularizer:it(this.kernelRegularizer),recurrentRegularizer:it(this.recurrentRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Bt(this.kernelConstraint),recurrentConstraint:Bt(this.recurrentConstraint),biasConstraint:Bt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Jx.className="SimpleRNNCell",ce(Jx);class dk extends ro{constructor(e){e.cell=new Jx(e),super(e)}call(e,t){return Q(()=>{this.cell.dropoutMask!=null&&(Ge(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ge(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=t==null?null:t.mask,s=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:o})})}static fromConfig(e,t){return new e(t)}}dk.className="SimpleRNN",ce(dk);class Zx extends Nd{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new U("GRUCell does not support reset_after parameter set to true.");this.units=e.units,jt(this.units,"units"),this.activation=no(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=no(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=pt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ft(e.kernelRegularizer),this.recurrentRegularizer=ft(e.recurrentRegularizer),this.biasRegularizer=ft(e.biasRegularizer),this.kernelConstraint=zt(e.kernelConstraint),this.recurrentConstraint=zt(e.recurrentConstraint),this.biasConstraint=zt(e.biasConstraint),this.dropout=Za([1,Zs([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Za([1,Zs([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ze(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Q(()=>{if(e=e,e.length!==2)throw new U(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const r=t.training==null?!1:t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=so({ones:()=>ir(e),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=so({ones:()=>ir(s),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let i,u,c;0<this.dropout&&this.dropout<1&&(e=G(e,o[0]));let l=Zr(e,this.kernel.read());this.useBias&&(l=Ar(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=G(s,a[0]));const h=this.recurrentKernel.read(),[d,p]=Zn(h,[2*this.units,this.units],h.rank-1),f=Zr(s,d),[m,g,x]=Zn(l,3,l.rank-1),[y,b]=Zn(f,2,f.rank-1);i=this.recurrentActivation.apply(le(m,y)),u=this.recurrentActivation.apply(le(g,b));const v=Zr(G(u,s),p);c=this.activation.apply(le(x,v));const w=le(G(i,s),G(le(1,Tt(i)),c));return[w,w]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:to(this.activation),recurrentActivation:to(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),recurrentInitializer:xt(this.recurrentInitializer),biasInitializer:xt(this.biasInitializer),kernelRegularizer:it(this.kernelRegularizer),recurrentRegularizer:it(this.recurrentRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Bt(this.kernelConstraint),recurrentConstraint:Bt(this.recurrentConstraint),biasConstraint:Bt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Zx.className="GRUCell",ce(Zx);class pk extends ro{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Zx(e),super(e)}call(e,t){return Q(()=>{this.cell.dropoutMask!=null&&(Ge(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ge(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=t==null?null:t.mask,s=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}pk.className="GRU",ce(pk);class Td extends Nd{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,jt(this.units,"units"),this.activation=no(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=no(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=pt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=pt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=pt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=ft(e.kernelRegularizer),this.recurrentRegularizer=ft(e.recurrentRegularizer),this.biasRegularizer=ft(e.biasRegularizer),this.kernelConstraint=zt(e.kernelConstraint),this.recurrentConstraint=zt(e.recurrentConstraint),this.biasConstraint=zt(e.biasConstraint),this.dropout=Za([1,Zs([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Za([1,Zs([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Ze(e);const r=e[e.length-1];this.kernel=this.addWeight("kernel",[r,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,a=this.units;s=new(t=class extends hr{apply(u,c){const l=o.apply([a]),h=new Ex().apply([a]),d=o.apply([a*2]);return zI(zI(l,h),d)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Q(()=>{const r=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new U(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=so({ones:()=>ir(e),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=so({ones:()=>ir(s),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let u,c,l,h;0<this.dropout&&this.dropout<1&&(e=G(e,a[0]));let d=Zr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=G(s,i[0])),d=le(d,Zr(s,this.recurrentKernel.read())),this.useBias&&(d=Ar(d,this.bias.read()));const[p,f,m,g]=Zn(d,4,d.rank-1);u=this.recurrentActivation.apply(p),c=this.recurrentActivation.apply(f),l=le(G(c,o),G(u,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const x=G(h,this.activation.apply(l));return[x,x,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:to(this.activation),recurrentActivation:to(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),recurrentInitializer:xt(this.recurrentInitializer),biasInitializer:xt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:it(this.kernelRegularizer),recurrentRegularizer:it(this.recurrentRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Bt(this.kernelConstraint),recurrentConstraint:Bt(this.recurrentConstraint),biasConstraint:Bt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Td.className="LSTMCell",ce(Td);class fk extends ro{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Td(e),super(e)}call(e,t){return Q(()=>{this.cell.dropoutMask!=null&&(Ge(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ge(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=t==null?null:t.mask,s=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}fk.className="LSTM",ce(fk);class ey extends Nd{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Q(()=>{e=e;let r=e.slice(1);const s=[];for(const i of this.cells.slice().reverse())Array.isArray(i.stateSize)?s.push(r.splice(0,i.stateSize.length)):s.push(r.splice(0,1));s.reverse();const o=[];let a;for(let i=0;i<this.cells.length;++i){const u=this.cells[i];r=s[i],i===0?a=[e[0]].concat(r):a=[a[0]].concat(r),a=u.call(a,t),o.push(a.slice(1))}r=[];for(const i of o.slice().reverse())r.push(...i);return[a[0]].concat(r)})}build(e){_x(e)&&(e=e[0]),e=e;let t;this.cells.forEach((r,s)=>{Jo(`RNNCell_${s}`,()=>{r.build(e),Array.isArray(r.stateSize)?t=r.stateSize[0]:t=r.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=o=>({className:o.getClassName(),config:o.getConfig()}),s={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),s)}static fromConfig(e,t,r={}){const s=[];for(const o of t.cells)s.push(Ns(o,r));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const r of this.cells)t.push(...r.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Mx(e)}setWeights(e){const t=[];for(const r of this.cells){const s=r.weights.length,o=e.splice(s);for(let a=0;a<r.weights.length;++a)t.push([r.weights[a],o[a]])}Lx(t)}}ey.className="StackedRNNCells",ce(ey);function so(n){const{ones:e,rate:t,training:r=!1,count:s=1,dropoutFunc:o}=n,a=()=>o!=null?o(e(),t):WI(e(),t),i=()=>oc(a,e,r);return!s||s<=1?Gr(i().clone()):Array(s).fill(void 0).map(i).map(c=>Gr(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var gU=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var s=0,r=Object.getOwnPropertySymbols(n);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(n,r[s])&&(t[r[s]]=n[r[s]]);return t};class mk extends ro{constructor(e){if(e.unroll)throw new Be("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Be("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Pt({ndim:5})]}call(e,t){return Q(()=>{if(this.cell.dropoutMask!=null&&(Ge(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ge(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new U("ConvRNN2D cell does not support constants");const r=t==null?null:t.mask,s=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:o})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Q(()=>{const{stateSize:t}=this.cell,r=e.shape,s=this.computeSingleOutputShape(r),o=[s[0],...s.slice(2)],a=qt(o);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){Q(()=>{if(!this.stateful)throw new Yr("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape,s=this.computeSingleOutputShape(r),o=[s[0],...s.slice(2)];if(r[0]==null)throw new U("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>qt(o)):this.states_=[qt(o)];else if(e==null)Ge(this.states_),this.keptStates!=null&&(Ge(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>qt(o)):this.states_[0]=qt(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new U(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Ge(this.states_);for(let i=0;i<this.states_.length;++i){const u=e[i],c=o;if(!et(u.shape,c))throw new U(`State ${i} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${u.shape}`);this.states_[i]=u}}this.states_=this.states_.map(i=>Gr(i.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:r,kernelSize:s,padding:o,strides:a,dilationRate:i}=this.cell,u=t==="channelsFirst",c=e[u?3:2],l=e[u?4:3],h=Fr(c,s[0],o,a[0],i[0]),d=Fr(l,s[1],o,a[1],i[1]);return[...e.slice(0,2),...u?[r,h,d]:[h,d,r]]}}mk.className="ConvRNN2D";class ty extends Td{constructor(e){const{filters:t,kernelSize:r,strides:s,padding:o,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,jt(this.filters,"filters"),this.kernelSize=ti(r,2,"kernelSize"),this.kernelSize.forEach(u=>jt(u,"kernelSize")),this.strides=ti(s||1,2,"strides"),this.strides.forEach(u=>jt(u,"strides")),this.padding=o||"valid",er(this.padding),this.dataFormat=a||"channelsLast",Et(this.dataFormat),this.dilationRate=ti(i||1,2,"dilationRate"),this.dilationRate.forEach(u=>jt(u,"dilationRate"))}build(e){var t;e=Ze(e);const r=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[r]==null)throw new U(`The channel dimension of the input should be defined. Found ${e[r]}`);const s=e[r],o=4,a=this.kernelSize.concat([s,this.filters*o]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const c=this.biasInitializer,l=this.filters;u=new(t=class extends hr{apply(d,p){const f=c.apply([l]),m=Xs([l]),g=c.apply([l*2]);return Sx([f,m,g])}},t.className="CustomInit",t)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Q(()=>{if(e.length!==3)throw new U(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const r=t.training||!1,s=e[0],o=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=so({ones:()=>ir(s),rate:this.dropout,training:r,count:i,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,c=(W,j,Y)=>!j||!j[Y]?W:G(j[Y],W);let l=c(s,u,0),h=c(s,u,1),d=c(s,u,2),p=c(s,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=so({ones:()=>ir(o),rate:this.recurrentDropout,training:r,count:i,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=c(o,f,0),g=c(o,f,1),x=c(o,f,2),y=c(o,f,3);const b=3,[v,w,C,T]=Zn(this.kernel.read(),i,b),[S,k,N,I]=this.useBias?Zn(this.bias.read(),i):[null,null,null,null];l=this.inputConv(l,v,S,this.padding),h=this.inputConv(h,w,k,this.padding),d=this.inputConv(d,C,N,this.padding),p=this.inputConv(p,T,I,this.padding);const[E,F,O,D]=Zn(this.recurrentKernel.read(),i,b);m=this.recurrentConv(m,E),g=this.recurrentConv(g,F),x=this.recurrentConv(x,O),y=this.recurrentConv(y,D);const M=this.recurrentActivation.apply(le(l,m)),P=this.recurrentActivation.apply(le(h,g)),L=le(G(P,a),G(M,this.activation.apply(le(d,x)))),z=G(this.recurrentActivation.apply(le(p,y)),this.activation.apply(L));return[z,z,L]})}getConfig(){const e=super.getConfig(),{units:t}=e,r=gU(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},r),s)}inputConv(e,t,r,s){const o=Wo(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return r?Ar(o,r,this.dataFormat):o}recurrentConv(e,t){return Wo(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}ty.className="ConvLSTM2DCell",ce(ty);class gk extends mk{constructor(e){const t=new ty(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}gk.className="ConvLSTM2D",ce(gk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ny extends Ue{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,r=[];for(let s=0;s<this.noiseShape.length;++s)r.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return r}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const r=Oe(e);if(0<this.rate&&this.rate<1){const s=t.training==null?!1:t.training,o=this.getNoiseShape(r);return oc(()=>WI(r,this.rate,o,this.seed),()=>r,s)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}ny.className="Dropout",ce(ny);class xk extends ny{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}xk.className="SpatialDropout1D",ce(xk);class yk extends Ue{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,jt(this.units,"units"),this.activation=no(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=pt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=pt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=zt(e.kernelConstraint),this.biasConstraint=zt(e.biasConstraint),this.kernelRegularizer=ft(e.kernelRegularizer),this.biasRegularizer=ft(e.biasRegularizer),this.activityRegularizer=ft(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Ze(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Ze(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const r=Oe(e),s=FI(this.activation.getClassName());let o;return s!=null?o=Zr(r,this.kernel.read(),s,this.bias?this.bias.read():null):(o=Zr(r,this.kernel.read()),this.bias!=null&&(o=Ar(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:to(this.activation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),biasInitializer:xt(this.biasInitializer),kernelRegularizer:it(this.kernelRegularizer),biasRegularizer:it(this.biasRegularizer),activityRegularizer:it(this.activityRegularizer),kernelConstraint:Bt(this.kernelConstraint),biasConstraint:Bt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}yk.className="Dense",ce(yk);class vk extends Ue{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ze(e);for(const t of e.slice(1))if(t==null)throw new U(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Js(e,1)]}call(e,t){return Q(()=>{this.invokeCallHook(e,t);let r=Oe(e);if(this.dataFormat==="channelsFirst"&&r.rank>1){const s=[0];for(let o=2;o<r.rank;++o)s.push(o);s.push(1),r=Ye(r,s)}return QV(r)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}vk.className="Flatten",ce(vk);class bk extends Ue{constructor(e){super(e),this.supportsMasking=!0,this.activation=no(e.activation)}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const r=Oe(e);return this.activation.apply(r)})}getConfig(){const e={activation:to(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}bk.className="Activation",ce(bk);class wk extends Ue{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Q(()=>(e=Oe(e),XV(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}wk.className="RepeatVector",ce(wk);class Ck extends Ue{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const r="Total size of new array must be unchanged.",s=t.slice();let o=1,a=null;for(let u=0;u<s.length;++u){const c=s[u];if(this.isUnknown(c))if(a===null)a=u;else throw new U("Can only specifiy one unknown dimension.");else o*=c}const i=Js(e);if(a!==null){if(o===0||i%o!==0)throw new U(r);s[a]=i/o}else if(i!==o)throw new U(r);return s}computeOutputShape(e){let t=!1;for(let r=0;r<e.length;++r)if(this.isUnknown(e[r])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const r=Oe(e),s=r.shape,o=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return K(r,o)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Ck.className="Reshape",ce(Ck);class Ik extends Ue{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Er(1,e.dims.length+1);if(!et(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Pt({ndim:this.dims.length+1})]}computeOutputShape(e){e=Ze(e);const t=e.slice();return this.dims.forEach((r,s)=>{t[s+1]=e[r]}),t}call(e,t){return Ye(Oe(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Ik.className="Permute",ce(Ik);class kk extends Ue{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const r=Oe(e);return cg(qh(r,this.maskValue),-1)}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const r=Oe(e),a=cg(qh(r,this.maskValue),-1,!0);return G(r,ge(a,r.dtype))})}}kk.className="Masking",ce(kk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Sk extends Ue{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(st(e.inputLength))}this.inputDim=e.inputDim,jt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,jt(this.outputDim,"outputDim"),this.embeddingsInitializer=pt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ft(e.embeddingsRegularizer),this.activityRegularizer=ft(e.activityRegularizer),this.embeddingsConstraint=zt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Q(()=>this.maskZero?(e=Oe(e),qh(e,Xe(e))):null)}computeOutputShape(e){if(e=Ze(e),this.inputLength==null)return[...e,this.outputDim];const t=st(this.inputLength);if(t.length!==e.length-1)throw new U(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let r=0;for(let s=0;s<t.length;++s){const o=t[s],a=e[s+1];if(o!=null&&a!=null&&o!==a)throw new U(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);o==null&&(t[r]=a),r++}}return[e[0],...t,this.outputDim]}call(e,t){return Q(()=>{this.invokeCallHook(e,t);let r=Oe(e);r.dtype!=="int32"&&(r=Jr(r,"int32"));const s=VI(this.embeddings.read(),K(r,[r.size]));return K(s,Ze(this.computeOutputShape(r.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:xt(this.embeddingsInitializer),embeddingsRegularizer:it(this.embeddingsRegularizer),activityRegularizer:it(this.activityRegularizer),embeddingsConstraint:Bt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Sk.className="Embedding",ce(Sk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ta extends Ue{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Be}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const r=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const o=e[e.length-t.length+s],a=t[s];if(o==null||a==null||o<0||a<0)r.push(null);else if(o===1)r.push(a);else if(a===1)r.push(o);else{if(o!==a)throw new U("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));r.push(o)}}return r}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ze(e)]),e=e,e.length<2)throw new U(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const o of e)o!=null&&o[0]!==null&&t.push(o[0]);if(t=Qs(t),t.length>1)throw new U(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let r=e[0]==null?null:e[0].slice(1);for(let o=1;o<e.length;++o){const a=e[o]==null?null:e[o].slice(1);r=this.computeElementwiseOpOutputShape(r,a)}const s=e.map(o=>o.length);e.indexOf(null)===-1&&Qs(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Q(()=>{if(e=e,this.reshapeRequired){const r=[],s=e.map(o=>o.rank);if(s.indexOf(null)===-1){const o=Zs(s);for(let a of e){const i=a.rank;for(let u=0;u<o-i;++u)a=rc(a,1);r.push(a)}return this.mergeFunction(r)}else{let o=!1;for(const u of e){const c=u.rank;if(c==null){const l=u.shape,h=l[0],d=l.slice(1).concat([h]);let p=K(u,[h].concat(Js(l.slice(1))));p=Ye(p,[1,0]),p=K(p,d),r.push(p),o=!0}else if(c>1){const l=Er(1,c).concat([0]);r.push(Ye(u,l)),o=!0}else r.push(u)}let a=this.mergeFunction(r);const i=a.rank;if(o){if(i==null){const u=a.shape,c=u.length,l=u[c-1],h=[l].concat(u.slice(0,u.length-1));a=K(Ye(K(a,[-1,l]),[1,0]),h)}else if(i>1){const u=[i-1].concat(Er(0,i-1));a=Ye(a,u)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){const o=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,o)}let r=[];for(const s of e)s!=null&&s[0]!==null&&r.push(s[0]);return r=Qs(r),r.length===1?t=r.concat(t):t=[null].concat(t),t}computeMask(e,t){return Q(()=>{if(t==null)return null;if(!Array.isArray(t))throw new U("`mask` should be an Array");if(!Array.isArray(e))throw new U("`inputs` should be an Array");if(t.length!==e.length)throw new U(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:An(s,0));let r=t[0];for(let s=1;s<t.length-1;++s)r=bs(r,t[s]);return r})}}class Nk extends ta{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=le(t,e[r]);return t})}}Nk.className="Add",ce(Nk);class Tk extends ta{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=G(t,e[r]);return t})}}Tk.className="Multiply",ce(Tk);class Ek extends ta{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=le(t,e[r]);return G(1/e.length,t)})}}Ek.className="Average",ce(Ek);class Rk extends ta{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=Ks(t,e[r]);return t})}}Rk.className="Maximum",ce(Rk);class Ak extends ta{constructor(e){super(e)}mergeFunction(e){return Q(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=ju(t,e[r]);return t})}}Ak.className="Minimum",ce(Ak);class $k extends ta{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new U("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const s of e)if(s!=null){t=!1;break}if(t)return;const r=[];for(let s=0;s<e.length;++s){const o=e[s].slice();o.splice(this.axis,1);let a=!1;for(const i of r)if(et(i,o)){a=!0;break}a||r.push(o)}if(r.length>1)throw new U("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Q(()=>Sx(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new U("A `Concatenate` layer should be called on a list of inputs.");const t=e,r=t[0].slice(),s=this.axis<0?r.length+this.axis:this.axis;for(const o of t.slice(1)){if(r[s]==null||o[s]==null){r[s]=null;break}r[s]+=o[s]}return r}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new U("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new U("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new U(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Q(()=>{let r=!0;if(t.forEach(a=>{if(a!=null){r=!1;return}}),r)return null;const s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(ge(ir(e[a]),"bool")):t[a].rank<e[a].rank?s.push(An(t[a],-1)):s.push(t[a]);const o=Rn(s,this.axis);return Hw(o,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}$k.className="Concatenate",ce($k);function mc(n,e){for(;n<0;)n+=e;return n}function xU(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new Be("batchDot is not implemented for tensors of 4D or higher rank yet");if(A(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),A(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new Be("batchDot is not implemented for complex64-type Tensors yet.");const r=n.shape.length,s=e.shape.length;t==null&&(t=[r-1,s-2]);const o=t;return Q(()=>{let a;if(r>s){a=r-s;const u=[];for(let c=0;c<a;++c)u.push(1);e=K(e,e.shape.concat(u))}else if(s>r){a=s-r;const u=[];for(let c=0;c<a;++c)u.push(1);n=K(n,n.shape.concat(u))}else a=0;let i;if(n.shape.length===2&&e.shape.length===2)o[0]===o[1]?i=Re(G(n,e),o[0]):i=Re(G(Ye(n,[1,0]),e),o[1]);else{const u=o[0]!==n.shape.length-1,c=o[1]===e.shape.length-1;i=tt(n,e,u,c)}if(a>0){let u;r>s?u=r+s-3:u=r-1;const c=[];for(let l=u;l<u+a;++l)c.push(l);i=Yu(i,c)}return i.shape.length===1&&(i=An(i,1)),i})}class Dk extends ta{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){A(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],r=e[1];if(t.length>3||r.length>3)throw new Be("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,r);if(t[s[0]]!==r[s[1]])throw new U(`Dimension incompatibility: ${t[s[0]]} !== ${r[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new U(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],r=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((o,a)=>mc(o,e[a].shape.length)):s=[mc(this.axes,t.shape.length),mc(this.axes,r.shape.length)],this.normalize&&(t=gd(t,s[0]),r=gd(r,s[1])),xU(t,r,s)}interpretAxes(e,t){let r;return Array.isArray(this.axes)?r=this.axes:r=[mc(this.axes,e.length),mc(this.axes,t.length)],r}computeOutputShape(e){A(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),r=e[1].slice();if(t.length>3||r.length>3)throw new Be("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,r);t.splice(s[0],1),r.splice(s[1],1),r.splice(0,1);const o=t.concat(r);return o.length===1&&o.push(1),o}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Dk.className="Dot",ce(Dk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Fk extends Ue{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const r=Oe(e);return oc(()=>le(ld(r.shape,0,this.stddev),r),()=>r,t.training||!1)})}}Fk.className="GaussianNoise",ce(Fk);class Ok extends Ue{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Q(()=>{this.invokeCallHook(e,t);const r=Oe(e);return this.rate>0&&this.rate<1?oc(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return G(r,ld(r.shape,1,o))},()=>r,t.training||!1):r})}}Ok.className="GaussianDropout",ce(Ok);class _k extends Ue{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Oe(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Q(()=>{if(this.rate<1&&this.rate>0){const r=this._getNoiseShape(e);return oc(()=>{const o=Oe(e),i=-1.6732632423543772*1.0507009873554805;let u=Go(Ku(r),this.rate);u=Jr(u,"float32");const c=((1-this.rate)*(1+this.rate*i**2))**-.5,l=-c*i*this.rate,h=le(G(o,u),G(le(u,-1),i));return le(G(h,c),l)},()=>Oe(e),t.training||!1)}return e})}}_k.className="AlphaDropout",ce(_k);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gc(n,e,t,r,s,o=.001){let a;if(n.rank===2)a=JM(n,e,t,r,s,o);else if(n.rank===3)a=e3(n,e,t,r,s,o);else if(n.rank===4)a=n3(n,e,t,r,s,o);else throw new Be(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return a}function yU(n,e,t,r,s=.001){return Q(()=>{const o=kg(n,r),a=o.mean,i=o.variance;return[gc(n,a,i,t,e,s),a,i]})}function vU(n,e,t,r,s=.001){return Q(()=>{const o=kg(n,r),a=o.mean,i=o.variance,u=[];for(const f of Er(0,n.rank))r.indexOf(f)!==-1?u.push(1):u.push(n.shape[f]);const c=K(a,u),l=K(i,u),h=e==null?null:K(e,u),d=t==null?null:K(t,u);return[gc(n,c,l,d,h,s),a,i]})}function bU(n,e,t,r,s=.001){return et(r.slice().sort(),Er(0,n.rank-1))?yU(n,e,t,r,s):vU(n,e,t,r,s)}class Mk extends Ue{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=pt(e.betaInitializer||"zeros"),this.gammaInitializer=pt(e.gammaInitializer||"ones"),this.movingMeanInitializer=pt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=pt(e.movingVarianceInitializer||"ones"),this.betaConstraint=zt(e.betaConstraint),this.gammaConstraint=zt(e.gammaConstraint),this.betaRegularizer=ft(e.betaRegularizer),this.gammaRegularizer=ft(e.gammaRegularizer)}build(e){e=Ze(e);const t=this.axis>=0?this.axis:this.axis+e.length,r=e[t];if(r==null)throw new U(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Pt({ndim:e.length,axes:{[t]:r}})];const s=[r];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Q(()=>{const r=t.training==null?!1:t.training,s=Oe(e),o=s.shape,a=o.length,i=Er(0,a),u=this.axis>=0?this.axis:this.axis+a;i.splice(u,1);const c=Xo(1,a);c[u]=o[u];const l=i.slice();l.sort();const h=!et(l,Er(0,a).slice(0,a-1)),d=()=>{if(h){const y=K(this.movingMean.read(),c),b=K(this.movingVariance.read(),c),v=this.center?K(this.beta.read(),c):null,w=this.scale?K(this.gamma.read(),c):null;return gc(s,y,b,v,w,this.epsilon)}else return gc(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!r)return d();const[p,f,m]=bU(s,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(y,b,v)=>{Q(()=>{const w=1-v,C=y.read(),T=G(De(C,b),w);y.write(De(C,T))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xt(this.betaInitializer),gammaInitializer:xt(this.gammaInitializer),movingMeanInitializer:xt(this.movingMeanInitializer),movingVarianceInitializer:xt(this.movingVarianceInitializer),betaRegularizer:it(this.betaRegularizer),gammaRegularizer:it(this.gammaRegularizer),betaConstraint:Bt(this.betaConstraint),gammaConstraint:Bt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Mk.className="BatchNormalization",ce(Mk);class Lk extends Ue{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=pt(e.betaInitializer||"zeros"),this.gammaInitializer=pt(e.gammaInitializer||"ones"),this.betaRegularizer=ft(e.betaRegularizer),this.gammaRegularizer=ft(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Ze(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=t);for(const o of this.axis)if(o<0||o>=t)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==Qs(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const r=this.axis.map(o=>e[o]),s=!0;this.scale?this.gamma=this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){const r=Oe(e),s=r.shape,o=s.length;return Q(()=>{let{mean:i,variance:u}=kg(r,this.axis,!0);const c=Xo(1,o);for(const m of this.axis)c[m]=s[m];const l=m=>m!=null&&m.shape.length!==o?K(m,c):m;let h=this.scale?l(this.gamma.read()):null,d=this.center?l(this.beta.read()):null;const p=[],f=[];for(let m=0;m<o;++m)this.axis.indexOf(m)!==-1?(p.push(s[m]),f.push(1)):(p.push(1),f.push(s[m]));return i=Nr(i,p),u=Nr(u,p),h!=null&&(h=Nr(h,f)),d!=null&&(d=Nr(d,f)),gc(r,i,u,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xt(this.betaInitializer),gammaInitializer:xt(this.gammaInitializer),betaRegularizer:it(this.betaRegularizer),gammaRegularizer:it(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Lk.className="LayerNormalization",ce(Lk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wU(n,e,t){return Q(()=>{if(n.rank!==4)throw new U(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new U("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Rr()),t!=="channelsLast"&&t!=="channelsFirst")throw new U(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return t==="channelsFirst"?r=[[0,0],[0,0],e[0],e[1]]:r=[[0,0],e[0],e[1],[0,0]],Sg(n,r)})}class Pk extends Ue{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Rr():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new U(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,r;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],r=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new U(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new U(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);r=e.padding[1]}this.padding=[t,r]}this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){e=Ze(e);let t,r;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?r=e[3]+this.padding[1][0]+this.padding[1][1]:r=null,[e[0],e[1],t,r]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?r=e[2]+this.padding[1][0]+this.padding[1][1]:r=null,[e[0],t,r,e[3]])}call(e,t){return Q(()=>wU(Oe(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Pk.className="ZeroPadding2D",ce(Pk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ed(n,e,t,r,s,o){return Q(()=>{Et(s),_I(o),er(r),t==null&&(t=[1,1]),r==null&&(r="valid"),s==null&&(s=Rr()),o==null&&(o="max"),n=Qx(n,s);let a;const i=r==="same"?"same":"valid";return o==="max"?a=Ig(n,e,t,i):a=dg(n,e,t,i),s==="channelsFirst"&&(a=Ye(a,[0,3,1,2])),a})}function Bk(n,e,t,r,s,o){return Q(()=>{Et(s),_I(o),er(r),t==null&&(t=[1,1,1]),r==null&&(r="valid"),s==null&&(s=Rr()),o==null&&(o="max"),n=tk(n,s);let a;const i=r==="same"?"same":"valid";return o==="max"?a=zL(n,e,t,i):a=WM(n,e,t,i),s==="channelsFirst"&&(a=Ye(a,[0,4,1,2,3])),a})}class zk extends Ue{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new U(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(jt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new U(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,er(this.padding),this.inputSpec=[new Pt({ndim:3})]}computeOutputShape(e){e=Ze(e);const t=Fr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Q(()=>{this.invokeCallHook(e,t),e=rc(Oe(e),2);const r=this.poolingFunction(Oe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Yu(r,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Vk extends zk{constructor(e){super(e)}poolingFunction(e,t,r,s,o){return Et(o),er(s),Ed(e,t,r,s,o,"max")}}Vk.className="MaxPooling1D",ce(Vk);class Wk extends zk{constructor(e){super(e)}poolingFunction(e,t,r,s,o){return Et(o),er(s),Ed(e,t,r,s,o,"avg")}}Wk.className="AveragePooling1D",ce(Wk);class Uk extends Ue{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new U(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];jt(this.poolSize,"poolSize"),jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Et(this.dataFormat),er(this.padding),this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Fr(t,this.poolSize[0],this.padding,this.strides[0]),r=Fr(r,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,r]:[e[0],t,r,e[3]]}call(e,t){return Q(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Gk extends Uk{constructor(e){super(e)}poolingFunction(e,t,r,s,o){return Et(o),er(s),Ed(e,t,r,s,o,"max")}}Gk.className="MaxPooling2D",ce(Gk);class Hk extends Uk{constructor(e){super(e)}poolingFunction(e,t,r,s,o){return Et(o),er(s),Ed(e,t,r,s,o,"avg")}}Hk.className="AveragePooling2D",ce(Hk);class qk extends Ue{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new U(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];jt(this.poolSize,"poolSize"),jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Et(this.dataFormat),er(this.padding),this.inputSpec=[new Pt({ndim:5})]}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Fr(t,this.poolSize[0],this.padding,this.strides[0]),r=Fr(r,this.poolSize[1],this.padding,this.strides[1]),s=Fr(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,r,s]:[e[0],t,r,s,e[4]]}call(e,t){return Q(()=>(this.invokeCallHook(e,t),this.poolingFunction(Oe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class jk extends qk{constructor(e){super(e)}poolingFunction(e,t,r,s,o){return Et(o),er(s),Bk(e,t,r,s,o,"max")}}jk.className="MaxPooling3D",ce(jk);class Kk extends qk{constructor(e){super(e)}poolingFunction(e,t,r,s,o){return Et(o),er(s),Bk(e,t,r,s,o,"avg")}}Kk.className="AveragePooling3D",ce(Kk);class Xk extends Ue{constructor(e){super(e),this.inputSpec=[new Pt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Be}}class Yk extends Xk{constructor(e){super(e||{})}call(e,t){return Q(()=>{const r=Oe(e);return Ft(r,1)})}}Yk.className="GlobalAveragePooling1D",ce(Yk);class Qk extends Xk{constructor(e){super(e||{})}call(e,t){return Q(()=>{const r=Oe(e);return Sr(r,1)})}}Qk.className="GlobalMaxPooling1D",ce(Qk);class Jk extends Ue{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Et(this.dataFormat),this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Be}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Zk extends Jk{call(e,t){return Q(()=>{const r=Oe(e);return this.dataFormat==="channelsLast"?Ft(r,[1,2]):Ft(r,[2,3])})}}Zk.className="GlobalAveragePooling2D",ce(Zk);class eS extends Jk{call(e,t){return Q(()=>{const r=Oe(e);return this.dataFormat==="channelsLast"?Sr(r,[1,2]):Sr(r,[2,3])})}}eS.className="GlobalMaxPooling2D",ce(eS);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class tS extends Ue{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,r={}){const s=t.layer,o=Ns(s,r);delete t.layer;const a={layer:o};return Object.assign(a,t),new e(a)}}class nS extends tS{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Ze(e),e.length<3)throw new U(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Ze(e);const t=[e[0]].concat(e.slice(2)),r=this.layer.computeOutputShape(t),s=e[1];return[r[0],s].concat(r.slice(1))}call(e,t){return Q(()=>(e=Oe(e),hk((a,i)=>[Oe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}nS.className="TimeDistributed",ce(nS);function CU(n){Qo(GV,"BidirectionalMergeMode",n)}const IU="concat";class rS extends tS{constructor(e){super(e);const t=e.layer.getConfig(),r={};r.className=e.layer.getClassName(),r.config=t,this.forwardLayer=Ns(r),t.goBackwards=t.goBackwards!==!0;const s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Ns(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?IU:e.mergeMode,CU(this.mergeMode),e.weights)throw new Be("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,r=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,r)),this.backwardLayer.setWeights(e.slice(r))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let r,s,o;return this.returnState&&(o=t.slice(1)),r=t[0],r=r,this.mergeMode==="concat"?(r[r.length-1]*=2,s=[r]):this.mergeMode==null?s=[r,r.slice()]:s=[r],this.returnState?this.mergeMode==null?s.concat(o).concat(o.slice()):[r].concat(o).concat(o.slice()):$n(s)}apply(e,t){let r=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});const o=lk(e,r,s,this.numConstants);if(e=o.inputs,r=o.initialState,s=o.constants,Array.isArray(e)&&(r=e.slice(1),e=e[0]),(r==null||r.length===0)&&s==null)return super.apply(e,t);const a=[],i=[];if(r!=null){const c=r.length;if(c%2>0)throw new U("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=r,a.push(...r);const l=r.map(h=>new Pt({shape:h.shape}));this.forwardLayer.stateSpec=l.slice(0,c/2),this.backwardLayer.stateSpec=l.slice(c/2),i.push(...l)}if(s!=null)throw new Be("Support for constants in Bidirectional layers is not implemented yet.");const u=a[0]instanceof es;for(const c of a)if(c instanceof es!==u)throw new U("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const c=[e].concat(a),l=this.inputSpec.concat(i),h=this.inputSpec;this.inputSpec=l;const d=super.apply(c,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return Q(()=>{const r=t.initialState;let s,o;if(r==null)s=this.forwardLayer.call(e,t),o=this.backwardLayer.call(e,t);else{const u=r.slice(0,r.length/2),c=r.slice(r.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:u})),o=this.backwardLayer.call(e,Object.assign(t,{initialState:c}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(o.slice(1))),s=s[0],o=o[0]),this.returnSequences&&(o=qo(o,1));let i;return this.mergeMode==="concat"?i=Sx([s,o]):this.mergeMode==="sum"?i=le(s,o):this.mergeMode==="ave"?i=G(.5,le(s,o)):this.mergeMode==="mul"?i=G(s,o):this.mergeMode==null&&(i=[s,o]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Jo(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Jo(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let r;if(this.returnSequences?this.mergeMode==null?r=[t,t]:r=t:this.mergeMode==null?r=[null,null]:r=null,this.returnState){const o=this.forwardLayer.states.map(a=>null);return Array.isArray(r)?r.concat(o).concat(o):[r].concat(o).concat(o)}else return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const r=Ns(t.layer);if(delete t.layer,t.numConstants!=null)throw new Be("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=r,new e(s)}}rS.className="Bidirectional",ce(rS);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class sS extends Ue{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Q(()=>(e=Oe(e),e.dtype!=="float32"&&(e=Jr(e,"float32")),le(G(e,this.scale),this.offset)))}}sS.className="Rescaling",ce(sS);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:kU,cropAndResize:SU}=Cs;class oS extends Ue{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,r,s,o,a,i,u){return Q(()=>{let c,l=!1;const h=t/a,d=r/i,p=(s+t)/a,f=(o+r)/i,m=[h,d,p,f],g=[];e.rank===3?(l=!0,c=ws([e])):c=e;for(let w=0;w<c.shape[0];w++)g.push(m);const x=Aw(g,[g.length,4]),y=Xu(0,g.length,1,"int32"),v=SU(c,x,y,[s,o],"nearest");return Jr(l?Oe(Ko(v)):v,u)})}upsize(e,t,r,s){return Q(()=>{const o=kU(e,[t,r]);return Jr(o,s)})}call(e,t){return Q(()=>{const r=Oe(e),s=r.dtype,o=r.shape,a=o[o.length-3],i=o[o.length-2];let u=0;a!==this.height&&(u=Math.floor((a-this.height)/2));let c=0;return i!==this.width&&(c=Math.floor((i-this.width)/2),c===0&&(c=1)),u>=0&&c>=0?this.centerCrop(r,u,c,this.height,this.width,a,i,s):this.upsize(e,this.height,this.width,s)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Ze(e);const t=e.length-3,r=e.length-2;return e[t]=this.height,e[r]=this.width,e}}oS.className="CenterCrop",ce(oS);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function NU(n,e,t,r){let s=Oe(n);if(s.dtype!=="int32"&&(s=Jr(s,"int32")),e==="int")return s;const o=s.shape;if(s.rank===0&&(s=An(s,-1)),e==="oneHot"&&s.shape[s.shape.length-1]!==1&&(s=An(s,-1)),s.rank>2)throw new U(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${o} which would result in output rank ${s.rank}.`);const a=["multiHot","oneHot"].includes(e),i=s;let u;if(typeof r<"u"&&e==="count"?u=Qw(i,r,t,a):u=Qw(i,[],t,a),e!=="tfIdf")return u;if(r)return G(u,r);throw new U("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class aS extends Ue{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Ze(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Q(()=>{e=Oe(e),e.dtype!=="int32"&&(e=Jr(e,"int32"));let r;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new U(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);r=Oe(t.countWeights)}const s=Sr(e),o=Wh(e),a=Jn(this.numTokens,s).bufferSync().get(0),i=Go(o,0).bufferSync().get(0);if(!(a&&i))throw new U(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return NU(e,this.outputMode,this.numTokens,r)})}}aS.className="CategoryEncoding",ce(aS);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const TU=["bilinear","nearest"],iS=new Set(TU);class uS extends Ue{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(iS.has(e.interpolation))this.interpolation=e.interpolation;else throw new U(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Ze(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Q(()=>{const r=[this.height,this.width];if(this.interpolation==="bilinear")return Cs.resizeBilinear(e,r,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Cs.resizeNearestNeighbor(e,r,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...iS]} are supported`)})}}uS.className="Resizing",ce(uS);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class cS{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}cS.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class lS extends Ue{constructor(e){super(e),this.randomGenerator=new cS(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}lS.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const EU=["bilinear","nearest"],hS=new Set(EU);class dS extends lS{constructor(e){super(e);const{factor:t,interpolation:r="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new U(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new U(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new U(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(r)if(hS.has(r))this.interpolation=r;else throw new U(`Invalid interpolation parameter: ${r} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Ze(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return Q(()=>{const r=Oe(e);this.imgHeight=r.shape[r.shape.length-3];const s=r.shape[r.shape.length-2];this.widthFactor=Ku([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let o=this.widthFactor.dataSync()[0]*s;o=Math.round(o);const a=[this.imgHeight,o];switch(this.interpolation){case"bilinear":return Cs.resizeBilinear(e,a);case"nearest":return Cs.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...hS]} are supported`)}})}}dS.className="RandomWidth",ce(dS);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Z().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var pS;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(pS||(pS={}));var fS;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(fS||(fS={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var mS;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(mS||(mS={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function be(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&A(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RU=EC;class Rd extends Kf{nextDataId(){return Rd.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new T1(this,Ur())}write(e,t,r){this.firstUse&&(this.firstUse=!1,Z().get("IS_NODE")&&Yn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:r,refCount:1}),s}makeTensorInfo(e,t,r){let s;if(t==="string"&&r!=null&&r.length>0&&Vi(r[0])){const o=r.map(a=>Us(a));s=this.write(o,e,t)}else s=this.write(r,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,r,s,o){this.data.set(e,{values:t,dtype:s,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:r}=this.data.get(e);if(t==="complex64"){const s=this.readSync(r.real.dataId),o=this.readSync(r.imag.dataId);return Is(s,o)}return n_(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>Gs(s));return We(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return We(e.shape,e.dtype,t)}makeOutput(e,t,r){return Ur().makeTensorFromTensorInfo(this.makeTensorInfo(t,r,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:r}=this.data.get(e);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Nn();return e(),{kernelMs:Nn()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){be([e],"where");const t=this.readSync(e.dataId);return RU(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Rd.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gS(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const AU={kernelName:Rl,backendName:"cpu",kernelFunc:n=>{const{x:e}=n.inputs,t=n.backend;be(e,"abs");let r=new Float32Array(ne(e.shape));const s=t.data.get(e.dataId).values;return r=gS(s),t.makeOutput(r,e.shape,e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rt(n){return(e,t,r,s,o)=>{const a=Pe(e,t),i=a.length,u=Ee(a),c=ne(a),l=an(o,c),h=e.length,d=t.length,p=Ee(e),f=Ee(t),m=qa(e,a),g=qa(t,a);if(m.length+g.length===0)for(let x=0;x<l.length;++x)l[x]=n(r[x%r.length],s[x%s.length]);else for(let x=0;x<l.length;++x){const y=Ma(x,i,u),b=y.slice(-h);m.forEach(T=>b[T]=0);const v=Wr(b,h,p),w=y.slice(-d);g.forEach(T=>w[T]=0);const C=Wr(w,d,f);l[x]=n(r[v],s[C])}return[l,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wn(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,o=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values,i=t.makeTensorInfo(r.shape,"complex64"),u=t.data.get(i.dataId);return u.complexTensorInfos={real:t.makeTensorInfo(r.shape,"float32",o),imag:t.makeTensorInfo(s.shape,"float32",a)},i}const $U={kernelName:dm,backendName:"cpu",kernelFunc:Wn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ad(n,e,t="float32"){if(t==="complex64"){const s=Ad(n,e,"float32"),o=Ad(n,e,"float32");return Wn({inputs:{real:s,imag:o},backend:n})}const r=un(ne(e),t);return n.makeTensorInfo(e,t,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ns(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const DU={kernelName:uu,backendName:"cpu",kernelFunc:ns};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function na(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.data.get(r.dataId).complexTensorInfos.real,o=t.data.get(s.dataId).values;return t.makeTensorInfo(s.shape,s.dtype,o)}const FU={kernelName:Pm,backendName:"cpu",kernelFunc:na};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(n,e,t,r){if(r==="int32"){const s=Int32Array.from(n);return[e,"int32",s]}if(r==="bool"){const s=Oo([0],t),[o,a]=Rt((i,u)=>i!==u?1:0)(e,[],n,s,"bool");return[a,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${r}`)}function oo(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return ns({inputs:{x:s},backend:t});const l=Ad(t,s.shape,s.dtype),h=oo({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),d=Wn({inputs:{real:h,imag:l},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),d}if(s.dtype==="complex64"){const l=na({inputs:{input:s},backend:t}),h=oo({inputs:{x:l},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(l),h}if(!$1(s.dtype,o)){const l=ns({inputs:{x:s},backend:t});return{dataId:l.dataId,shape:l.shape,dtype:o}}const a=t.data.get(s.dataId).values,[i,u,c]=xS(a,s.shape,s.dtype,o);return t.makeTensorInfo(i,u,c)}const OU={kernelName:Xi,backendName:"cpu",kernelFunc:oo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vt(n,e,t,r){return t==null?({inputs:s,backend:o})=>{const{a,b:i}=s,u=o;be([a,i],n);const c=u.data.get(a.dataId).values,l=u.data.get(i.dataId).values,h=a.dtype==="string"?ks(c):c,d=a.dtype==="string"?ks(l):l,p=r||a.dtype,[f,m]=e(a.shape,i.shape,h,d,p);return u.makeTensorInfo(m,p,f)}:({inputs:s,backend:o})=>{const{a,b:i}=s,u=o;if(a.dtype==="complex64"||i.dtype==="complex64"){const c=oo({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),l=u.data.get(c.dataId),h=l.complexTensorInfos.real,d=l.complexTensorInfos.imag,p=u.data.get(h.dataId).values,f=u.data.get(d.dataId).values,m=oo({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(m.dataId),x=g.complexTensorInfos.real,y=g.complexTensorInfos.imag,b=u.data.get(x.dataId).values,v=u.data.get(y.dataId).values,[w,C,T]=t(a.shape,i.shape,p,f,b,v),S=u.makeTensorInfo(T,"float32",w),k=u.makeTensorInfo(T,"float32",C),N=Wn({inputs:{real:S,imag:k},backend:u});return u.disposeIntermediateTensorInfo(c),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(S),u.disposeIntermediateTensorInfo(k),N}else{const c=u.data.get(a.dataId).values,l=u.data.get(i.dataId).values,h=r||a.dtype,[d,p]=e(a.shape,i.shape,c,l,h);return u.makeTensorInfo(p,h,d)}}}function ry(n){return(e,t,r,s,o,a)=>{const i=Pe(e,t),u=ne(i),c=i.length,l=Ee(i),h=an("float32",u),d=an("float32",u),p=qa(e,i),f=qa(t,i),m=Is(r,s),g=Is(o,a),x=e.length,y=Ee(e),b=t.length,v=Ee(t);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const C=w%m.length,T=w%g.length,S=n(m[C*2],m[C*2+1],g[T*2],g[T*2+1]);h[w]=S.real,d[w]=S.imag}else for(let w=0;w<h.length;w++){const C=Ma(w,c,l),T=C.slice(-x);p.forEach(E=>T[E]=0);const S=Wr(T,x,y),k=C.slice(-b);f.forEach(E=>k[E]=0);const N=Wr(k,b,v),I=n(m[S*2],m[S*2+1],g[N*2],g[N*2+1]);h[w]=I.real,d[w]=I.imag}return[h,d,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yS=Rt((n,e)=>n+e),_U=ry((n,e,t,r)=>({real:n+t,imag:e+r})),ri=Vt(La,yS,_U),MU={kernelName:La,backendName:"cpu",kernelFunc:ri};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sy(n,e,t,r,s){const o=ne(r),a=un(s,t);for(let i=0;i<n.length;i++){const u=n[i];if(u<0)throw new Error("Input x must be non-negative!");u>=s||(o>0?a[u]+=e[i]:a[u]+=1)}return a}function vS(n,e,t,r=!1){const s=n.shape[0],o=n.shape[1],a=We([s,t],e.dtype);for(let i=0;i<s;i++)for(let u=0;u<o;u++){const c=n.get(i,u);if(c<0)throw new Error("Input x must be non-negative!");c>=t||(r?a.set(1,i,c):e.size>0?a.set(a.get(i,c)+e.get(i,u),i,c):a.set(a.get(i,c)+1,i,c))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bS=Rt((n,e)=>n&e),LU=Vt(hm,bS),PU={kernelName:hm,backendName:"cpu",kernelFunc:LU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rs(n){return(e,t,r)=>{const s=kt(t,e.length);for(let o=0;o<e.length;++o)s[o]=n(e[o],r);return s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ot(n,e,t){const r=rs(e);return ao(n,r,t)}function ao(n,e,t){return({inputs:r,attrs:s,backend:o})=>{const{x:a}=r;be(a,n);const i=o,u=i.data.get(a.dataId).values;let c;if(a.dtype==="string"){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");c=ks(u)}else c=u;const l=t||a.dtype,h=e(c,l,s);return i.makeTensorInfo(a.shape,l,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wS=rs(n=>Math.ceil(n)),BU=ao(Yi,wS),zU={kernelName:Yi,backendName:"cpu",kernelFunc:BU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CS(n,e,t,r){const s=kt(t,ne(e));if(r&&t!=="string"){let o=0;n.forEach(a=>{const i=ne(a.shape);s.set(a.vals,o),o+=i})}else{let o=0;n.forEach(a=>{const i=t==="string"?ks(a.vals):a.vals;let u=0;for(let c=0;c<a.shape[0];++c){const l=c*e[1]+o;for(let h=0;h<a.shape[1];++h)s[l+h]=i[u++]}o+=a.shape[1]})}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS=Rt((n,e)=>n===e?1:0),kS=Vt(Gl,IS,null,"bool"),VU={kernelName:Gl,backendName:"cpu",kernelFunc:kS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SS=rs(n=>Math.exp(n)),NS=ao(ru,SS,"float32"),WU={kernelName:ru,backendName:"cpu",kernelFunc:NS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TS=rs(n=>Math.expm1(n)),UU=ao(su,TS),GU={kernelName:su,backendName:"cpu",kernelFunc:UU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ES=rs(n=>Math.floor(n)),HU=ao(ou,ES),qU={kernelName:ou,backendName:"cpu",kernelFunc:HU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RS=Rt((n,e)=>Math.floor(n/e)),jU=Vt(au,RS,null,"int32"),KU={kernelName:au,backendName:"cpu",kernelFunc:jU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AS(n,e,t,r,s,o,a,i,u){const c=We([r,o],t);for(let l=0;l<r;l++){const h=[];let d=0;for(let p=0;p<s;p++){const f=n[l*s+p];d+=f*a[p],h.push(f)}if(d<0||d>=u/o)throw new Error(`Invalid indices: ${h} does not index into ${i}`);for(let p=0;p<o;p++)c.values[l*o+p]=e.get(...e.indexToLoc(d*o+p))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $S(n,e,t){const r=We(t,n.dtype);for(let s=0;s<r.size;++s){const a=r.indexToLoc(s).slice(),i=a[0],u=a[2],c=e.locToIndex([i,u]);a[2]=e.values[c];const l=n.locToIndex(a);0<=l&&l<n.values.length&&(r.values[s]=n.values[l])}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DS=Rt((n,e)=>n>e?1:0),XU=Vt(Kl,DS,null,"bool"),YU={kernelName:Kl,backendName:"cpu",kernelFunc:XU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FS=Rt((n,e)=>n>=e?1:0),QU=Vt(iu,FS,null,"bool"),JU={kernelName:iu,backendName:"cpu",kernelFunc:QU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OS=Rt((n,e)=>n<e?1:0),ZU=Vt(Yl,OS,null,"bool"),eG={kernelName:Yl,backendName:"cpu",kernelFunc:ZU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _S=Rt((n,e)=>n<=e?1:0),tG=Vt(Ql,_S,null,"bool"),nG={kernelName:Ql,backendName:"cpu",kernelFunc:tG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MS(n,e,t){const r=(e-n)/(t-1),s=un(t,"float32");s[0]=n;for(let o=1;o<s.length;o++)s[o]=s[o-1]+r;return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LS=rs(n=>Math.log(n)),rG=ao(du,LS),sG={kernelName:du,backendName:"cpu",kernelFunc:rG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PS(n,e,t,r){const s=an(r,ne(t));for(let o=0;o<s.length;++o){const a=o*e;let i=n[a];for(let u=0;u<e;++u){const c=n[a+u];(Number.isNaN(c)||c>i)&&(i=c)}s[o]=i}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BS=Rt((n,e)=>Math.max(n,e)),oG=Vt(fu,BS),aG={kernelName:fu,backendName:"cpu",kernelFunc:oG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zS=Rt((n,e)=>Math.min(n,e)),iG=Vt(mu,zS),uG={kernelName:mu,backendName:"cpu",kernelFunc:iG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oy=Rt((n,e)=>n*e),cG=ry((n,e,t,r)=>({real:n*t-e*r,imag:n*r+e*t})),$d=Vt(xu,oy,cG),lG={kernelName:xu,backendName:"cpu",kernelFunc:$d};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VS(n,e,t){const r=Ws(-1,t);return oy([],e,r,n,t)}function hG(n){const{inputs:e,backend:t}=n,{x:r}=e;be(r,"neg");const s=t.data.get(r.dataId).values,[o,a]=VS(s,r.shape,r.dtype);return t.makeTensorInfo(a,r.dtype,o)}const dG={kernelName:uh,backendName:"cpu",kernelFunc:hG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WS=Rt((n,e)=>n!==e?1:0),pG=Vt(ch,WS,null,"bool"),fG={kernelName:ch,backendName:"cpu",kernelFunc:pG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ay(n,e,t,r,s){const o=e.length,a=ne(e),i=Ee(e),u=Ee(s),c=an(t,ne(s));for(let l=0;l<a;++l){const h=Ma(l,o,i),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[r[f]];const p=Wr(d,o,u);c[p]=n[l]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dn(n){const{inputs:e,attrs:t,backend:r}=n,{x:s}=e,{perm:o}=t;be(s,"transpose");const a=s.shape.length,i=new Array(a);for(let h=0;h<i.length;h++)i[h]=s.shape[o[h]];const u=r.data.get(s.dataId).values,c=ay(u,s.shape,s.dtype,o,i);return{dataId:r.write(c,i,s.dtype),shape:i,dtype:s.dtype}}const mG={kernelName:Pa,backendName:"cpu",kernelFunc:Dn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function US(n,e,t,r){const[s,o]=Ht(n,r),a=Bn(e,"int32"),i=un(ne(s),a),u=ne(o);for(let c=0;c<i.length;++c){const l=c*u;let h=1;for(let d=0;d<u;++d)h*=t[l+d];i[c]=h}return{outVals:i,outShape:s,outDtype:a}}function gG(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;be(s,"prod");const i=s.shape.length,u=Ve(o,s.shape),c=gt(u,i);let l=u,h=s;const d=[];c!=null&&(h=Dn({inputs:{x:s},backend:t,attrs:{perm:c}}),d.push(h),l=Nt(l.length,i));const p=t.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=US(h.shape,h.dtype,p,l);let x=m;return a&&(x=Dt(m,u)),d.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(x,g,f)}const xG={kernelName:mh,backendName:"cpu",kernelFunc:gG};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yG(n,e,t){n.forEach((r,s)=>{if(r<0||r>=t){const o=Ma(s,e.length,Ee(e)).join(",");throw new Error(`indices[${o}] = ${r} is not in [0, ${t})`)}})}function vG(n,e){for(let t=0;t<n.length;++t){const r=n[t],s=t===n.length-1?e:n[t+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let o=1;o<r.length;++o)if(r[o-1]>r[o])throw new Error("Ragged splits must be sorted in ascending order")}}function bG(n,e,t,r){const s=[];let o=0;const a=e.length-1+t.length,i=new Array(a).fill(null).map(()=>[0]);vG(t,r);let u=1;for(let c=0;c<e.length-1;++c){u*=e[c];const l=e[c+1];for(let h=1;h<u+1;++h)i[c].push(h*l)}for(let c=0;c<n.length;++c){let l=n[c],h=n[c]+1;for(let d=0;d<t.length;++d){const p=t[d],f=d+e.length-1;if(f>=0){const m=i[f],g=m[m.length-1]-p[l];for(let x=l;x<h;++x)i[f].push(p[x+1]+g)}l=p[l],h=p[h]}h!==l&&(s.push([l,h]),o+=h-l)}return{outSplits:i,valueSlices:s,numValues:o}}function wG(n){const e=[];for(let t=0;t<n.length;++t){const r=n[t].length,s=kt("int32",r);e.push(s),n[t].forEach((o,a)=>s[a]=o)}return e}function GS(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let r=e;r<n.length;r++)t[e-1]*=n[r];return t}function CG(n,e,t,r,s,o){const a=GS(e,2)[1],i=GS(o,2)[1];let u=0;for(const c of t)for(let l=c[0];l<c[1];++l){for(let h=0;h<r;++h)s[u*i+h]=n[l*a+h];++u}}function IG(n,e,t,r,s){const o=e.slice();o[0]=s;const a=kt(t,ne(o)),i=n.length,u=i===0?0:i/e[0];return CG(n,e,r,u,a,o),[a,o]}function HS(n,e,t,r,s,o,a,i){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const u=e[0][0]-1;if(yG(o,a,u),r.length===0)throw new Error("params.rank must be nonzero");const c=r[0],{outSplits:l,valueSlices:h,numValues:d}=bG(o,a,n,c),p=wG(l),f=IG(t,r,s,h,d);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qS=2147483647;function jS(n,e,t,r,s,o,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const i=e.length===0,u=s.length===0,c=a.length===0,l=[];i||l.push(e[0]),u||l.push(s[0]),c||l.push(a[0]);for(let g=1;g<l.length;++g)if(l[g]!==l[g-1])throw new Error("starts, limits, and deltas must have the same shape");const h=l.length===0?1:l[0],d=kt("int32",h+1);d[0]=0;for(let g=0;g<h;++g){const x=i?n[0]:n[g],y=u?r[0]:r[g],b=c?o[0]:o[g];if(b===0)throw new Error("Requires delta != 0");let v;if(b>0&&y<x||b<0&&y>x)v=0;else if(v=Math.ceil(Math.abs((y-x)/b)),v>qS)throw new Error(`Requires ((limit - start) / delta) <= ${qS}`);d[g+1]=d[g]+v}const p=d[h],f=kt(t,p);let m=0;for(let g=0;g<h;++g){const x=d[g+1]-d[g];let y=i?n[0]:n[g];const b=c?o[0]:o[g];for(let v=0;v<x;++v)f[m++]=y,y+=b}return[d,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var pr=Tr;class Dd{constructor(e,t,r,s,o,a,i,u,c,l){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=s,this.valuesDType=o,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=u,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=QC(l),this.raggedRank=JC(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===pr.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===pr.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case pr.VALUE_ROWIDS:return Dd.getMaxWidthValueRowID(t);case pr.ROW_SPLITS:return Dd.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${pr[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let r=0;for(let s=0;s<t-1;++s){const o=e[s+1]-e[s];o>r&&(r=o)}return r}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let r=0,s=e[0],o=0;for(let a=1;a<t;++a){const i=e[a];i!==s&&(s=i,o=Math.max(a-r,o),r=a)}return Math.max(t-r,o)}tensorShapeFromTensor(e,t,r=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return XS(e,r)}calculateOutputSize(e){const t=this.valuesShape,r=this.defaultValueShape;ZC(r,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=YC(this.raggedRank,s,t);a[0]<0&&(a[0]=e);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(e,t,r){const s=Math.min(e,r),o=[];let a=0;for(let i=0;i<s;++i,a+=t)o.push(a);for(let i=s;i<e;++i)o.push(-1);return A(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,r,s){const o=e.length,a=[];for(let i=0;i<o-1;++i){const u=e[i+1]-e[i];let c=Math.min(s,u),l=t[i];l===-1&&(c=0);for(let h=0;h<c;++h)a.push(l),l+=r;for(let h=0;h<u-c;++h)a.push(-1)}if(o>0&&a.length!==e[o-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,r,s){const o=e.length,a=[];if(o===0)return[];let i=0,u=e[0];if(u>=t.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${t.length}`);let c=t[u];a.push(c);for(let l=1;l<o;++l){const h=e[l];if(h===u)c>=0&&(++i,i<s?c+=r:c=-1);else{if(i=0,u=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);c=t[h]}a.push(c)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,r,s){const o=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case pr.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,r,s);case pr.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,r,s);default:throw new Error(`Unsupported partition type: ${pr[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case pr.FIRST_DIM_SIZE:return e[0];case pr.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case pr.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${pr[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),r=this.calculateOutputSize(t),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let u=s.length-2;u>=0;--u)s[u]=s[u+1]*r[u+1];const o=XS(r,!1),a=kt(this.valuesDType,ne(o));if(s[0]*r[0]>0){let u=this.calculateFirstParentOutputIndex(t,s[0],r[0]);for(let c=1;c<=this.raggedRank;++c)u=this.calculateOutputIndex(c-1,u,s[c],r[c]);this.setOutput(this.raggedRank,u,a,o)}return[o,a]}setOutput(e,t,r,s){if(r.length===0)return;const o=this.values,a=r;let i=s.slice();i=i.slice(e+1);const u=ne(i),c=t.length;let l=this.defaultValue;if(l.length!==u&&l.length!==1){const f=this.defaultValueShape;Q(()=>{const m=K(l,f);l=Gu(m,i).dataSync()})}let h=0,d=0,p=0;for(let f=0;f<=c;++f){let m=f<c?t[f]:-1;if(m===p){++p;continue}if(d<p){const g=o.subarray(h*u),x=a.subarray(d*u),y=(p-d)*u;KS(x,g,y)}if(f>=c){const g=r.length;m=Math.floor(g/u)}if(m>p)if(this.defaultValue.length===1)a.subarray(p*u,m*u).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=a.slice(p*u);KS(g,l,u),++p}m<0?(h=f+1,d=p):(h=f,d=p,p=d+1)}}}function KS(n,e,t){for(let r=0;r<t;r++)n[r]=e[r]}function XS(n,e){const t=[];for(let r of n){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}t.push(r)}return t}function YS(n,e,t,r,s,o,a,i,u,c){return new Dd(n,e,t,r,s,o,a,i,u,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QS(n,e,t,r){const s=n===e,o=n<e&&t<0,a=e<n&&t>1;if(s||o||a)return un(0,r);const i=Math.abs(Math.ceil((e-n)/t)),u=un(i,r);e<n&&t===1&&(t=-1),u[0]=n;for(let c=1;c<u.length;c++)u[c]=u[c-1]+t;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JS=rs(n=>1/Math.sqrt(n)),kG=ao(Iu,JS),SG={kernelName:Iu,backendName:"cpu",kernelFunc:kG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ra(n,e,t,r,s,o,a,i,u,c){const l=[r/s,s],h=n.values,d=e.values;if(r===0)return We(t,e.dtype);const p=u instanceof Jt?u:We(l,e.dtype);typeof u=="string"||typeof u=="number"?p.values.fill(u):typeof u=="boolean"&&p.values.fill(+u);for(let f=0;f<o;f++){const m=[];let g=0;for(let x=0;x<a;x++){const y=h[f*a+x];m.push(y),g+=y*i[x]}if(g<0||g>=r/s)throw new Error(`Invalid indices: ${m} does not index into ${t}`);for(let x=0;x<s;x++)c?p.values[g*s+x]+=d[f*s+x]:p.values[g*s+x]=e.rank===0?d[0]:d[f*s+x]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NG=rs(n=>1/(1+Math.exp(-n))),ZS=ot(Eu,n=>1/(1+Math.exp(-n))),TG={kernelName:Eu,backendName:"cpu",kernelFunc:ZS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eN(n,e,t,r,s){const o=Xg(r,e,t),a=ne(t),i=Ee(r);if(o){const h=Yg(e,i);return s==="string"?n.slice(h,h+a):n.subarray(h,h+a)}const u=s==="string"?ks(n):n,c=We(r,s,u),l=We(t,s);for(let h=0;h<l.size;++h){const d=l.indexToLoc(h),p=d.map((f,m)=>f+e[m]);l.set(c.get(...p),...d)}return s==="string"?wI(l.values):l.values}function sa(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,size:a}=r;be(s,"slice");const[i,u]=nd(s,o,a);jg(s,i,u);const c=t.data.get(s.dataId).values,l=eN(c,i,u,s.shape,s.dtype);return t.makeTensorInfo(u,s.dtype,l)}const EG={kernelName:wh,backendName:"cpu",kernelFunc:sa};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tN(n,e,t,r,s,o,a){const i=e[0],u=o[0],c=new Array(u),l=new Array(i),h=e[1];if(u===0){if(i!==0)throw new Error(uI(i));const g=kt(t,0),x=kt(s,0);return[g,[0,h],x,c,l]}let d=!0,p=0;const f=new Array(u).fill(0);for(let g=0;g<i;++g){const x=n[g*h];if(x<0)throw new Error(cI(g,x));if(x>=u)throw new Error(lI(g,x,u));++f[x],d=d&&x>=p,p=x}let m=!0;for(let g=0;g<u;++g){const x=f[g]===0;c[g]=x,m=m&&!x,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){const g=n,x=r;for(let y=0;y<i;++y)l[y]=y;return[g,[i,h],x,c,l]}else{const g=f[u-1],x=kt(t,g*h),y=kt(s,g),b=new Array(u).fill(0);for(let v=0;v<i;++v){const w=n[v*h],C=b[w],T=(w===0?0:f[w-1])+C;b[w]++;for(let S=0;S<h;++S)x[T*h+S]=n[v*h+S];y[T]=r[v],l[v]=T}for(let v=0;v<u;++v)if(b[v]===0){const C=v===0?0:f[v-1];x[C*h+0]=v;for(let T=1;T<h;++T)x[C*h+T]=0;y[C]=a}return[x,[g,h],y,c,l]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nN(n,e,t,r,s){const o=ne(r),a=e[0],i=s.length,u=[];let c=1,l=-1;for(let g=0;g<i;++g){const x=s[g];if(x===-1){if(l!==-1)throw new Error(hI(l,g));l=g,u.push(1)}else{if(x<0)throw new Error(dI(g,x));c*=x,u.push(x)}}if(l!==-1){if(c<=0)throw new Error(pI());const g=Math.trunc(o/c);if(c*g!==o)throw new Error(fI(r,u));u[l]=g}if(ne(u)!==o)throw new Error(mI(r,u));const d=r.length,p=[];if(d>0){p[d-1]=1;for(let g=d-2;g>=0;--g)p[g]=p[g+1]*r[g+1]}const f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}const m=kt(t,a*i);for(let g=0;g<a;++g){let x=0;for(let y=0;y<d;++y)x+=n[g*d+y]*p[y];for(let y=0;y<i;++y)m[g*i+y]=Math.trunc(x/f[y]),x%=f[y]}return[m,[a,i],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iy(n,e,t,r,s,o=!1,a=0){const i=r.length,u=[e[0],n.length/e[0]],c=u[1],h=i>0?s[i-1]+1:0;if(h<0)throw new Error(xx());const d=e.slice();d[0]=h;const p=d.reduce((b,v)=>b*v,1),f=kt(t,p);if(i===0)return h>0&&f.fill(a),[f,d];if(h<=0)throw new Error(xx());let m=0,g=1,x=0,y=s[m];for(;;){let b=0;if(g<i){if(b=s[g],y===b){++g;continue}if(y>=b)throw new Error(gI())}if(y<0||y>=h)throw new Error(xI(y,h));y>x&&f.fill(a,x*c,y*c);for(let v=m;v<g;++v){const w=r[v];if(w<0||w>=u[0])throw new Error(yI(v,r[v],u[0]));for(let C=0;C<c;C++)f[y*c+C]+=n[w*c+C]}if(o)for(let v=0;v<c;v++)f[y*c+v]/=g-m;if(m=g,++g,x=y+1,y=b,g>i)break}return x<h&&f.fill(a,x*c,h*c),[f,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RG=rs(n=>Math.sqrt(n)),AG=ot(Au,n=>Math.sqrt(n)),$G={kernelName:Au,backendName:"cpu",kernelFunc:AG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rN=Rt((n,e)=>{const t=n-e;return t*t}),DG=Vt($u,rN),FG={kernelName:$u,backendName:"cpu",kernelFunc:DG};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sN=rs((n,e)=>{const{pattern:t,replaceGlobal:r,rewrite:s}=e;return n.replace(new RegExp(t,r?"g":""),s)}),OG=ao(Wm,sN),_G={kernelName:Wm,backendName:"cpu",kernelFunc:OG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oN(n,e,t,r){const s=We(n,e.dtype);for(let o=0;o<s.size;o++){const a=s.indexToLoc(o),i=new Array(a.length);for(let u=0;u<i.length;u++)i[u]=a[u]*t[u]+r[u];s.set(e.get(...i),...a)}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MG{constructor(e,t,r,s,o,a){this.separator=Us(e),this.nGramWidths=t,this.leftPad=Us(r),this.rightPad=Us(s),this.padWidth=o,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const r=this.getPadWidth(t);return Math.max(0,e+2*r-t+1)}createNGrams(e,t,r,s,o,a){for(let i=0;i<o;++i){const u=this.getPadWidth(a),c=Math.max(0,u-i),l=Math.max(0,u-(o-(i+1))),h=a-(c+l),d=t+(c>0?0:i-u);let p=0;p+=c*this.leftPad.length;for(let y=0;y<h;++y)p+=e[d+y].length;p+=l*this.rightPad.length;const f=c+l+h-1;p+=f*this.separator.length,r[s+i]=new Uint8Array(p);const m=r[s+i];let g=0;const x=y=>y.forEach(b=>m[g++]=b);for(let y=0;y<c;++y)x(this.leftPad),x(this.separator);for(let y=0;y<h-1;++y)x(e[d+y]),x(this.separator);if(h>0){x(e[d+h-1]);for(let y=0;y<l;++y)x(this.separator),x(this.rightPad)}else{for(let y=0;y<l-1;++y)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(e,t){const r=e.length,s=t.length;if(s>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let c=1;c<s;++c){let l=t[c]>=u;if(l=l&&t[c]<=r,!l)throw new Error(`Invalid split value ${t[c]}, must be in [${u}, ${r}]`);u=t[c]}if(u!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${u}`)}const o=s-1,a=kt("int32",s);if(r===0||s===0){const u=new Array(r);for(let c=0;c<=o;++c)a[c]=0;return[u,a]}a[0]=0;for(let u=1;u<=o;++u){const c=t[u]-t[u-1];let l=0;this.nGramWidths.forEach(h=>{l+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&l===0&&(l=1),a[u]=a[u-1]+l}const i=new Array(a[o]);for(let u=0;u<o;++u){const c=t[u];let l=a[u];if(this.nGramWidths.forEach(h=>{const d=t[u+1]-t[u],p=this.getNumNGrams(d,h);this.createNGrams(e,c,i,l,p,h),l+=p}),this.preserveShort&&l===a[u]){const h=t[u+1]-t[u];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(e,c,i,l,1,d)}}return[i,a]}}function aN(n,e,t,r,s,o,a,i){return new MG(t,r,s,o,a,i).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LG(n,e,t,r){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)r.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let a=n.indexOf(o);for(;a!==-1;){const i=n.subarray(0,a);(!t||i.length!==0)&&r.push(i),n=n.subarray(a+1),a=n.indexOf(o)}(!t||n.length!==0)&&r.push(n);return}let s=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const a=n.subarray(s,o);(!t||a.length!==0)&&r.push(a),s=o+1}}function iN(n,e,t){const r=n.length,s=[];let o=0,a=0;const i=new Array(r);for(let d=0;d<r;++d){const p=s.length;LG(n[d],e,t,s);const f=s.length-p;i[d]=f,o+=f,a=Math.max(a,f)}const u=kt("int32",o*2),c=new Array(o),l=[r,a];let h=0;for(let d=0;d<r;++d)for(let p=0;p<i[d];++p)u[h*2]=d,u[h*2+1]=p,c[h]=s[h],++h;return[u,c,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uN(n,e){const t=kt("int32",n.length);for(let r=0;r<n.length;++r)t[r]=I_(n[r]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cN=Rt((n,e)=>n-e),PG=ry((n,e,t,r)=>({real:n-t,imag:e-r})),uy=Vt(Du,cN,PG),BG={kernelName:Du,backendName:"cpu",kernelFunc:uy};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lN(n,e){const t=new Array(n.rank);for(let s=0;s<t.length;s++)t[s]=n.shape[s]*e[s];const r=We(t,n.dtype);for(let s=0;s<r.values.length;++s){const o=r.indexToLoc(s),a=new Array(n.rank);for(let u=0;u<a.length;u++)a[u]=o[u]%n.shape[u];const i=n.locToIndex(a);r.values[s]=n.values[i]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xc=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function hN(n,e,t=0,r=n.length-1){for(;r>t;){if(r-t>600){const i=r-t+1,u=e-t+1,c=Math.log(i),l=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*l*(i-l)/i)*Math.sign(u-i/2),d=Math.max(t,Math.floor(e-u*l/i+h)),p=Math.min(r,Math.floor(e+(i-u)*l/i+h));hN(n,e,d,p)}const s=n[e];let o=t,a=r;for(Da(n,t,e),xc(n[r],s)>0&&Da(n,t,r);o<a;){for(Da(n,o,a),o++,a--;xc(n[o],s)<0;)o=o+1;for(;xc(n[a],s)>0;)a=a-1}xc(n[t],s)===0?Da(n,t,a):(a=a+1,Da(n,a,r)),a<=e&&(t=a+1),e<=a&&(r=a-1)}}function dN(n,e,t,r,s){const o=e[e.length-1],[a,i]=[n.length/o,o],u=an(t,a*r),c=an("int32",a*r);for(let h=0;h<a;h++){const d=h*i,p=n.subarray(d,d+i);let f=new Array(p.length);p.forEach((y,b)=>f[b]={value:y,index:b}),r<f.length&&(hN(f,r),f=f.slice(0,r)),s&&f.sort(xc);const m=h*r,g=u.subarray(m,m+r),x=c.subarray(m,m+r);for(let y=0;y<r;y++)g[y]=f[y].value,x[y]=f[y].index}const l=e.slice();return l[l.length-1]=r,[We(l,t,u),We(l,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pN(n,e,t,r){const s=Ve(e,t)[0],o=[1,t[0],1];for(let f=0;f<s;f++)o[0]*=t[f];o[1]=t[s];for(let f=s+1;f<t.length;f++)o[2]*=t[f];const a=new Map,i=new Int32Array(t[s]),u=new Jt(o,r,n),c=[],l=o[0]===1&&o[2]===1;for(let f=0;f<t[s];f++){let m;if(l)m=n[f].toString();else{const x=[];for(let y=0;y<o[0];y++)for(let b=0;b<o[2];b++)x.push(u.get(y,f,b));m=x.join(",")}const g=a.get(m);if(g!=null)i[f]=g;else{const x=a.size;a.set(m,x),i[f]=x,c.push(f)}}const h=o.slice();h[1]=a.size;const d=new Jt(h,r);c.forEach((f,m)=>{for(let g=0;g<o[0];g++)for(let x=0;x<o[2];x++)d.set(u.get(g,f,x),g,m,x)});const p=t.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zG=Object.freeze(Object.defineProperty({__proto__:null,addImpl:yS,bincountImpl:sy,bincountReduceImpl:vS,bitwiseAndImpl:bS,castImpl:xS,ceilImpl:wS,concatImpl:CS,equalImpl:IS,expImpl:SS,expm1Impl:TS,floorDivImpl:RS,floorImpl:ES,gatherNdImpl:AS,gatherV2Impl:$S,greaterEqualImpl:FS,greaterImpl:DS,lessEqualImpl:_S,lessImpl:OS,linSpaceImpl:MS,logImpl:LS,maxImpl:PS,maximumImpl:BS,minimumImpl:zS,multiplyImpl:oy,negImpl:VS,notEqualImpl:WS,prodImpl:US,raggedGatherImpl:HS,raggedRangeImpl:jS,raggedTensorToTensorImpl:YS,rangeImpl:QS,rsqrtImpl:JS,scatterImpl:ra,sigmoidImpl:NG,simpleAbsImpl:gS,sliceImpl:eN,sparseFillEmptyRowsImpl:tN,sparseReshapeImpl:nN,sparseSegmentReductionImpl:iy,sqrtImpl:RG,squaredDifferenceImpl:rN,staticRegexReplaceImpl:sN,stridedSliceImpl:oN,stringNGramsImpl:aN,stringSplitImpl:iN,stringToHashBucketFastImpl:uN,subImpl:cN,tileImpl:lN,topKImpl:dN,transposeImpl:ay,uniqueImpl:pN},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Dw("cpu",()=>new Rd,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fN=ot(tu,n=>n>=0?n:Math.exp(n)-1),VG={kernelName:tu,backendName:"cpu",kernelFunc:fN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mN(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:o}=r;be([s],"leakyRelu");const a=ne(s.shape),i=t.data.get(s.dataId).values,u=an("float32",a);for(let c=0;c<i.length;c++)u[c]=i[c]<0?o*i[c]:i[c];return t.makeTensorInfo(s.shape,"float32",u)}const WG={kernelName:Xl,backendName:"cpu",kernelFunc:mN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UG=Rt((n,e)=>n<0?e*n:n);function gN(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e;be([r,s],"prelu");const o=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values,[i,u]=UG(r.shape,s.shape,o,a,"float32");return t.makeTensorInfo(u,"float32",i)}const GG={kernelName:fh,backendName:"cpu",kernelFunc:gN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xN=ot(bu,n=>Math.max(0,n)),HG={kernelName:bu,backendName:"cpu",kernelFunc:xN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yN=ot(wu,n=>Math.min(Math.max(0,n),6)),qG={kernelName:wu,backendName:"cpu",kernelFunc:yN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fd(n,e,t,r,s){if(t==="linear")return ns({inputs:{x:e},backend:n});if(t==="relu")return xN({inputs:{x:e},backend:n});if(t==="elu")return fN({inputs:{x:e},backend:n});if(t==="relu6")return yN({inputs:{x:e},backend:n});if(t==="prelu")return gN({inputs:{x:e,alpha:r},backend:n});if(t==="leakyrelu")return mN({inputs:{x:e},backend:n,attrs:{alpha:s}});if(t==="sigmoid")return ZS({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lt(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{shape:o}=r,a=ne(s.shape),i=A1(o,a),u=ne(i);A(a===u,()=>`The new shape (${i}) has ${u} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(s.dataId);const c=t.data.get(s.dataId);if(c.complexTensorInfos!=null){const l=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;l.shape=i,h.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}const jG={kernelName:gh,backendName:"cpu",kernelFunc:lt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vN(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o}=e,{transposeA:a,transposeB:i}=r;be([s,o],"matMul");const u=s.shape.length,c=o.shape.length,l=a?s.shape[u-2]:s.shape[u-1],h=i?o.shape[c-1]:o.shape[c-2],d=a?s.shape[u-1]:s.shape[u-2],p=i?o.shape[c-2]:o.shape[c-1],f=s.shape.slice(0,-2),m=o.shape.slice(0,-2),g=ne(f),x=ne(m),b=Pe(s.shape.slice(0,-2),o.shape.slice(0,-2)).concat([d,p]);A(l===h,()=>`Error in matMul: inner shapes (${l}) and (${h}) of Tensors with shapes ${s.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`);const v=a?[g,l,d]:[g,d,l],w=i?[x,p,h]:[x,h,p],C=lt({inputs:{x:s},backend:t,attrs:{shape:v}}),T=lt({inputs:{x:o},backend:t,attrs:{shape:w}}),S=a?C.shape[1]:C.shape[2],k=a?C.shape[2]:C.shape[1],N=i?T.shape[1]:T.shape[2],I=Math.max(g,x),E=t.data.get(C.dataId).values,F=t.data.get(T.dataId).values,O=Ee(C.shape),D=Ee(T.shape),[M,P,L]=a?[O[0],1,O[1]]:[O[0],O[1],1],[z,W,j]=i?[1,D[1],D[0]]:[D[1],1,D[0]],Y=k*N,J=We([I,k,N],C.dtype),ae=J.values,oe=t.blockSize;for(let ue=0;ue<I;ue++){const he=ue%g,pe=ue%x;for(let de=0;de<k;de+=oe){const Ce=Math.min(de+oe,k);for(let me=0;me<N;me+=oe){const Ne=Math.min(me+oe,N);for(let Te=0;Te<S;Te+=oe){const Me=Math.min(Te+oe,S);for(let Fe=de;Fe<Ce;Fe++)for(let $e=me;$e<Ne;$e++){let Je=0;for(let je=Te;je<Me;je++){const wt=E[he*M+Fe*P+je*L],mt=F[je*z+$e*W+pe*j];Je+=wt*mt}ae[ue*Y+(Fe*N+$e)]+=Je}}}}}return t.disposeIntermediateTensorInfo(C),t.disposeIntermediateTensorInfo(T),t.makeTensorInfo(b,J.dtype,J.values)}const KG={kernelName:Ol,backendName:"cpu",kernelFunc:vN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XG(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=r;let d,p,f;const m=[];d=vN({inputs:{a:s,b:o},attrs:{transposeA:u,transposeB:c},backend:t}),a&&(p=ri({inputs:{a:d,b:a},backend:t}),m.push(d),d=p),l&&(f=Fd(t,d,l,i,h),m.push(d),d=f);for(const x of m)t.disposeIntermediateTensorInfo(x);return d}const YG={kernelName:Rh,backendName:"cpu",kernelFunc:XG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QG=ot(Wi,n=>Math.acos(n)),JG={kernelName:Wi,backendName:"cpu",kernelFunc:QG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZG=ot(Ui,n=>Math.acosh(n)),eH={kernelName:Ui,backendName:"cpu",kernelFunc:ZG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tH(n){const{inputs:e,backend:t}=n,r=e;be(e,"addN");const s=r.map(i=>t.data.get(i.dataId).values),o=We(r[0].shape,r[0].dtype),a=o.values;for(let i=0;i<r.length;i++){const u=s[i];for(let c=0;c<a.length;c++)a[c]+=u[c]}return t.makeTensorInfo(o.shape,o.dtype,o.values)}const nH={kernelName:om,backendName:"cpu",kernelFunc:tH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;be(s,"all");const i=Ve(o,s.shape);let u=i;const c=gt(u,s.shape.length);let l=s;c!=null&&(l=Dn({inputs:{x:s},backend:t,attrs:{perm:c}}),u=Nt(u.length,s.shape.length)),en("all",u,l.shape.length);const[h,d]=Ht(l.shape,u),p=ne(d),f=un(ne(h),l.dtype),m=t.data.get(l.dataId).values;for(let x=0;x<f.length;++x){const y=x*p;let b=m[y];for(let v=0;v<p;++v){const w=m[y+v];b=b&&w}f[x]=b}c!=null&&t.disposeIntermediateTensorInfo(l);const g=t.makeTensorInfo(h,l.dtype,f);if(a){const x=Dt(h,i),y=lt({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),y}return g}const sH={kernelName:am,backendName:"cpu",kernelFunc:rH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;be(s,"any");const i=Ve(o,s.shape);let u=i;const c=gt(u,s.shape.length);let l=s;c!=null&&(l=Dn({inputs:{x:s},backend:t,attrs:{perm:c}}),u=Nt(u.length,s.shape.length)),en("any",u,l.shape.length);const[h,d]=Ht(l.shape,u),p=ne(d),f=un(ne(h),l.dtype),m=t.data.get(l.dataId).values;for(let x=0;x<f.length;++x){const y=x*p;let b=m[y];for(let v=0;v<p;++v){const w=m[y+v];b=b||w}f[x]=b}c!=null&&t.disposeIntermediateTensorInfo(l);const g=t.makeTensorInfo(h,l.dtype,f);if(a){const x=Dt(h,i),y=lt({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),y}return g}const aH={kernelName:im,backendName:"cpu",kernelFunc:oH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;be(s,"argMax");let a=Ve(o,s.shape);const i=gt(a,s.shape.length);let u=s;const c=[];i!=null&&(u=Dn({inputs:{x:s},backend:t,attrs:{perm:i}}),c.push(u),a=Nt(a.length,u.shape.length)),a=[a[0]],en("argMax",a,u.shape.length);const[l,h]=Ht(u.shape,a),d=ne(l),p=un(d,"int32"),f=ne(h),m=t.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let y=m[x],b=0;for(let v=0;v<f;++v){const w=m[x+v];w>y&&(y=w,b=v)}p[g]=b}return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",p)}const uH={kernelName:Al,backendName:"cpu",kernelFunc:iH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;be(s,"argMin");let a=Ve(o,s.shape);const i=gt(a,s.shape.length);let u=s;const c=[];i!=null&&(u=Dn({inputs:{x:s},backend:t,attrs:{perm:i}}),c.push(u),a=Nt(a.length,u.shape.length)),a=[a[0]],en("argMin",a,u.shape.length);const[l,h]=Ht(u.shape,a),d=ne(l),p=un(d,"int32"),f=ne(h),m=t.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let y=m[x],b=0;for(let v=0;v<f;++v){const w=m[x+v];w<y&&(y=w,b=v)}p[g]=b}return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",p)}const lH={kernelName:$l,backendName:"cpu",kernelFunc:cH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hH=ot(Gi,n=>Math.asin(n)),dH={kernelName:Gi,backendName:"cpu",kernelFunc:hH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pH=ot(Hi,n=>Math.asinh(n)),fH={kernelName:Hi,backendName:"cpu",kernelFunc:pH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mH=ot(qi,n=>Math.atan(n)),gH={kernelName:qi,backendName:"cpu",kernelFunc:mH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xH=Rt((n,e)=>Math.atan2(n,e)),yH=Vt(Ki,xH),vH={kernelName:Ki,backendName:"cpu",kernelFunc:yH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bH=ot(ji,n=>Math.atanh(n)),wH={kernelName:ji,backendName:"cpu",kernelFunc:bH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cy(n,e,t,r,s,o){const a=s.strideHeight,i=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,l=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=We(s.outShape,t),g=m.values,x=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],b=s.outShape[3];for(let v=0;v<s.batchSize;++v){const w=v*x,C=v*r[0];for(let T=0;T<s.inChannels;++T)for(let S=0;S<s.outHeight;++S){const k=S*a-d,N=Math.max(0,k),I=Math.min(s.inHeight,l+k),E=w+S*y;for(let F=0;F<s.outWidth;++F){const O=F*i-p,D=Math.max(0,O),M=Math.min(s.inWidth,h+O);let P=f,L=0,z=0;for(let j=N;j<I;j+=u){const Y=C+j*r[1];for(let J=D;J<M;J+=c){const ae=Y+J*r[2],oe=n[ae+T];o==="max"&&oe>P?P=oe:o==="avg"&&(L+=oe,z++)}if(isNaN(P))break}const W=E+F*b+T;g[W]=o==="avg"?L/z:P}}}return m}function bN(n,e,t,r,s=!1,o=!1){const a=We(r.outShape,"int32"),i=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=We(e,t,n);for(let g=0;g<r.batchSize;++g)for(let x=0;x<r.inChannels;++x)for(let y=0;y<r.outHeight;++y){const b=y*i-p;let v=b;for(;v<0;)v+=c;const w=Math.min(r.inHeight,h+b);for(let C=0;C<r.outWidth;++C){const T=C*u-f;let S=T;for(;S<0;)S+=l;const k=Math.min(r.inWidth,d+T);let N=Number.NEGATIVE_INFINITY,I=-1;for(let E=v;E<w;E+=c){const F=E-b;for(let O=S;O<k;O+=l){const D=O-T,M=m.get(g,E,O,x);M>N&&(N=M,s?I=o?((g*r.inHeight+E)*r.inWidth+O)*r.inChannels+x:(E*r.inWidth+O)*r.inChannels+x:I=F*d+D)}}a.set(I,g,y,C,x)}}return a}function wN(n,e,t,r,s,o){const a=s.strideDepth,i=s.strideHeight,u=s.strideWidth,c=s.dilationDepth,l=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,x=s.padInfo.left,y=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=We(s.outShape,t),v=b.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],C=s.outShape[2]*s.outShape[3]*s.outShape[4],T=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let k=0;k<s.batchSize;++k){const N=k*w,I=k*r[0];for(let E=0;E<s.inChannels;++E)for(let F=0;F<s.outDepth;++F){const O=F*a-m;let D=O;for(;D<0;)D+=c;const M=Math.min(s.inDepth,d+O),P=N+F*C;for(let L=0;L<s.outHeight;++L){const z=L*i-g;let W=z;for(;W<0;)W+=l;const j=Math.min(s.inHeight,p+z),Y=P+L*T;for(let J=0;J<s.outWidth;++J){const ae=J*u-x;let oe=ae;for(;oe<0;)oe+=h;const ue=Math.min(s.inWidth,f+ae),he=Y+J*S;let pe=y,de=0,Ce=0;for(let Ne=D;Ne<M;Ne+=c){const Te=I+Ne*r[1];for(let Me=W;Me<j;Me+=l){const Fe=Te+Me*r[2];for(let $e=oe;$e<ue;$e+=h){const Je=Fe+$e*r[3],je=n[Je+E];if(o==="max"&&je>pe?pe=je:o==="avg"&&(de+=je,Ce++),isNaN(pe))break}if(isNaN(pe))break}if(isNaN(pe))break}const me=he+E;v[me]=o==="avg"?de/Math.max(Ce,1):pe}}}}return b}function CH(n,e){const t=We(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,l=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let x=0;x<e.outDepth;++x){const y=x*r-d;let b=y;for(;b<0;)b+=a;const v=Math.min(e.inDepth,c+y);for(let w=0;w<e.outHeight;++w){const C=w*s-p;let T=C;for(;T<0;)T+=i;const S=Math.min(e.inHeight,l+C);for(let k=0;k<e.outWidth;++k){const N=k*o-f;let I=N;for(;I<0;)I+=u;const E=Math.min(e.inWidth,h+N);let F=Number.NEGATIVE_INFINITY,O=-1;for(let D=b;D<v;D+=a){const M=D-y;for(let P=T;P<S;P+=i){const L=P-C;for(let z=I;z<E;z+=u){const W=z-N,j=n.get(m,D,P,z,g);j>=F&&(F=j,O=M*l*h+L*l+W)}}}t.set(O,m,x,w,k,g)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;be(s,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;A(cn(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=ar(s.shape,o,a,c,i,u);let h;if(l.filterWidth===1&&l.filterHeight===1&&et(l.inShape,l.outShape))h=ns({inputs:{x:s},backend:t});else{const d=t.data.get(s.dataId).values,p=Ee(s.shape),f=cy(d,s.shape,s.dtype,p,l,"avg");h=t.makeTensorInfo(l.outShape,s.dtype,f.values)}return h}const kH={kernelName:Dl,backendName:"cpu",kernelFunc:IH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=r;be(s,"avgPool3d");const l=ys(s.shape,o,a,1,i,u,c),h=t.data.get(s.dataId).values,d=wN(h,s.shape,s.dtype,Ee(s.shape),l,"avg");return t.makeTensorInfo(d.shape,"float32",d.values)}const NH={kernelName:Fl,backendName:"cpu",kernelFunc:SH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TH(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:c}=r;be([s,o],"avgPool3DGrad");const l=ys(o.shape,a,i,1,u,c),h=l.strideDepth,d=l.strideHeight,p=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,x=l.dilationDepth,y=l.dilationHeight,b=l.dilationWidth,v=l.effectiveFilterDepth,w=l.effectiveFilterHeight,C=l.effectiveFilterWidth,T=v-1-l.padInfo.front,S=C-1-l.padInfo.left,k=w-1-l.padInfo.top,N=We(o.shape,"float32"),I=1/(f*m*g),E=t.bufferSync(s);for(let F=0;F<l.batchSize;++F)for(let O=0;O<l.inChannels;++O)for(let D=0;D<l.inDepth;++D)for(let M=0;M<l.inHeight;++M)for(let P=0;P<l.inWidth;++P){const L=D-T,z=M-k,W=P-S;let j=0;for(let Y=0;Y<v;Y+=x){const J=(L+Y)/h;if(!(J<0||J>=l.outDepth||Math.floor(J)!==J))for(let ae=0;ae<w;ae+=y){const oe=(z+ae)/d;if(!(oe<0||oe>=l.outHeight||Math.floor(oe)!==oe))for(let ue=0;ue<C;ue+=b){const he=(W+ue)/p;if(he<0||he>=l.outWidth||Math.floor(he)!==he)continue;const pe=E.get(F,J,oe,he,O);j+=pe}}}N.set(j*I,F,D,M,P,O)}return t.makeTensorInfo(N.shape,N.dtype,N.values)}const EH={kernelName:cm,backendName:"cpu",kernelFunc:TH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RH(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o;be([s,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=r,l=ar(a.shape,i,u,1,c),h=l.strideHeight,d=l.strideWidth,p=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,x=l.effectiveFilterHeight,y=l.effectiveFilterWidth,b=y-1-l.padInfo.left,v=x-1-l.padInfo.top,w=We(a.shape,"float32"),C=1/(p*f),T=t.data.get(s.dataId).values,S=We(s.shape,"float32",T);for(let k=0;k<l.batchSize;++k)for(let N=0;N<l.inChannels;++N)for(let I=0;I<l.inHeight;++I)for(let E=0;E<l.inWidth;++E){const F=I-v,O=E-b;let D=0;for(let M=0;M<x;M+=m){const P=(F+M)/h;if(!(P<0||P>=l.outHeight||Math.floor(P)!==P))for(let L=0;L<y;L+=g){const z=(O+L)/d;if(z<0||z>=l.outWidth||Math.floor(z)!==z)continue;const W=S.get(k,P,z,N);D+=W}}w.set(D*C,k,I,E,N)}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const AH={kernelName:um,backendName:"cpu",kernelFunc:RH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $H(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,scale:o,offset:a,mean:i,variance:u}=e;A(i.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),be([s,i,u,o,a],"batchNorm");let{varianceEpsilon:c}=r;c==null&&(c=.001);const l=t.data.get(s.dataId).values,h=t.data.get(i.dataId).values,d=t.data.get(u.dataId).values,p=o?t.data.get(o.dataId).values:new Float32Array([1]),f=a?t.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,x=p.length,y=d.length,b=h.length;let v=0,w=0,C=0,T=0;for(let S=0;S<l.length;++S)m[S]=f[v++]+(l[S]-h[w++])*p[C++]/Math.sqrt(d[T++]+c),v>=g&&(v=0),w>=b&&(w=0),C>=x&&(C=0),T>=y&&(T=0);return t.makeTensorInfo(s.shape,s.dtype,m)}const DH={kernelName:ql,backendName:"cpu",kernelFunc:$H};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,crops:a}=r;be([s],"batchToSpaceND");const i=o.reduce((x,y)=>x*y),u=Ju(s.shape,o,i),c=Zu(u.length,o.length),l=ec(s.shape,o,i),h=tx(a,o.length),d=nx(l,a,o.length),p=lt({inputs:{x:s},backend:t,attrs:{shape:u}}),f=Dn({inputs:{x:p},backend:t,attrs:{perm:c}}),m=lt({inputs:{x:f},backend:t,attrs:{shape:l}}),g=sa({inputs:{x:m},backend:t,attrs:{begin:h,size:d}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const OH={kernelName:_l,backendName:"cpu",kernelFunc:FH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _H(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a}=r,i=t.data.get(s.dataId).values,u=t.data.get(o.dataId).values,c=sy(i,u,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,c)}const MH={kernelName:lm,backendName:"cpu",kernelFunc:_H};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e,o=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values,i=Pe(Array.from(o),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const PH={kernelName:L1,backendName:"cpu",kernelFunc:LH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BH=ot(Qi,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),zH={kernelName:Qi,backendName:"cpu",kernelFunc:BH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VH={kernelName:Ml,backendName:"cpu",kernelFunc:n=>{const{x:e}=n.inputs,t=n.backend,r=new Float32Array(ne(e.shape)),s=t.data.get(e.dataId),o=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,i=t.data.get(o.dataId).values,u=t.data.get(a.dataId).values;for(let c=0;c<i.length;c++){const l=i[c],h=u[c];r[c]=Math.hypot(l,h)}return t.makeOutput(r,e.shape,"float32")}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function si(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.data.get(r.dataId).complexTensorInfos.imag,o=t.data.get(s.dataId).values;return t.makeTensorInfo(s.shape,s.dtype,o)}const WH={kernelName:Am,backendName:"cpu",kernelFunc:si};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oi(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,o=Ve(s,e[0].shape)[0],a=e.map(m=>m.shape);Jg(a,o);let i=Xr(e.map(m=>m.shape),o);if(ne(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(m=>ne(m.shape)>0);if(u.length===1)return ns({inputs:{x:u[0]},backend:t});if(u[0].dtype==="complex64"){const m=u.map(v=>na({inputs:{input:v},backend:t})),g=u.map(v=>si({inputs:{input:v},backend:t})),x=oi({inputs:m,backend:t,attrs:{axis:o}}),y=oi({inputs:g,backend:t,attrs:{axis:o}}),b=Wn({inputs:{real:x,imag:y},backend:t});return m.forEach(v=>t.disposeIntermediateTensorInfo(v)),g.forEach(v=>t.disposeIntermediateTensorInfo(v)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),b}const c=u.map(m=>{const x=[-1,ne(m.shape.slice(o))];return lt({inputs:{x:m},backend:t,attrs:{shape:x}})}),l=c.map(m=>({vals:t.data.get(m.dataId).values,shape:m.shape}));i=Xr(c.map(m=>m.shape),1);const h=c[0].shape[0]===1,d=CS(l,i,e[0].dtype,h),p=Xr(u.map(m=>m.shape),o),f=t.makeTensorInfo(p,e[0].dtype,d);return c.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const UH={kernelName:Ll,backendName:"cpu",kernelFunc:oi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CN(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=r;be([s,o],"conv2d");const h=vs(u),d=Zt(s.shape,o.shape,a,c,i,l,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,x=d.padInfo.left,y=d.padInfo.top,b=d.dataFormat==="channelsLast",v=new Jt(d.outShape,s.dtype),w=Ee(s.shape),C=Ee(o.shape),T=w[0],S=b?w[1]:w[2],k=b?w[2]:1,N=b?1:w[1],I=v.strides[0],E=b?v.strides[1]:v.strides[2],F=b?v.strides[2]:1,O=b?1:v.strides[1],D=t.data.get(s.dataId).values,M=t.data.get(o.dataId).values,P=v.values;for(let L=0;L<d.batchSize;++L){const z=L*T,W=L*I;for(let j=0;j<d.outHeight;++j){const Y=W+j*E,J=j*d.strideHeight-y;for(let ae=0;ae<p;++ae){const oe=J+ae*m;if(oe<0||oe>=d.inHeight)continue;const ue=ae*C[0],he=z+oe*S;for(let pe=0;pe<d.outWidth;++pe){const de=Y+pe*F,Ce=pe*d.strideWidth-x;for(let me=0;me<f;++me){const Ne=Ce+me*g;if(Ne<0||Ne>=d.inWidth)continue;const Te=ue+me*C[1],Me=he+Ne*k;let Fe=Te;for(let $e=0;$e<d.inChannels;++$e){const Je=D[Me+$e*N];for(let je=0;je<d.outChannels;++je)P[de+je*O]+=Je*M[Fe+je];Fe+=d.outChannels}}}}}}return t.makeTensorInfo(v.shape,v.dtype,P)}const GH={kernelName:Pl,backendName:"cpu",kernelFunc:CN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=r;be([s,o],"conv2dBackpropFilter");const h=vs(u),d=Zt(s.shape,l,a,1,i,c,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,x=d.dataFormat==="channelsLast",y=new Jt(d.filterShape,"float32"),b=d.padInfo.left,v=d.padInfo.top,w=t.data.get(s.dataId).values,C=t.data.get(o.dataId).values,T=new Jt(s.shape,s.dtype,w),S=new Jt(o.shape,o.dtype,C);for(let k=0;k<m;++k){const N=Math.max(0,Math.ceil((v-k)/p)),I=Math.min(d.outHeight,(d.inHeight+v-k)/p);for(let E=0;E<g;++E){const F=Math.max(0,Math.ceil((b-E)/f)),O=Math.min(d.outWidth,(d.inWidth+b-E)/f);for(let D=0;D<d.inChannels;++D)for(let M=0;M<d.outChannels;++M){let P=0;for(let L=0;L<d.batchSize;++L)for(let z=N;z<I;++z){const W=k+z*p-v;for(let j=F;j<O;++j){const Y=E+j*f-b;x?P+=T.get(L,W,Y,D)*S.get(L,z,j,M):P+=T.get(L,D,W,Y)*S.get(L,M,z,j)}}y.set(P,k,E,D,M)}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const qH={kernelName:pm,backendName:"cpu",kernelFunc:HH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jH(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{inputShape:a,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=r;be([s,o],"conv2dBackpropInput");const h=Ee(o.shape),d=Ee(s.shape);let p=vs(c);const f=Zt(a,o.shape,i,1,u,l,!1,p),m=new Jt(f.inShape,"float32"),g=m.values,x=t.data.get(s.dataId).values,y=t.data.get(o.dataId).values,[b,v,w]=h,{batchSize:C,filterHeight:T,filterWidth:S,inChannels:k,inHeight:N,inWidth:I,outChannels:E,outHeight:F,outWidth:O,strideHeight:D,strideWidth:M}=f;p=f.dataFormat;const P=T-1-f.padInfo.top,L=S-1-f.padInfo.left,z=p==="channelsLast",W=m.strides[0],j=z?m.strides[1]:m.strides[2],Y=z?m.strides[2]:1,J=z?1:m.strides[1],ae=d[0],oe=z?d[1]:d[2],ue=z?d[2]:1,he=z?1:d[1];for(let pe=0;pe<C;++pe)for(let de=0;de<k;++de)for(let Ce=0;Ce<N;++Ce){const me=Ce-P,Ne=Math.max(0,Math.ceil(me/D)),Te=Math.min(F,(T+me)/D);for(let Me=0;Me<I;++Me){const Fe=Me-L,$e=Math.max(0,Math.ceil(Fe/M)),Je=Math.min(O,(S+Fe)/M);let je=0;for(let mt=Ne;mt<Te;++mt){const rn=mt*D-me;for(let At=$e;At<Je;++At){const pn=At*M-Fe,sn=ae*pe+oe*mt+ue*At,Kt=b*(T-1-rn)+v*(S-1-pn)+w*de;for(let gr=0;gr<E;++gr){const Fn=x[sn+he*gr],Xt=y[Kt+gr];je+=Fn*Xt}}}const wt=W*pe+j*Ce+Y*Me+J*de;g[wt]=je}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const KH={kernelName:Bl,backendName:"cpu",kernelFunc:jH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r;be([s,o],"conv3d");const c=qs(s.shape,o.shape,a,u,i),{filterDepth:l,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=c,x=g.front,y=g.left,b=g.top,v=new Jt(c.outShape,s.dtype),w=t.data.get(s.dataId).values,C=t.data.get(o.dataId).values,T=v.values,S=Ee(s.shape),k=Ee(o.shape);for(let N=0;N<c.batchSize;++N){const I=N*S[0],E=N*v.strides[0];for(let F=0;F<c.outDepth;++F){const O=E+F*v.strides[1],D=F*c.strideDepth-x;for(let M=0;M<l;++M){const P=D+M*p;if(P<0||P>=c.inDepth)continue;const L=M*k[0],z=I+P*S[1];for(let W=0;W<c.outHeight;++W){const j=O+W*v.strides[2],Y=W*c.strideHeight-b;for(let J=0;J<h;++J){const ae=Y+J*f;if(ae<0||ae>=c.inHeight)continue;const oe=L+J*k[1],ue=z+ae*S[2];for(let he=0;he<c.outWidth;++he){const pe=j+he*c.outChannels,de=he*c.strideWidth-y;for(let Ce=0;Ce<d;++Ce){const me=de+Ce*m;if(me<0||me>=c.inWidth)continue;const Ne=oe+Ce*k[2],Te=ue+me*c.inChannels;let Me=Ne;for(let Fe=0;Fe<c.inChannels;++Fe){const $e=w[Te+Fe];for(let Je=0;Je<c.outChannels;++Je)T[pe+Je]+=$e*C[Me+Je];Me+=c.outChannels}}}}}}}}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const YH={kernelName:zl,backendName:"cpu",kernelFunc:XH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:i,filterShape:u}=r;be([s,o],"conv3dBackpropFilterV2");const c=Ee(s.shape),l=Ee(o.shape),h=qs(s.shape,u,a,1,i),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,x=h.filterWidth,y=new Jt(h.filterShape,"float32"),b=y.values,[v,w,C,T]=y.strides,S=t.data.get(o.dataId).values,[k,N,I,E]=l,F=t.data.get(s.dataId).values,[O,D,M,P]=c,L=h.padInfo.front,z=h.padInfo.left,W=h.padInfo.top;for(let j=0;j<m;++j){const Y=Math.max(0,Math.ceil((L-j)/d)),J=Math.min(h.outDepth,(h.inDepth+L-j)/d),ae=j*v;for(let oe=0;oe<g;++oe){const ue=Math.max(0,Math.ceil((W-oe)/p)),he=Math.min(h.outHeight,(h.inHeight+W-oe)/p),pe=oe*w+ae;for(let de=0;de<x;++de){const Ce=Math.max(0,Math.ceil((z-de)/f)),me=Math.min(h.outWidth,(h.inWidth+z-de)/f),Ne=de*C+pe;for(let Te=0;Te<h.inChannels;++Te){const Me=Te*T+Ne;for(let Fe=0;Fe<h.outChannels;++Fe){let $e=0;for(let Je=0;Je<h.batchSize;++Je){const je=Je*O,wt=Je*k;for(let mt=Y;mt<J;++mt){const At=(j+mt*d-L)*D+je,pn=mt*N+wt;for(let sn=ue;sn<he;++sn){const gr=(oe+sn*p-W)*M+At,Fn=sn*I+pn;for(let Xt=Ce;Xt<me;++Xt){const Ac=(de+Xt*f-z)*P+gr,$c=Xt*E+Fn;$e+=F[Ac+Te]*S[$c+Fe]}}}}b[Me+Fe]=$e}}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const JH={kernelName:fm,backendName:"cpu",kernelFunc:QH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZH(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{pad:a,strides:i,inputShape:u}=r;be([s],"conv3dBackpropInputV2");const c=Ee(s.shape),l=Ee(o.shape),h=qs(u,o.shape,i,1,a),d=new Jt(h.inShape,"float32"),p=d.values,[f,m,g,x]=d.strides,y=t.data.get(s.dataId).values,[b,v,w,C]=c,T=t.data.get(o.dataId).values,[S,k,N,I]=l,{batchSize:E,filterDepth:F,filterHeight:O,filterWidth:D,inChannels:M,inDepth:P,inHeight:L,inWidth:z,outChannels:W,outDepth:j,outHeight:Y,outWidth:J,strideDepth:ae,strideHeight:oe,strideWidth:ue}=h,he=F-1-h.padInfo.front,pe=O-1-h.padInfo.top,de=D-1-h.padInfo.left;for(let Ce=0;Ce<E;++Ce)for(let me=0;me<M;++me)for(let Ne=0;Ne<P;++Ne){const Te=Ne-he,Me=Math.max(0,Math.ceil(Te/ae)),Fe=Math.min(j,(F+Te)/ae);for(let $e=0;$e<L;++$e){const Je=$e-pe,je=Math.max(0,Math.ceil(Je/oe)),wt=Math.min(Y,(O+Je)/oe);for(let mt=0;mt<z;++mt){const rn=mt-de,At=Math.max(0,Math.ceil(rn/ue)),pn=Math.min(J,(D+rn)/ue);let sn=0;for(let Kt=Me;Kt<Fe;++Kt){const gr=Kt*ae-Te;for(let Fn=je;Fn<wt;++Fn){const Xt=Fn*oe-Je;for(let Es=At;Es<pn;++Es){const Ac=Es*ue-rn,$c=b*Ce+v*Kt+w*Fn+C*Es,Fy=S*(F-1-gr)+k*(O-1-Xt)+N*(D-1-Ac)+I*me;for(let lo=0;lo<W;++lo){const Dc=y[$c+lo],Fc=T[Fy+lo];sn+=Dc*Fc}}}}p[f*Ce+m*Ne+g*$e+x*mt+me]=sn}}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}const eq={kernelName:mm,backendName:"cpu",kernelFunc:ZH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tq=ot(Ji,n=>Math.cos(n)),nq={kernelName:Ji,backendName:"cpu",kernelFunc:tq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rq=ot(Zi,n=>Math.cosh(n)),sq={kernelName:Zi,backendName:"cpu",kernelFunc:rq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oq(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:o,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:c}=r,[l,h,d,p]=s.shape,f=o.shape[0],[m,g]=i,x=We([f,m,g,p],"float32"),y=t.data.get(o.dataId).values,b=t.data.get(a.dataId).values,v=t.data.get(s.dataId).values,w=Ee(s.shape),C=Ee(x.shape);for(let T=0;T<f;T++){const S=T*4,k=y[S],N=y[S+1],I=y[S+2],E=y[S+3],F=b[T];if(F>=l)continue;const O=m>1?(I-k)*(h-1)/(m-1):0,D=g>1?(E-N)*(d-1)/(g-1):0;for(let M=0;M<m;M++){const P=m>1?k*(h-1)+M*O:.5*(k+I)*(h-1);if(P<0||P>h-1){for(let L=0;L<g;L++)for(let z=0;z<p;z++){const W=z+L*C[2]+M*C[1]+T*C[0];x.values[W]=c}continue}if(u==="bilinear"){const L=Math.floor(P),z=Math.ceil(P),W=P-L;for(let j=0;j<g;j++){const Y=g>1?N*(d-1)+j*D:.5*(N+E)*(d-1);if(Y<0||Y>d-1){for(let ue=0;ue<p;ue++){const he=ue+j*C[2]+M*C[1]+T*C[0];x.values[he]=c}continue}const J=Math.floor(Y),ae=Math.ceil(Y),oe=Y-J;for(let ue=0;ue<p;ue++){let he=ue+J*w[2]+L*w[1]+F*w[0];const pe=v[he];he=ue+ae*w[2]+L*w[1]+F*w[0];const de=v[he];he=ue+J*w[2]+z*w[1]+F*w[0];const Ce=v[he];he=ue+ae*w[2]+z*w[1]+F*w[0];const me=v[he],Ne=pe+(de-pe)*oe,Te=Ce+(me-Ce)*oe;he=ue+j*C[2]+M*C[1]+T*C[0],x.values[he]=Ne+(Te-Ne)*W}}}else for(let L=0;L<g;++L){const z=g>1?N*(d-1)+L*D:.5*(N+E)*(d-1);if(z<0||z>d-1){for(let Y=0;Y<p;Y++){const J=Y+L*C[2]+M*C[1]+T*C[0];x.values[J]=c}continue}const W=Math.round(z),j=Math.round(P);for(let Y=0;Y<p;Y++){const J=Y+W*w[2]+j*w[1]+F*w[0],ae=Y+L*C[2]+M*C[1]+T*C[0];x.values[ae]=v[J]}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const aq={kernelName:xm,backendName:"cpu",kernelFunc:oq};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iq(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;be(s,"cumprod");const u=gt([o],s.shape.length);let c=s;u!=null&&(c=Dn({inputs:{x:s},backend:t,attrs:{perm:u}}));const l=Nt(1,s.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const h=Bn(c.dtype,"int32"),d=tm(ne(c.shape),h),p=t.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(x,y)=>x+f-y-1:(x,y)=>x+y;for(let x=0;x<p.length;x+=f)for(let y=0;y<f;y++){const b=m(x,y);if(y===0)d[b]=a?1:p[b];else{const v=m(x,y-1);d[b]=a?p[v]*d[v]:p[b]*d[v]}}const g=t.makeTensorInfo(c.shape,h,d);if(u!=null){const x=js(u),y=Dn({inputs:{x:g},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(c),y}return g}const uq={kernelName:gm,backendName:"cpu",kernelFunc:iq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cq(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;be(s,"cumsum");const u=gt([o],s.shape.length);let c=s;u!=null&&(c=Dn({inputs:{x:s},backend:t,attrs:{perm:u}}));const l=Nt(1,s.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const h=Bn(c.dtype,"int32"),d=un(ne(c.shape),h),p=t.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=i?(x,y)=>x+f-y-1:(x,y)=>x+y;for(let x=0;x<p.length;x+=f)for(let y=0;y<f;y++){const b=m(x,y);if(y===0)d[b]=a?0:p[b];else{const v=m(x,y-1);d[b]=a?p[v]+d[v]:p[b]+d[v]}}const g=t.makeTensorInfo(c.shape,h,d);if(u!=null){const x=js(u),y=Dn({inputs:{x:g},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(c),y}return g}const lq={kernelName:Vl,backendName:"cpu",kernelFunc:cq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hq(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a,binaryOutput:i}=r;if(s.shape.length===1){const u=t.data.get(s.dataId).values,c=t.data.get(o.dataId).values,l=sy(u,c,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,l)}else if(s.shape.length===2){const u=t.bufferSync(s),c=t.bufferSync(o),l=vS(u,c,a,i);return t.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const dq={kernelName:ym,backendName:"cpu",kernelFunc:hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pq(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:o,dataFormat:a}=r;A(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const i=s.shape[0],u=s.shape[1],c=s.shape[2],l=s.shape[3],h=u*o,d=c*o,p=l/(o*o),f=t.data.get(s.dataId).values,m=new Float32Array(i*h*d*p);let g=0;for(let x=0;x<i;++x)for(let y=0;y<h;++y){const b=Math.floor(y/o),v=y%o;for(let w=0;w<d;++w){const C=Math.floor(w/o),T=w%o,S=(v*o+T)*p;for(let k=0;k<p;++k){const I=k+S+l*(C+c*(b+u*x));m[g++]=f[I]}}}return t.makeTensorInfo([i,h,d,p],s.dtype,m)}const fq={kernelName:vm,backendName:"cpu",kernelFunc:pq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IN(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:c}=r;be([s,o],"depthwiseConv2DNative");const l=Ee(s.shape),h=Ee(o.shape);let d=u;d==null&&(d=[1,1]),A(cn(a,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const p=Zt(s.shape,o.shape,a,d,i,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:x,padInfo:y}=p,b=y.left,v=y.top,w=p.outChannels/p.inChannels,C=new Jt(p.outShape,s.dtype),T=t.data.get(s.dataId).values,S=t.data.get(o.dataId).values,k=C.values;for(let N=0;N<p.batchSize;++N){const I=N*l[0],E=N*C.strides[0];for(let F=0;F<p.outHeight;++F){const O=E+F*C.strides[1],D=F*p.strideHeight-v;for(let M=0;M<f;++M){const P=D+M*g;if(P<0||P>=p.inHeight)continue;const L=M*h[0],z=I+P*l[1];for(let W=0;W<p.outWidth;++W){const j=O+W*C.strides[2],Y=W*p.strideWidth-b;for(let J=0;J<m;++J){const ae=Y+J*x;if(ae<0||ae>=p.inWidth)continue;const oe=L+J*h[1],ue=z+ae*p.inChannels;let he=j,pe=oe;for(let de=0;de<p.inChannels;++de){const Ce=T[ue+de];for(let me=0;me<w;++me)k[he+me]+=Ce*S[pe+me];he+=w,pe+=w}}}}}}return t.makeTensorInfo(C.shape,C.dtype,C.values)}const mq={kernelName:Wl,backendName:"cpu",kernelFunc:IN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gq(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=r;be([s,o],"depthwiseConv2dNativeBackpropFilter");const h=Zt(s.shape,l,a,i,u,c,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Jt(h.filterShape,"float32"),x=h.padInfo.left,y=h.padInfo.top,b=h.outChannels/h.inChannels,v=t.data.get(s.dataId).values,w=new Jt(s.shape,s.dtype,v),C=t.data.get(o.dataId).values,T=new Jt(o.shape,o.dtype,C);for(let S=0;S<f;++S){const k=Math.max(0,Math.ceil((y-S)/d)),N=Math.min(h.outHeight,(h.inHeight+y-S)/d);for(let I=0;I<m;++I){const E=Math.max(0,Math.ceil((x-I)/p)),F=Math.min(h.outWidth,(h.inWidth+x-I)/p);for(let O=0;O<h.outChannels;++O){const D=Math.trunc(O/b),M=O%b;let P=0;for(let L=0;L<h.batchSize;++L)for(let z=k;z<N;++z){const W=S+z*d-y;for(let j=E;j<F;++j){const Y=I+j*p-x;P+=w.get(L,W,Y,D)*T.get(L,z,j,O)}}g.set(P,S,I,D,M)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const xq={kernelName:bm,backendName:"cpu",kernelFunc:gq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yq(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=r;be([s,o],"depthwiseConv2DNativeBackpropInput");const h=Ee(s.shape),d=Ee(o.shape),p=Zt(l,o.shape,a,i,u,c,!0),f=new Jt(p.inShape,"float32"),m=f.values,[g,x,y]=f.strides,b=t.data.get(s.dataId).values,[v,w,C]=h,T=t.data.get(o.dataId).values,[S,k,N]=d,{batchSize:I,filterHeight:E,filterWidth:F,inChannels:O,inHeight:D,inWidth:M,outChannels:P,outHeight:L,outWidth:z,strideHeight:W,strideWidth:j}=p,Y=E-1-p.padInfo.top,J=F-1-p.padInfo.left,ae=P/O;for(let oe=0;oe<I;++oe)for(let ue=0;ue<O;++ue)for(let he=0;he<D;++he){const pe=he-Y,de=Math.max(0,Math.ceil(pe/W)),Ce=Math.min(L,(E+pe)/W);for(let me=0;me<M;++me){const Ne=me-J,Te=Math.max(0,Math.ceil(Ne/j)),Me=Math.min(z,(F+Ne)/j);let Fe=0;for(let $e=de;$e<Ce;++$e){const Je=$e*W-pe;for(let je=Te;je<Me;++je){const wt=je*j-Ne,mt=v*oe+w*$e+C*je,rn=S*(E-1-Je)+k*(F-1-wt)+N*ue;for(let At=0;At<ae;++At){const pn=ue*ae+At,sn=b[mt+pn],Kt=T[rn+At];Fe+=sn*Kt}}}m[g*oe+x*he+y*me+ue]=Fe}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const vq={kernelName:wm,backendName:"cpu",kernelFunc:yq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bq(n){const{inputs:e,backend:t}=n,{x:r}=e,s=ne(r.shape),o=t.data.get(r.dataId).values,a=We([s,s],r.dtype),i=a.values;for(let c=0;c<o.length;c++)i[c*s+c]=o[c];const u=[...r.shape,...r.shape];return t.makeTensorInfo(u,a.dtype,a.values)}const wq={kernelName:P1,backendName:"cpu",kernelFunc:bq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cq={kernelName:Ul,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,filter:s}=n,{strides:o,pad:a,dilations:i}=t,u=e,c=u.data.get(r.dataId).values,l=r.shape.length,h=u.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:x,outWidth:y,padInfo:b,strideHeight:v,strideWidth:w,filterHeight:C,filterWidth:T,dilationHeight:S,dilationWidth:k,outShape:N}=Vu(r.shape,s.shape,o,a,"NHWC",i),I=ne(N),E=N.length,F=kt(r.dtype,I);for(let D=0;D<p;++D)for(let M=0;M<x;++M){const P=M*v-b.top;for(let L=0;L<y;++L){const z=L*w-b.left;for(let W=0;W<g;++W){let j=Number.MIN_SAFE_INTEGER;for(let J=0;J<C;++J){const ae=P+J*S;if(ae>=0&&ae<f)for(let oe=0;oe<T;++oe){const ue=z+oe*k;if(ue>=0&&ue<m){const he=Wr([D,ae,ue,W],l,Ee(r.shape)),pe=Wr([J,oe,W],d,Ee(s.shape)),de=c[he]+h[pe];de>j&&(j=de)}}}const Y=Wr([D,M,L,W],E,Ee(N));F[Y]=j}}}return{dataId:u.write(Oo(F,r.dtype),N,r.dtype),shape:N,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iq={kernelName:Im,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,filter:s,dy:o}=n,{strides:a,pad:i,dilations:u}=t,c=e,l=Ir(r.shape,c.data.get(r.dataId).values),h=Ir(s.shape,c.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:y,strideHeight:b,strideWidth:v,filterHeight:w,filterWidth:C,dilationHeight:T,dilationWidth:S,outShape:k}=Vu(r.shape,s.shape,a,i,"NHWC",u);A(o.rank===k.length,()=>`Error in ${Im}, dy must have the same rank as output ${k.length}, but got ${o.rank}`);const N=Ir(k,c.data.get(o.dataId).values),I=F1(s.shape,s.dtype);for(let F=0;F<d;++F)for(let O=0;O<g;++O){const D=O*b-y.top;for(let M=0;M<x;++M){const P=M*v-y.left;for(let L=0;L<m;++L){let z=Number.MIN_SAFE_INTEGER,W=0,j=0;for(let Y=0;Y<w;++Y){const J=D+Y*T;if(J>=0&&J<p)for(let ae=0;ae<C;++ae){const oe=P+ae*S;if(oe>=0&&oe<f){const ue=l[F][J][oe][L]+h[Y][ae][L];ue>z&&(z=ue,W=Y,j=ae)}}}I[W][j][L]+=N[F][O][M][L]}}}return{dataId:c.write(Oo(I,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kq={kernelName:Cm,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,filter:s,dy:o}=n,{strides:a,pad:i,dilations:u}=t,c=e,l=Ir(r.shape,c.data.get(r.dataId).values),h=Ir(s.shape,c.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:x,padInfo:y,strideHeight:b,strideWidth:v,filterHeight:w,filterWidth:C,dilationHeight:T,dilationWidth:S,outShape:k}=Vu(r.shape,s.shape,a,i,"NHWC",u);A(o.rank===k.length,()=>`Error in ${Cm}, dy must have the same rank as output ${k.length}, but got ${o.rank}`);const N=Ir(k,c.data.get(o.dataId).values),I=F1(r.shape,r.dtype);for(let F=0;F<d;++F)for(let O=0;O<g;++O){const D=O*b-y.top;for(let M=0;M<x;++M){const P=M*v-y.left;for(let L=0;L<m;++L){let z=Number.MIN_SAFE_INTEGER,W=D<0?0:D,j=P<0?0:P;for(let Y=0;Y<w;++Y){const J=D+Y*T;if(J>=0&&J<p)for(let ae=0;ae<C;++ae){const oe=P+ae*S;if(oe>=0&&oe<f){const ue=l[F][J][oe][L]+h[Y][ae][L];ue>z&&(z=ue,W=J,j=oe)}}}I[F][W][j][L]+=N[F][O][M][L]}}}return{dataId:c.write(Oo(I,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sq(n){const{inputs:e,backend:t,attrs:r}=n,{image:s}=e,{canvas:o,options:a}=r,{contextOptions:i,imageOptions:u}=a||{},c=(u==null?void 0:u.alpha)||1,l=(i==null?void 0:i.contextType)||"2d";if(l!=="2d")throw new Error(`Context type ${i.contextType} is not supported by the CPU backend.`);const h=o.getContext(l,(i==null?void 0:i.contextAttributes)||{});if(h==null)throw new Error(`Could not get the context with ${l} type.`);const[d,p]=s.shape.slice(0,2),f=s.shape.length===2?1:s.shape[2],m=t.data.get(s.dataId).values,g=s.dtype==="float32"?255:1,x=new Uint8ClampedArray(p*d*4);for(let b=0;b<d*p;++b){const v=[0,0,0,255*c];for(let C=0;C<f;C++){const T=m[b*f+C];if(s.dtype==="float32"){if(T<0||T>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${T}.`)}else if(s.dtype==="int32"&&(T<0||T>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${T}.`);f===1?(v[0]=T*g,v[1]=T*g,v[2]=T*g):v[C]=T*g}const w=b*4;x[w+0]=Math.round(v[0]),x[w+1]=Math.round(v[1]),x[w+2]=Math.round(v[2]),x[w+3]=Math.round(v[3])}o.width=p,o.height=d;const y=new ImageData(x,p,d);return h.putImageData(y,0,0),s}const Nq={kernelName:l_,backendName:"cpu",kernelFunc:Sq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yc(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;be(s,"sum");let i;s.dtype==="bool"?i=oo({inputs:{x:s},backend:t,attrs:{dtype:"int32"}}):i=ns({inputs:{x:s},backend:t});const u=i.shape.length,c=Ve(o,i.shape),l=gt(c,u);let h=c,d=i;l!=null&&(d=Dn({inputs:{x:i},backend:t,attrs:{perm:l}}),h=Nt(h.length,u)),en("sum",h,d.shape.length);const[p,f]=Ht(d.shape,h),m=Bn(d.dtype,"int32");let g=Ad(t,p,m);const x=ne(f),y=t.data.get(g.dataId).values,b=t.data.get(d.dataId).values;for(let v=0;v<y.length;++v){const w=v*x;let C=0;for(let T=0;T<x;++T)C+=b[w+T];y[v]=C}if(a){const v=Dt(g.shape,c),w=g;g=lt({inputs:{x:g},backend:t,attrs:{shape:v}}),t.disposeIntermediateTensorInfo(w)}return t.disposeIntermediateTensorInfo(i),l!=null&&t.disposeIntermediateTensorInfo(d),g}const Tq={kernelName:Ch,backendName:"cpu",kernelFunc:yc};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eq(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,o=e,{allDims:a,summedDims:i,idDims:u}=hx(s,o.length);px(a.length,u,o);const{path:c,steps:l}=fx(i,u),h=l.length;let d=null,p=a.length;const f=[];for(let m=0;m<h;++m){for(const g of l[m]){const{permutationIndices:x,expandDims:y}=dx(p,u[g]);let b;mx(x)?b=o[g]:(b=Dn({inputs:{x:o[g]},backend:t,attrs:{perm:x}}),f.push(b));const v=b.shape.slice();for(let w=0;w<y.length;++w)v.splice(y[w],0,1);et(b.shape,v)||(b=lt({inputs:{x:b},backend:t,attrs:{shape:v}}),f.push(b)),d===null?d=b:(d=$d({inputs:{a:b,b:d},backend:t}),f.push(d))}m<h-1&&(c[m]>=0&&(d=yc({inputs:{x:d},backend:t,attrs:{axis:c[m]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const Rq={kernelName:km,backendName:"cpu",kernelFunc:Eq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aq(n){const{inputs:e,backend:t}=n,{dy:r,y:s}=e;be([r,s],"eluGrad");const o=new Float32Array(ne(s.shape)),a=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values;for(let u=0;u<a.length;++u){const c=a[u];c>=0?o[u]=i[u]:o[u]=i[u]*(c+1)}return t.makeTensorInfo(s.shape,"float32",o)}const $q={kernelName:Sm,backendName:"cpu",kernelFunc:Aq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dq=rx,Fq=sx,Oq=ox,_q=ax,Mq=ix,Lq=ux,Pq=ot(nu,n=>{const e=Math.sign(n),t=Math.abs(n),r=1/(1+Dq*t);return e*(1-((((Lq*r+Mq)*r+_q)*r+Oq)*r+Fq)*r*Math.exp(-t*t))}),Bq={kernelName:nu,backendName:"cpu",kernelFunc:Pq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Od(n){const{inputs:e,backend:t,attrs:r}=n,{input:s}=e,{dim:o}=r,a=s.shape.length,i=s.shape.slice();let u=o;return o<0&&(A(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),lt({inputs:{x:s},backend:t,attrs:{shape:i}})}const zq={kernelName:Hl,backendName:"cpu",kernelFunc:Od};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vq=Rt((n,e)=>n/e),ly=Vt(eu,Vq),hy={kernelName:eu,backendName:"cpu",kernelFunc:ly};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kN(n,e,t){const r=n.shape,s=r[0],o=r[1],a=t.data.get(n.dataId),i=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,c=[s,o],l=ne(c),h=an("float32",l),d=an("float32",l);for(let g=0;g<s;g++){const x=sa({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,o]}}),y=sa({inputs:{x:u},backend:t,attrs:{begin:[g,0],size:[1,o]}}),b=Wn({inputs:{real:x,imag:y},backend:t}),{real:v,imag:w}=Wq(b,e,t),C=Is(v,w);for(let T=0;T<o;T++){const S=cx(C,T);h[g*o+T]=S.real,d[g*o+T]=S.imag}t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b)}const p=t.makeTensorInfo(c,"float32",h),f=t.makeTensorInfo(c,"float32",d),m=Wn({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}function Wq(n,e,t){const r=ne(n.shape),s=t.data.get(n.dataId),o=t.data.get(s.complexTensorInfos.real.dataId).values,a=t.data.get(s.complexTensorInfos.imag.dataId).values;if(Uq(r)){const i=dy(o,a,r,e,t),u=[n.shape[0],n.shape[1]];if(e){const c=t.makeTensorInfo(u,"float32",i.real),l=t.makeTensorInfo(u,"float32",i.imag),h=t.makeTensorInfo([],"float32",Ws(r,"float32")),d=ns({inputs:{x:h},backend:t}),p=hy.kernelFunc({inputs:{a:c,b:h},backend:t}),f=hy.kernelFunc({inputs:{a:l,b:d},backend:t}),m=t.data.get(p.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{const i=Is(o,a),u=Gq(i,r,e);return eI(u)}}function Uq(n){return(n&n-1)===0}function dy(n,e,t,r,s){if(t===1)return{real:n,imag:e};const o=Is(n,e),a=t/2,i=tI(o),u=i.real,c=i.imag,l=[u.length],h=s.makeTensorInfo(l,"float32",u),d=s.makeTensorInfo(l,"float32",c),p=Wn({inputs:{real:h,imag:d},backend:s}),f=nI(o),m=f.real,g=f.imag,x=[m.length],y=s.makeTensorInfo(x,"float32",m),b=s.makeTensorInfo(x,"float32",g),v=Wn({inputs:{real:y,imag:b},backend:s}),w=dy(u,c,a,r,s),C=w.real,T=w.imag,S=[C.length],k=s.makeTensorInfo(S,"float32",C),N=s.makeTensorInfo(S,"float32",T),I=Wn({inputs:{real:k,imag:N},backend:s}),E=dy(m,g,a,r,s),F=E.real,O=E.imag,D=[F.length],M=s.makeTensorInfo(D,"float32",F),P=s.makeTensorInfo(D,"float32",O),L=Wn({inputs:{real:M,imag:P},backend:s}),z=sI(t,r),W=[z.real.length],j=s.makeTensorInfo(W,"float32",z.real),Y=s.makeTensorInfo(W,"float32",z.imag),J=Wn({inputs:{real:j,imag:Y},backend:s}),ae=$d({inputs:{a:J,b:L},backend:s}),oe=ri({inputs:{a:I,b:ae},backend:s}),ue=uy({inputs:{a:I,b:ae},backend:s}),he=na({inputs:{input:oe},backend:s}),pe=na({inputs:{input:ue},backend:s}),de=si({inputs:{input:oe},backend:s}),Ce=si({inputs:{input:ue},backend:s}),me=oi({inputs:[he,pe],backend:s,attrs:{axis:0}}),Ne=oi({inputs:[de,Ce],backend:s,attrs:{axis:0}}),Te=s.data.get(me.dataId).values,Me=s.data.get(Ne.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(k),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(Y),s.disposeIntermediateTensorInfo(J),s.disposeIntermediateTensorInfo(ae),s.disposeIntermediateTensorInfo(oe),s.disposeIntermediateTensorInfo(ue),s.disposeIntermediateTensorInfo(he),s.disposeIntermediateTensorInfo(de),s.disposeIntermediateTensorInfo(pe),s.disposeIntermediateTensorInfo(Ce),s.disposeIntermediateTensorInfo(me),s.disposeIntermediateTensorInfo(Ne),{real:Te,imag:Me}}function Gq(n,e,t){const r=new Float32Array(e*2);for(let s=0;s<e;s++){let o=0,a=0;for(let i=0;i<e;i++){const u=oI(s*i,e,t),c=cx(n,i);o+=c.real*u.real-c.imag*u.imag,a+=c.real*u.imag+c.imag*u.real}t&&(o/=e,a/=e),rI(r,o,a,s)}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hq(n){const{inputs:e,backend:t}=n,{input:r}=e,s=ne(r.shape),o=r.shape[r.shape.length-1],a=s/o,i=lt({inputs:{x:r},backend:t,attrs:{shape:[a,o]}}),u=kN(i,!1,t),c=lt({inputs:{x:u},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),c}const qq={kernelName:Nm,backendName:"cpu",kernelFunc:Hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function py(n){const{backend:e,attrs:t}=n,{shape:r,value:s,dtype:o}=t,a=o||_a(s),i=kt(a,ne(r));return Kq(i,s,a),e.makeTensorInfo(r,a,i)}const jq={kernelName:Tm,backendName:"cpu",kernelFunc:py};function Kq(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xq={kernelName:Em,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,s=t,o=an(r.dtype,ne(r.shape)),[a,i,u,c]=r.shape,l=s.data.get(r.dataId).values;for(let d=0;d<a;d++){const p=d*u*i*c;for(let f=0;f<i;f++){const m=f*(u*c);for(let g=0;g<u;g++){const x=g*c;for(let y=0;y<c;y++){const b=Math.round(u-g-1),v=p+m+x+y;let w=l[v];if(b>=0&&b<u){const C=b*c,T=p+m+C+y;w=l[T]}o[v]=w}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yq(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=CN({inputs:{x:s,filter:o},backend:t,attrs:{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d}});if(a){const g=m;if(l==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const x=lt({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});m=ri({inputs:{a:m,b:x},backend:t}),t.disposeIntermediateTensorInfo(x)}else m=ri({inputs:{a:m,b:a},backend:t});t.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(l==="NCHW"&&p==="prelu"&&i.shape.length===1&&i.shape[0]!==1){const x=lt({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});m=Fd(t,m,p,x,f),t.disposeIntermediateTensorInfo(x)}else m=Fd(t,m,p,i,f);t.disposeIntermediateTensorInfo(g)}return m}const Qq={kernelName:Ah,backendName:"cpu",kernelFunc:Yq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jq(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let m=IN({inputs:{x:s,filter:o},backend:t,attrs:{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d}});if(a){const g=m;m=ri({inputs:{a:m,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=Fd(t,m,p,i,f),t.disposeIntermediateTensorInfo(g)}return m}const Zq={kernelName:rw,backendName:"cpu",kernelFunc:Jq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ej(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,o=ne(r.shape),a=s.shape,i=a[a.length-1],[u,c,l,h]=Hg(r,s);if(c===0)return t.makeTensorInfo(u,r.dtype,[]);const d=t.data.get(s.dataId).values,p=t.bufferSync(r),f=AS(d,p,r.dtype,c,i,l,h,r.shape,o);return t.makeTensorInfo(u,r.dtype,f.values)}const tj={kernelName:B1,backendName:"cpu",kernelFunc:ej};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nj(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:o}=e,{axis:a,batchDims:i}=r;be([s,o],"gatherV2");const u=Ve(a,s.shape)[0],c=t.data.get(o.dataId).values,l=s.shape[u];for(let v=0;v<c.length;++v){const w=c[v];A(w<=l-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${l-1}]`)}let h=i;i==null&&(h=0);const d=ne(o.shape),p=yx(s,o,u,h),f=lt({inputs:{x:s},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=lt({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],x=t.bufferSync(m),y=t.bufferSync(f),b=$S(y,x,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.makeTensorInfo(p.outputShape,b.dtype,b.values)}const rj={kernelName:jl,backendName:"cpu",kernelFunc:nj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sj(n){const{inputs:e,backend:t}=n,{input:r}=e,s=ne(r.shape),o=r.shape[r.shape.length-1],a=s/o,i=lt({inputs:{x:r},backend:t,attrs:{shape:[a,o]}}),u=kN(i,!0,t),c=lt({inputs:{x:u},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),c}const oj={kernelName:Rm,backendName:"cpu",kernelFunc:sj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aj=ot(cu,n=>Number.isFinite(n)?1:0,"bool"),ij={kernelName:cu,backendName:"cpu",kernelFunc:aj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uj=ot(lu,n=>Math.abs(n)===1/0?1:0,"bool"),cj={kernelName:lu,backendName:"cpu",kernelFunc:uj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lj=ot(hu,n=>Number.isNaN(n)?1:0,"bool"),hj={kernelName:hu,backendName:"cpu",kernelFunc:lj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dj(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:o}=t,a=MS(r,s,o);return e.makeTensorInfo([a.length],"float32",a)}const pj={kernelName:z1,backendName:"cpu",kernelFunc:dj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fj=ot(pu,n=>Math.log1p(n)),mj={kernelName:pu,backendName:"cpu",kernelFunc:fj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gj=Rt((n,e)=>n&&e),xj=Vt(Jl,gj,null,"bool"),yj={kernelName:Jl,backendName:"cpu",kernelFunc:xj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vj=ot(Zl,n=>n?0:1,"bool"),bj={kernelName:Zl,backendName:"cpu",kernelFunc:vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wj=Rt((n,e)=>n||e),Cj=Vt(eh,wj,null,"bool"),Ij={kernelName:eh,backendName:"cpu",kernelFunc:Cj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kj(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:o,bias:a,alpha:i,beta:u}=r;be(s,"LRN");const c=s.shape[3],l=c-1,h=t.data.get(s.dataId).values,d=ne(s.shape),p=new Float32Array(d);function f(m){const g=m%c;let x=m-g+Math.max(0,g-o);const y=m-g+Math.min(g+o,l);let b=0;for(;x<=y;x++){const v=h[x];b+=v*v}return b}for(let m=0;m<d;m++){const g=f(m),x=h[m]*Math.pow(a+i*g,-u);p[m]=x}return t.makeTensorInfo(s.shape,s.dtype,p)}const Sj={kernelName:th,backendName:"cpu",kernelFunc:kj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nj(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,y:o,dy:a}=e,{depthRadius:i,bias:u,alpha:c,beta:l}=r;be(a,"LRNGrad");const h=ne(a.shape),d=a.shape[3],p=t.data.get(a.dataId).values,f=t.data.get(s.dataId).values,m=t.data.get(o.dataId).values,g=new Float32Array(h),x=h;for(let y=0;y<x;y++){const b=y%d,v=y-b+Math.max(0,b-i),w=y-b+Math.min(d,b+i+1);let C=0;for(let T=v;T<w;T++)C+=Math.pow(f[T],2);C=c*C+u;for(let T=v;T<w;T++){let S=-2*c*l*f[T]*m[y]/C;y===T&&(S+=Math.pow(C,-l)),S*=p[y],g[T]+=S}}return t.makeTensorInfo(a.shape,s.dtype,g)}const Tj={kernelName:$m,backendName:"cpu",kernelFunc:Nj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SN(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:o,keepDims:a}=r,i=t;let u=s.shape;const c=u.length,l=Ve(o,u);let h=l;const d=gt(h,c);let p=i.data.get(s.dataId).values;if(d!=null){const v=new Array(c);for(let w=0;w<v.length;w++)v[w]=u[d[w]];p=ay(p,u,s.dtype,d,v),h=Nt(h.length,c),u=v}be(s,"max"),en("max",h,c);const[f,m]=Ht(u,h),g=ne(m),x=PS(p,g,f,s.dtype),y=i.write(x,f,s.dtype);let b=f;return a&&(b=Dt(f,l)),{dataId:y,shape:b,dtype:s.dtype}}const Ej={kernelName:nh,backendName:"cpu",kernelFunc:SN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rj(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;be(s,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;A(cn(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=ar(s.shape,o,a,c,i,u);let h;if(l.filterWidth===1&&l.filterHeight===1&&et(l.inShape,l.outShape))h=ns({inputs:{x:s},backend:t});else{const d=t.data.get(s.dataId).values,p=Ee(s.shape),f=cy(d,s.shape,s.dtype,p,l,"max");h=t.makeTensorInfo(l.outShape,s.dtype,f.values)}return h}const Aj={kernelName:rh,backendName:"cpu",kernelFunc:Rj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $j(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=r;be(s,"maxPool3d");const l=ys(s.shape,o,a,1,i,u,c),h=t.data.get(s.dataId).values,d=wN(h,s.shape,s.dtype,Ee(s.shape),l,"max");return t.makeTensorInfo(d.shape,"float32",d.values)}const Dj={kernelName:sh,backendName:"cpu",kernelFunc:$j};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fj(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:c}=r;be([s,o],"maxPool3DGrad");const l=ys(o.shape,a,i,1,u,c),h=t.bufferSync(o),d=CH(h,l),p=l.strideDepth,f=l.strideHeight,m=l.strideWidth,g=l.dilationDepth,x=l.dilationHeight,y=l.dilationWidth,b=l.effectiveFilterDepth,v=l.effectiveFilterHeight,w=l.effectiveFilterWidth,C=b-1-l.padInfo.front,T=w-1-l.padInfo.left,S=v-1-l.padInfo.top,k=We(o.shape,"float32"),N=t.bufferSync(s);for(let I=0;I<l.batchSize;++I)for(let E=0;E<l.inChannels;++E)for(let F=0;F<l.inDepth;++F)for(let O=0;O<l.inHeight;++O)for(let D=0;D<l.inWidth;++D){const M=F-C,P=O-S,L=D-T;let z=0;for(let W=0;W<b;W+=g){const j=(M+W)/p;if(!(j<0||j>=l.outDepth||Math.floor(j)!==j))for(let Y=0;Y<v;Y+=x){const J=(P+Y)/f;if(!(J<0||J>=l.outHeight||Math.floor(J)!==J))for(let ae=0;ae<w;ae+=y){const oe=(L+ae)/m;if(oe<0||oe>=l.outWidth||Math.floor(oe)!==oe)continue;const ue=b*v*w-1-d.get(I,j,J,oe,E),he=W*v*w+Y*w+ae,pe=ue===he?1:0;if(pe===0)continue;const de=N.get(I,j,J,oe,E);z+=de*pe}}}k.set(z,I,F,O,D,E)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const Oj={kernelName:Fm,backendName:"cpu",kernelFunc:Fj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _j(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o,output:a}=e,i=o;be([o,a],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=r,d=ar(i.shape,u,c,1,l,h),p=t.data.get(i.dataId).values,f=We(d.outShape,i.dtype,bN(p,i.shape,i.dtype,d).values),m=d.strideHeight,g=d.strideWidth,x=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,C=b-1-d.padInfo.top,T=We(i.shape,"float32"),S=t.data.get(s.dataId).values,k=We(s.shape,"float32",S);for(let N=0;N<d.batchSize;++N)for(let I=0;I<d.inChannels;++I)for(let E=0;E<d.inHeight;++E)for(let F=0;F<d.inWidth;++F){const O=E-C,D=F-w;let M=0;for(let P=0;P<b;P+=x){const L=(O+P)/m;if(!(L<0||L>=d.outHeight||Math.floor(L)!==L))for(let z=0;z<v;z+=y){const W=(D+z)/g;if(W<0||W>=d.outWidth||Math.floor(W)!==W)continue;const j=b*v-1-f.get(N,L,W,I),Y=P*v+z,J=j===Y?1:0;if(J===0)continue;const ae=k.get(N,L,W,I);M+=ae*J}}T.set(M,N,E,F,I)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const Mj={kernelName:Dm,backendName:"cpu",kernelFunc:_j};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lj(n,e,t,r,s){const o=Ee(e),a=cy(n,e,t,o,s,"max"),i=bN(n,e,t,s,!0,r);return[a.values,i.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pj={kernelName:V1,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:s,strides:o,pad:a,includeBatchInIndex:i}=e,u=t;be(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,l=ar(r.shape,s,o,[1,1],a),[h,d]=Lj(c,r.shape,r.dtype,i,l),p=u.write(h,l.outShape,r.dtype),f=u.write(d,l.outShape,r.dtype);return[{dataId:p,shape:l.outShape,dtype:r.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bj(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=Ve(o,s.shape),c=Ht(s.shape,i)[1],l=ne(c),h=[],d=t.makeTensorInfo([],"float32",new Float32Array([l]));h.push(d);const p=oo({inputs:{x:s},backend:t,attrs:{dtype:"float32"}});h.push(p);const f=ly({inputs:{a:p,b:d},backend:t});h.push(f);const m=yc({inputs:{x:f},backend:t,attrs:{axis:o,keepDims:a}});return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const zj={kernelName:oh,backendName:"cpu",kernelFunc:Bj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vj(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;be(s,"min");const i=Ve(o,s.shape);let u=i;const c=gt(u,s.shape.length);let l=s;c!=null&&(l=Dn({inputs:{x:s},backend:t,attrs:{perm:c}}),u=Nt(u.length,s.shape.length)),en("min",u,l.shape.length);const[h,d]=Ht(l.shape,u),p=ne(d),f=un(ne(h),l.dtype),m=t.data.get(l.dataId).values;for(let x=0;x<f.length;++x){const y=x*p;let b=m[y];for(let v=0;v<p;++v){const w=m[y+v];(Number.isNaN(w)||w<b)&&(b=w)}f[x]=b}c!=null&&t.disposeIntermediateTensorInfo(l);const g=t.makeTensorInfo(h,l.dtype,f);if(a){const x=Dt(h,i),y=lt({inputs:{x:g},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(g),y}return g}const Wj={kernelName:ah,backendName:"cpu",kernelFunc:Vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uj(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:o,mode:a}=r;be(s,"mirrorPad");const i=o.map((b,v)=>b[0]+s.shape[v]+b[1]),u=o.map(b=>b[0]),c=o.map((b,v)=>b[0]+s.shape[v]),l=a==="reflect"?0:1,h=t.data.get(s.dataId).values,d=s.shape.length,p=Ee(s.shape),f=ne(i),m=i.length,g=Ee(i),x=an(s.dtype,f);for(let b=0;b<f;b++){let v=Ma(b,m,g);for(let C=0;C<m;C++)v[C]<u[C]?v[C]=u[C]*2-v[C]-l:v[C]>=c[C]&&(v[C]=(c[C]-1)*2-v[C]+l);v=v.map((C,T)=>C-u[T]);const w=Wr(v,d,p);x[b]=h[w]}return{dataId:t.write(x,i,s.dtype),shape:i,dtype:s.dtype}}const Gj={kernelName:ih,backendName:"cpu",kernelFunc:Uj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hj=Rt((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),qj=Vt(gu,Hj),jj={kernelName:gu,backendName:"cpu",kernelFunc:qj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NN(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:o}=r,a=s.shape.length;let i=o;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const u=Ve([i],s.shape),c=SN({inputs:{x:s},backend:t,attrs:{reductionIndices:u,keepDims:!1}}),l=Dt(c.shape,u),h=lt({inputs:{x:c},backend:t,attrs:{shape:l}}),d=uy({inputs:{a:s,b:h},backend:t}),p=NS({inputs:{x:d},backend:t}),f=yc({inputs:{x:p},backend:t,attrs:{axis:u,keepDims:!1}}),m=lt({inputs:{x:f},backend:t,attrs:{shape:l}}),g=ly({inputs:{a:p,b:m},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const Kj={kernelName:Sh,backendName:"cpu",kernelFunc:NN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xj(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:o,seed:a,normalized:i}=r;be(s,"multinomial");const u=i?s:NN({inputs:{logits:s},backend:t,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],h=t.data.get(u.dataId).values,d=[c,o],p=un(ne(d),"int32");for(let f=0;f<c;++f){const m=f*l,g=new Float32Array(l-1);g[0]=h[m];for(let b=1;b<g.length;++b)g[b]=g[b-1]+h[m+b];const x=Rg.alea(a.toString()),y=f*o;for(let b=0;b<o;++b){const v=x();p[y+b]=g.length;for(let w=0;w<g.length;w++)if(v<g[w]){p[y+b]=w;break}}}return i||t.disposeIntermediateTensorInfo(u),t.makeTensorInfo(d,"int32",p)}const Yj={kernelName:W1,backendName:"cpu",kernelFunc:Xj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qj=zg;function Jj(n){const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=r;be(s,"NonMaxSuppression");const c=t.data.get(s.dataId).values,l=t.data.get(o.dataId).values,{selectedIndices:h}=Qj(c,l,a,i,u);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const Zj={kernelName:Om,backendName:"cpu",kernelFunc:Jj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eK=Vg;function tK(n){const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=r;be(s,"NonMaxSuppressionPadded");const l=t.data.get(s.dataId).values,h=t.data.get(o.dataId).values,{selectedIndices:d,validOutputs:p}=eK(l,h,a,i,u,c);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const nK={kernelName:_m,backendName:"cpu",kernelFunc:tK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rK=Wg;function sK(n){const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=r;be(s,"NonMaxSuppressionWithScore");const l=t.data.get(s.dataId).values,h=t.data.get(o.dataId).values,d=a,p=i,f=u,m=c,{selectedIndices:g,selectedScores:x}=rK(l,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const oK={kernelName:Mm,backendName:"cpu",kernelFunc:sK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aK(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:o,depth:a,onValue:i,offValue:u}=r;be(s,"oneHot");const c=ne(s.shape),l=new Float32Array(c*a);l.fill(u);const h=t.data.get(s.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<a&&(l[d*a+h[d]]=i);return t.makeTensorInfo([...s.shape,a],o,l)}const iK={kernelName:hh,backendName:"cpu",kernelFunc:aK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _d(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){const s=na({inputs:{input:r},backend:t}),o=_d({inputs:{x:s},backend:t}),a=si({inputs:{input:r},backend:t}),i=_d({inputs:{x:a},backend:t}),u=Wn({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return py({backend:t,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const uK={kernelName:Eh,backendName:"cpu",kernelFunc:_d};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){const s=na({inputs:{input:r},backend:t}),o=TN({inputs:{x:s},backend:t}),a=si({inputs:{input:r},backend:t}),i=_d({inputs:{x:a},backend:t}),u=Wn({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return py({backend:t,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}const cK={kernelName:lh,backendName:"cpu",kernelFunc:TN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EN(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return Od({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const o=e[0].shape,a=e[0].dtype;e.forEach(l=>{Yf(o,l.shape,"All tensors passed to stack must have matching shapes"),A(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=e.map(l=>{const h=Od({inputs:{input:l},backend:t,attrs:{dim:s}});return i.push(h),h}),c=oi({inputs:u,backend:t,attrs:{axis:s}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),c}const lK={kernelName:dh,backendName:"cpu",kernelFunc:EN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hK(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:o,constantValue:a}=r;be(s,"pad");const i=o.map((y,b)=>y[0]+s.shape[b]+y[1]),u=o.map(y=>y[0]),c=t.data.get(s.dataId).values,l=ne(s.shape),h=s.shape.length,d=Ee(s.shape),p=ne(i),f=i.length,m=Ee(i),g=an(s.dtype,p);a!==0&&g.fill(a);for(let y=0;y<l;y++){const v=Ma(y,h,d).map((C,T)=>C+u[T]),w=Wr(v,f,m);g[w]=c[y]}return{dataId:t.write(g,i,s.dtype),shape:i,dtype:s.dtype}}const RN={kernelName:ph,backendName:"cpu",kernelFunc:hK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dK=Rt((n,e)=>Math.pow(n,e)),pK=Vt(yu,dK),fK={kernelName:yu,backendName:"cpu",kernelFunc:pK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mK(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:i}=r,u=s.map(x=>t.data.get(x.dataId).values),c=s.map(x=>x.shape),l=t.data.get(o.dataId).values,h=t.data.get(a.dataId).values,[d,p,f]=HS(u,c,l,o.shape,o.dtype,h,a.shape),m=d.map(x=>t.makeTensorInfo([x.length],"int32",x)),g=t.makeTensorInfo(f,o.dtype,p);return m.concat([g])}const gK={kernelName:U1,backendName:"cpu",kernelFunc:mK};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xK(n){const{inputs:e,backend:t}=n,{starts:r,limits:s,deltas:o}=e,a=t.data.get(r.dataId).values,i=t.data.get(s.dataId).values,u=t.data.get(o.dataId).values,[c,l]=jS(a,r.shape,r.dtype,i,s.shape,u,o.shape),h=t.makeTensorInfo([c.length],"int32",c),d=t.makeTensorInfo([l.length],r.dtype,l);return[h,d]}const yK={kernelName:G1,backendName:"cpu",kernelFunc:xK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vK(n){const{inputs:e,backend:t,attrs:r}=n,{shape:s,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:u}=r,c=t.data.get(s.dataId).values,l=t.data.get(o.dataId).values,h=t.data.get(a.dataId).values,d=i.map(g=>t.data.get(g.dataId).values),p=i.map(g=>g.shape),[f,m]=YS(c,s.shape,l,o.shape,o.dtype,h,a.shape,d,p,u);return t.makeTensorInfo(f,o.dtype,m)}const bK={kernelName:H1,backendName:"cpu",kernelFunc:vK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wK(n){const{backend:e,attrs:t}=n,{start:r,stop:s,dtype:o,step:a}=t,i=QS(r,s,a,o);return e.makeTensorInfo([i.length],o,i)}const CK={kernelName:Lm,backendName:"cpu",kernelFunc:wK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IK=ot(vu,n=>1/n),kK={kernelName:vu,backendName:"cpu",kernelFunc:IK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SK(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r;be(s,"resizeBilinear");const u=Ee(s.shape),[c,l]=i,[h,d,p,f]=s.shape,m=t.data.get(s.dataId).values,g=new Float32Array(ne([h,c,l,f])),x=[o&&c>1?d-1:d,o&&l>1?p-1:p],y=[o&&c>1?c-1:c,o&&l>1?l-1:l];let b=0;const v=x[0]/y[0],w=x[1]/y[1];for(let C=0;C<h;C++)for(let T=0;T<c;T++){let S;a?S=v*(T+.5)-.5:S=v*T;const k=Math.max(0,Math.floor(S)),N=S-k,I=Math.min(d-1,Math.ceil(S)),E=C*u[0]+k*u[1],F=C*u[0]+I*u[1];for(let O=0;O<l;O++){let D;a?D=w*(O+.5)-.5:D=w*O;const M=Math.max(0,Math.floor(D)),P=D-M,L=Math.min(p-1,Math.ceil(D)),z=E+M*u[2],W=F+M*u[2],j=E+L*u[2],Y=F+L*u[2];for(let J=0;J<f;J++){const ae=m[z+J],oe=m[W+J],ue=m[j+J],he=m[Y+J],pe=ae+(ue-ae)*P,de=oe+(he-oe)*P,Ce=pe+(de-pe)*N;g[b++]=Ce}}}return t.makeTensorInfo([h,c,l,f],"float32",g)}const NK={kernelName:yh,backendName:"cpu",kernelFunc:SK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TK(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r;be([o,s],"resizeBilinearGrad");const i=Ee(s.shape),[u,c,l,h]=s.shape,[,d,p]=o.shape,f=new Float32Array(u*c*l*h),m=[a&&d>1?c-1:c,a&&p>1?l-1:l],g=[a&&d>1?d-1:d,a&&p>1?p-1:p],x=m[0]/g[0],y=m[1]/g[1],b=t.data.get(o.dataId).values;let v=0;for(let w=0;w<u;w++){const C=w*i[0];for(let T=0;T<d;T++){const S=T*x,k=Math.floor(S),N=Math.min(Math.ceil(S),c-1),I=C+k*i[1],E=C+N*i[1],F=S-k,O=1-F;for(let D=0;D<p;D++){const M=D*y,P=Math.floor(M),L=Math.min(Math.ceil(M),l-1),z=M-P,W=1-z,j=I+P*i[2],Y=I+L*i[2],J=E+P*i[2],ae=E+L*i[2],oe=O*W,ue=O*z,he=F*W,pe=F*z;for(let de=0;de<h;de++){const Ce=b[v++];f[j+de]+=Ce*oe,f[Y+de]+=Ce*ue,f[J+de]+=Ce*he,f[ae+de]+=Ce*pe}}}}return t.makeTensorInfo([u,l,c,h],"float32",f)}const EK={kernelName:zm,backendName:"cpu",kernelFunc:TK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RK(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r;be(s,"resizeNearestNeighbor");const u=Ee(s.shape),[c,l]=i,[h,d,p,f]=s.shape,m=t.data.get(s.dataId).values,g=new Float32Array(h*c*l*f),x=[o&&c>1?d-1:d,o&&l>1?p-1:p],y=[o&&c>1?c-1:c,o&&l>1?l-1:l],b=x[0]/y[0],v=x[1]/y[1];let w=0;for(let C=0;C<h;C++){const T=C*u[0];for(let S=0;S<c;S++){const k=a?b*(S+.5):b*S;let N=Math.min(d-1,o?Math.round(k):Math.floor(k));a&&(N=Math.max(0,N));const I=T+N*u[1];for(let E=0;E<l;E++){const F=a?v*(E+.5):v*E;let O=Math.min(p-1,o?Math.round(F):Math.floor(F));a&&(O=Math.max(0,O));const D=I+O*u[2];for(let M=0;M<f;M++){const P=m[D+M];g[w++]=P}}}}return t.makeTensorInfo([h,c,l,f],s.dtype,g)}const AK={kernelName:xh,backendName:"cpu",kernelFunc:RK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $K(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r;be([o,s],"resizeNearestNeighborGrad");const i=Ee(s.shape),u=Ee(o.shape),[c,l,h,d]=s.shape,[,p,f]=o.shape,m=new Float32Array(c*l*h*d),g=t.data.get(o.dataId).values,x=[a&&p>1?l-1:l,a&&f>1?h-1:h],y=[a&&p>1?p-1:p,a&&f>1?f-1:f],b=x[0]/y[0],v=x[1]/y[1],w=1/b,C=1/v,T=Math.ceil(w)*2+2,S=Math.ceil(C)*2+2;for(let k=0;k<c;k++){const N=k*i[0];for(let I=0;I<l;I++){const E=N+I*i[1],F=Math.floor(I*w),O=Math.floor(F-T/2);for(let D=0;D<h;D++){const M=E+D*i[2],P=Math.floor(D*C),L=Math.floor(P-S/2);for(let z=0;z<d;z++){let W=0;for(let j=0;j<T;j++){const Y=j+O;if(Y<0||Y>=p)continue;const J=N+Y*u[1],ae=Y*b,oe=Math.min(l-1,a?Math.round(ae):Math.floor(ae));if(I===oe)for(let ue=0;ue<S;ue++){const he=ue+L;if(he<0||he>=f)continue;const pe=J+he*u[2],de=he*v,Ce=Math.min(h-1,a?Math.round(de):Math.floor(de));D===Ce&&(W+=g[pe+z])}}m[M+z]=W}}}}return t.makeTensorInfo(s.shape,s.dtype,m)}const DK={kernelName:Bm,backendName:"cpu",kernelFunc:$K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FK(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:o}=r;be(s,"reverse");const a=s.shape.length,i=Ve(o,s.shape);if(a===0)return ns({inputs:{x:s},backend:t});const u=new Jt(s.shape,s.dtype),c=t.bufferSync(s);for(let l=0;l<u.size;l++){const h=u.indexToLoc(l),d=h.slice();i.forEach(p=>d[p]=s.shape[p]-1-d[p]),u.set(c.get(...d),...h)}return t.makeTensorInfo(u.shape,u.dtype,u.values)}const OK={kernelName:vh,backendName:"cpu",kernelFunc:FK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _K={kernelName:jm,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:o,center:a}=e,i=t,u=an(r.dtype,ne(r.shape)),[c,l,h,d]=r.shape,[p,f]=ex(a,l,h),m=255,g=Math.sin(s),x=Math.cos(s),y=i.data.get(r.dataId).values;for(let v=0;v<c;v++){const w=v*h*l*d;for(let C=0;C<l;C++){const T=C*(h*d);for(let S=0;S<h;S++){const k=S*d;for(let N=0;N<d;N++){const I=[c,C,S,N],E=I[2],F=I[1];let O=(E-p)*x-(F-f)*g,D=(E-p)*g+(F-f)*x;O=Math.round(O+p),D=Math.round(D+f);let M=o;if(typeof o!="number"&&(N===3?M=m:M=o[N]),O>=0&&O<h&&D>=0&&D<l){const L=D*(h*d),z=O*d,W=w+L+z+N;M=y[W]}const P=w+T+k+N;u[P]=M}}}}return{dataId:i.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MK=ot(Cu,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),LK={kernelName:Cu,backendName:"cpu",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PK(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:o}=e,{shape:a}=r,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=jo(o,s,a),d=!0,p=t.bufferSync(s),f=t.bufferSync(o),m=ra(p,f,a,h,c,u,i,l,0,d);return t.makeTensorInfo(a,m.dtype,m.values)}const BK={kernelName:q1,backendName:"cpu",kernelFunc:PK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zK(n,e){let t=0,r=n.length,s=0;for(;t<r;)s=Math.floor((t+r)/2),n[s]<e?t=s+1:r=s;return r}function VK(n,e){let t=0,r=n.length,s=0;for(;t<r;)s=Math.floor((t+r)/2),n[s]<=e?t=s+1:r=s;return r}function WK(n,e,t,r,s,o){const a=kt("int32",t*s);for(let i=0;i<t;++i){const u=n.slice(i*r,(i+1)*r),c=i*s;for(let l=0;l<s;++l)a[c+l]=o==="left"?zK(u,e[l+c]):VK(u,e[l+c])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UK(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:o}=e,{side:a}=r,i=t.data.get(s.dataId).values,u=t.data.get(o.dataId).values,c=WK(i,u,s.shape[0],s.shape[1],o.shape[1],a);return t.makeTensorInfo(o.shape,"int32",c)}const GK={kernelName:K1,backendName:"cpu",kernelFunc:UK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HK(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:o}=e;be([r,s,o],"select");const a=r.shape.length,i=t.data.get(r.dataId).values,u=t.data.get(s.dataId).values,c=t.data.get(o.dataId).values,l=Bn(s.dtype,o.dtype),h=un(ne(s.shape),l);let d=0;const p=a===0||a>1||s.shape.length===1?1:ne(s.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<p;m++)i[f]===1?h[d++]=u[f]:h[d++]=c[f];return t.makeTensorInfo(s.shape,l,h)}const qK={kernelName:bh,backendName:"cpu",kernelFunc:HK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jK=sd,KK=od,XK=ot(ku,n=>n>=0?KK*n:jK*(Math.exp(n)-1)),YK={kernelName:ku,backendName:"cpu",kernelFunc:XK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QK=ot(Tu,n=>n<0?-1:n>0?1:0),JK={kernelName:Tu,backendName:"cpu",kernelFunc:QK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZK=ot(Su,n=>Math.sin(n)),e6={kernelName:Su,backendName:"cpu",kernelFunc:ZK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t6=ot(Nu,n=>Math.sinh(n)),n6={kernelName:Nu,backendName:"cpu",kernelFunc:t6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AN=Math.log(11920928955078125e-23)+2,r6=ot(Ru,n=>{const e=n>-AN,t=n<AN,r=Math.exp(n);let s;return t?s=r:e?s=n:s=Math.log(1+r),s}),s6={kernelName:Ru,backendName:"cpu",kernelFunc:r6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,paddings:a}=r;be([s],"spaceToBatchND");const i=ne(o),u=[[0,0]];u.push(...a);for(let C=1+o.length;C<s.shape.length;++C)u.push([0,0]);const c=RN.kernelFunc({inputs:{x:s},backend:t,attrs:{paddings:u,constantValue:0}}),l=Ju(c.shape,o,i,!1),h=Zu(l.length,o.length,!1),d=ec(c.shape,o,i,!1),m=lt({inputs:{x:c},backend:t,attrs:{shape:l}}),y=Dn({inputs:{x:m},backend:t,attrs:{perm:h}}),w=lt({inputs:{x:y},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(y),w}const a6={kernelName:Ih,backendName:"cpu",kernelFunc:o6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i6(n){const{inputs:e,backend:t}=n,{indices:r,values:s,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=t.data.get(r.dataId).values,u=t.data.get(s.dataId).values,c=t.data.get(o.dataId).values,l=t.data.get(a.dataId).values[0],[h,d,p,f,m]=tN(i,r.shape,r.dtype,u,s.dtype,c,l);return[t.makeTensorInfo(d,r.dtype,h),t.makeTensorInfo([d[0]],s.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}const u6={kernelName:X1,backendName:"cpu",kernelFunc:i6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c6(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:s,newShape:o}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(t.data.get(s.dataId).values),i=t.data.get(r.dataId).values,u=Array.from(t.data.get(o.dataId).values),[c,l,h]=nN(i,r.shape,r.dtype,a,u);return[t.makeTensorInfo(l,r.dtype,c),t.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const l6={kernelName:Y1,backendName:"cpu",kernelFunc:c6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h6(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(r.dataId).values,i=t.data.get(s.dataId).values,u=t.data.get(o.dataId).values,[c,l]=iy(a,r.shape,r.dtype,i,u,!0);return t.makeTensorInfo(l,r.dtype,c)}const d6={kernelName:Q1,backendName:"cpu",kernelFunc:h6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p6(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(r.dataId).values,i=t.data.get(s.dataId).values,u=t.data.get(o.dataId).values,[c,l]=iy(a,r.shape,r.dtype,i,u);return t.makeTensorInfo(l,r.dtype,c)}const f6={kernelName:J1,backendName:"cpu",kernelFunc:p6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m6(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:o,defaultValue:a}=e,{outputShape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:d}=jo(o,s,i),p=!1,f=t.bufferSync(s);let m;switch(o.dtype){case"bool":{const g=t.bufferSync(o),x=!!t.data.get(a.dataId).values[0];m=ra(f,g,i,d,l,c,u,h,x,p);break}case"float32":{const g=t.bufferSync(o),x=t.data.get(a.dataId).values[0];m=ra(f,g,i,d,l,c,u,h,x,p);break}case"int32":{const g=t.bufferSync(o),x=t.data.get(a.dataId).values[0];m=ra(f,g,i,d,l,c,u,h,x,p);break}case"string":{const g=t.bufferSync(o),x=Gs(t.data.get(a.dataId).values[0]);m=ra(f,g,i,d,l,c,u,h,x,p);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return t.makeTensorInfo(i,m.dtype,m.values)}const g6={kernelName:Z1,backendName:"cpu",kernelFunc:m6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:o,axis:a}=r,i=Ve(a,s.shape)[0],u=gx(s,o,i),c=new Array(s.shape.length).fill(0),l=s.shape.slice();return u.map(h=>{const d=[...l];d[i]=h;const p=sa({inputs:{x:s},backend:t,attrs:{begin:c,size:d}});return c[i]+=h,p})}const y6={kernelName:kh,backendName:"cpu",kernelFunc:x6};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v6={kernelName:Vm,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,r=e;be(t,"square");const s=r.data.get(t.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const u=s[i];o[i]=u*u}return{dataId:r.write(o,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b6=ot(Mu,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),w6={kernelName:Mu,backendName:"cpu",kernelFunc:b6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,end:a,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:d}=r;be(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:y,end:b,strides:v}=Qg(s.shape,o,a,i,u,c,l,h,d);let w;if(m)w=lt({inputs:{x:s},backend:t,attrs:{shape:f}});else if(g||x){A(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const C=Kg(y,b,v),T=sa({inputs:{x:s},backend:t,attrs:{begin:y,size:C}});w=lt({inputs:{x:T},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(T)}else{const C=t.bufferSync(s),T=oN(p,C,v,y);w=t.makeTensorInfo(f,T.dtype,T.values)}return w}const I6={kernelName:Um,backendName:"cpu",kernelFunc:C6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k6(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:h}=e,d=t.data.get(l.dataId).values,p=t.data.get(h.dataId).values,[f,m]=aN(d,p,s,o,a,i,u,c);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const S6={kernelName:ew,backendName:"cpu",kernelFunc:k6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N6(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:s}=r,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=t.data.get(o.dataId).values,u=t.data.get(a.dataId).values[0],[c,l,h]=iN(i,u,s),d=l.length;return[t.makeTensorInfo([d,2],"int32",c),t.makeTensorInfo([d],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const T6={kernelName:tw,backendName:"cpu",kernelFunc:N6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E6(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:s}=r,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=t.data.get(o.dataId).values,i=uN(a,s);return t.makeTensorInfo(o.shape,"int32",i)}const R6={kernelName:nw,backendName:"cpu",kernelFunc:E6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6=ot(Fu,n=>Math.tan(n)),$6={kernelName:Fu,backendName:"cpu",kernelFunc:A6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6=ot(Ou,n=>Math.tanh(n)),F6={kernelName:Ou,backendName:"cpu",kernelFunc:D6};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O6(n){const{inputs:e,backend:t}=n,{tensor:r,indices:s,updates:o}=e,{sliceRank:a,numUpdates:i,sliceSize:u,strides:c,outputSize:l}=jo(o,s,r.shape),h=!1,d=t.bufferSync(s),p=t.bufferSync(o),f=t.bufferSync(r),m=ra(d,p,r.shape,l,u,i,a,c,f,h);return t.makeTensorInfo(r.shape,m.dtype,m.values)}const _6={kernelName:j1,backendName:"cpu",kernelFunc:O6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:o}=r;be(s,"tile");const a=lN(t.bufferSync(s),o);return t.makeTensorInfo(a.shape,a.dtype,a.values)}const L6={kernelName:_u,backendName:"cpu",kernelFunc:M6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:o,sorted:a}=r;be(s,"topk");const i=t.data.get(s.dataId).values,[u,c]=dN(i,s.shape,s.dtype,o,a);return[t.makeTensorInfo(u.shape,u.dtype,u.values),t.makeTensorInfo(c.shape,c.dtype,c.values)]}const B6={kernelName:Gm,backendName:"cpu",kernelFunc:P6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z6(n){const{inputs:e,attrs:t,backend:r}=n,{image:s,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:c}=t,[l,h,d,p]=s.shape,[f,m]=c??[h,d],g=[l,f,m,p],x=Ee(s.shape),y=x[0],b=x[1],v=x[2],w=Ee(g),C=w[0],T=w[1],S=w[2],k=an(s.dtype,ne(g));k.fill(u);const N=r.data.get(s.dataId).values,I=r.data.get(o.dataId).values;for(let F=0;F<l;++F){const O=o.shape[0]===1?I:I.subarray(F*8,F*8+8);for(let D=0;D<f;++D)for(let M=0;M<m;++M)for(let P=0;P<p;++P){let L;const z=O[6]*M+O[7]*D+1;if(z===0)continue;const W=(O[0]*M+O[1]*D+O[2])/z,j=(O[3]*M+O[4]*D+O[5])/z,Y=$N(W,d,i),J=$N(j,h,i);switch(a){case"nearest":L=q6(N,h,d,y,b,v,F,J,Y,P,u);break;case"bilinear":L=j6(N,h,d,y,b,v,F,J,Y,P,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const ae=F*C+D*T+M*S+P;k[ae]=L}return r.makeTensorInfo(g,s.dtype,k)}return{dataId:r.write(k,g,s.dtype),shape:s.shape,dtype:s.dtype}}const V6={kernelName:Hm,backendName:"cpu",kernelFunc:z6};function $N(n,e,t){switch(t){case"reflect":return W6(n,e);case"wrap":return U6(n,e);case"nearest":return H6(n,e);case"constant":default:return G6(n)}}function W6(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const r=2*e;t<r&&(t=r*Math.trunc(-t/r)+t),t=t<-e?t+r:-t-1}else if(t>e-1)if(e<=1)t=0;else{const r=2*e;t-=r*Math.trunc(t/r),t>=e&&(t=r-t-1)}return $o(0,t,e-1)}function U6(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const r=e-1;t+=e*(Math.trunc(-t/r)+1)}else if(t>e-1)if(e<=1)t=0;else{const r=e-1;t-=e*Math.trunc(t/r)}return $o(0,t,e-1)}function G6(n,e){return n}function H6(n,e){return $o(0,n,e-1)}function vc(n,e,t,r,s,o,a,i,u,c,l){const h=a*r+i*s+u*o+c;return 0<=i&&i<e&&0<=u&&u<t?n[h]:l}function q6(n,e,t,r,s,o,a,i,u,c,l){const h=Math.round(i),d=Math.round(u);return vc(n,e,t,r,s,o,a,h,d,c,l)}function j6(n,e,t,r,s,o,a,i,u,c,l){const h=Math.floor(i),d=Math.floor(u),p=h+1,f=d+1,m=(f-u)*vc(n,e,t,r,s,o,a,h,d,c,l)+(u-d)*vc(n,e,t,r,s,o,a,h,f,c,l),g=(f-u)*vc(n,e,t,r,s,o,a,p,d,c,l)+(u-d)*vc(n,e,t,r,s,o,a,p,f,c,l);return(p-i)*m+(i-h)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K6(n){const{inputs:e,attrs:t,backend:r}=n,{axis:s}=t,{x:o}=e;be(o,"unique");const a=r.data.get(o.dataId).values,{outputValues:i,outputShape:u,indices:c}=pN(a,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}const X6={kernelName:qm,backendName:"cpu",kernelFunc:K6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y6(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s.shape.length,i=s.shape[o],u=new Array(a-1);let c=0;for(let p=0;p<a;p++)p!==o&&(u[c++]=s.shape[p]);const l=new Array(a).fill(0),h=s.shape.slice();h[o]=1;const d=new Array(i);for(let p=0;p<d.length;p++){l[o]=p;const f=sa({inputs:{x:s},backend:t,attrs:{begin:l,size:h}});d[p]=lt({inputs:{x:f},backend:t,attrs:{shape:u}}),t.disposeIntermediateTensorInfo(f)}return d}const Q6={kernelName:Nh,backendName:"cpu",kernelFunc:Y6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:o}=e,{numSegments:a}=r;be(s,"unsortedSegmentSum");const i=s.shape.length,u=o.shape.length,c=[],l=[],h=i-u;let d=o;for(let f=0;f<h;++f){const m=Od({inputs:{input:d},backend:t,attrs:{dim:f+1}});d=m,l.push(m)}for(let f=0;f<a;++f){const m=Ws(f,"int32"),g=t.makeTensorInfo([],"int32",m),x=kS({inputs:{a:g,b:d},backend:t}),y=oo({inputs:{x},backend:t,attrs:{dtype:"float32"}}),b=$d({inputs:{a:y,b:s},backend:t}),v=yc({inputs:{x:b},backend:t,attrs:{axis:0,keepDims:!1}});c.push(v),l.push(g),l.push(x),l.push(y),l.push(b),l.push(v)}const p=EN({inputs:c,backend:t,attrs:{axis:0}});return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const Z6={kernelName:Th,backendName:"cpu",kernelFunc:J6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eX=[YG,AU,JG,eH,MU,nH,sH,aH,uH,lH,dH,fH,gH,vH,wH,kH,NH,EH,AH,KG,DH,OH,MH,PU,PH,OU,zU,zH,$U,VH,UH,GH,qH,KH,YH,JH,eq,nq,sq,aq,uq,lq,dq,fq,mq,xq,vq,wq,Cq,Iq,kq,Nq,Rq,VG,$q,VU,Bq,WU,zq,GU,qq,jq,Xq,qU,KU,Qq,Zq,tj,rj,YU,JU,DU,oj,WH,ij,cj,hj,WG,eG,nG,pj,sG,mj,yj,bj,Ij,Sj,Tj,Ej,aG,Aj,Dj,Oj,Mj,Pj,zj,Wj,uG,Gj,jj,Yj,lG,dG,Zj,nK,oK,fG,iK,cK,lK,RN,fK,GG,xG,gK,yK,bK,CK,FU,hy,kK,HG,qG,jG,NK,EK,AK,DK,OK,_K,LK,SG,BK,GK,qK,YK,TG,JK,e6,n6,EG,Kj,s6,a6,u6,l6,d6,f6,g6,y6,$G,v6,FG,_G,w6,I6,S6,T6,R6,BG,Tq,$6,F6,_6,L6,B6,V6,mG,X6,Q6,Z6,uK];for(const n of eX)iw(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oa={},Md={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function tX(n,e){oa[n]=e}function Or(n,e){if(!(n in oa)||e!=null){const r=rX(n,e);if(r!==null)oa[n]=r;else return console.log("Could not get context for WebGL version",n),null}const t=oa[n];return t==null||t.isContextLost()?(delete oa[n],Or(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),oa[n])}function nX(n){if(!Z().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function rX(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??nX(n);return t.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete oa[n]},!1),Z().getBool("SOFTWARE_WEBGL_ENABLED")&&(Md.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Md)||t.getContext("experimental-webgl",Md):t.getContext("webgl2",Md)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var bc;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(bc||(bc={}));var tr;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(tr||(tr={}));var tn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(tn||(tn={}));function wc(n,e){return[e,n]}function sX(n,e){return n*e}function Ld(n){const e=ne(n),t=Math.ceil(e/4);return Qf(t)}function ai(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function oX(n,e){const[t,r]=ai(n,e);return t*r*4}function fy(n,e){const t=n;let r,s,o,a,i,u,c,l,h,d;return Z().getNumber("WEBGL_VERSION")===2?(r=t.R32F,s=t.R16F,o=t.RGBA16F,a=t.RGBA32F,i=t.RED,c=4,l=1,h=t.HALF_FLOAT,d=t.FLOAT,u=t.RGBA8):(r=n.RGBA,s=n.RGBA,o=n.RGBA,a=t.RGBA,i=n.RGBA,c=4,l=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,u=n.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xe(n,e){const t=e();return Z().getBool("DEBUG")&&aX(n),t}function aX(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+lX(n,e))}const iX=596e-10,uX=65504;function cX(n){return!!(Z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||iX<Math.abs(n)&&Math.abs(n)<uX)}function lX(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Pd(n,e){return Ts(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function hX(n,e){const t=Ts(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(xe(n,()=>n.shaderSource(t,e)),xe(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function dX(n,e){const t=Ts(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(xe(n,()=>n.shaderSource(t,e)),xe(n,()=>n.compileShader(t)),Z().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw DN(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const pX=/ERROR: [0-9]+:([0-9]+):/g;function DN(n,e){const t=pX.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const r=+t[1],s=n.split(`
`),o=s.length.toString().length+2,a=s.map((h,d)=>Oa((d+1).toString(),o)+h);let i=0;for(let h=0;h<a.length;h++)i=Math.max(a[h].length,i);const u=a.slice(0,r-1),c=a.slice(r-1,r),l=a.slice(r);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Oa(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function fX(n){return Ts(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function mX(n,e){if(xe(n,()=>n.linkProgram(e)),!Z().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function my(n,e){if(xe(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function gX(n,e){const t=Ts(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return xe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),xe(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function xX(n,e){const t=Ts(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return xe(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),xe(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function yX(n){return Ts(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function vX(n,e){const t=Z().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const r=`[${n}x${e}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(n>t||e>t){const r=`[${n}x${e}]`,s=`[${t}x${t}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function bX(n){return Ts(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function FN(n,e,t,r,s,o,a){const i=n.getAttribLocation(e,t);return i===-1?!1:(xe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),xe(n,()=>n.vertexAttribPointer(i,s,n.FLOAT,!1,o,a)),xe(n,()=>n.enableVertexAttribArray(i)),!0)}function wX(n,e,t){NX(n,t),xe(n,()=>n.activeTexture(n.TEXTURE0+t)),xe(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function CX(n,e,t){return Ts(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function IX(n,e,t){return n.getUniformLocation(e,t)}function kX(n,e,t,r){xe(n,()=>wX(n,e,r)),xe(n,()=>n.uniform1i(t,r))}function gy(n,e,t){xe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),xe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function ON(n,e){xe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),xe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Bd(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+SX(n,e))}function SX(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Ts(n,e,t){const r=xe(n,()=>e());if(r==null)throw new Error(t);return r}function NX(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+n.TEXTURE0;if(r<n.TEXTURE0||r>t){const s=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${s}.`)}}function ii(n,e=2){return ne(n.slice(0,n.length-e))}function ui(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function zd(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[ii(n),...ui(n)]),e}function TX(n,e=!1){let t=Z().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=Z().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&Z().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=t/2),e&&(t=t*2,r=r*2,n=n.map((i,u)=>u>=n.length-2?Xf(n[u]):n[u]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=zs(n).newShape);let s=ne(n),o=null;n.length<=1&&s<=t?o=[1,s]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const a=o!=null&&Math.max(...o)>r&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||a)if(e){const i=ii(n);let u=2,c=2;n.length&&([u,c]=ui(n)),s=i*(u/2)*(c/2),o=Qf(s).map(l=>l*2)}else o=Qf(s);return o}function Vd(n){return n%2===0}function Wd(n,e){if(n=n.slice(-2),e=e.slice(-2),et(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],r=e[e.length-1];if(t===r||Vd(t)&&Vd(r)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Vd(n[0])&&Vd(e[0])}let xy,yy;function EX(n){if(xy==null){const e=Or(n);xy=e.getParameter(e.MAX_TEXTURE_SIZE)}return xy}function RX(n){if(yy==null){const e=Or(n);yy=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,yy)}function AX(n){if(n===0)return 0;let e;const t=Or(n);return fr(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:fr(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function fr(n,e){return n.getExtension(e)!=null}function _N(n){try{if(Or(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function $X(n){if(n===0)return!1;const e=Or(n);if(n===1){if(!fr(e,"OES_texture_float"))return!1}else if(!fr(e,"EXT_color_buffer_float"))return!1;return vy(e)}function DX(n){if(n===0)return!1;const e=Or(n);if(n===1){if(!fr(e,"OES_texture_float")||!fr(e,"WEBGL_color_buffer_float"))return!1}else{if(fr(e,"EXT_color_buffer_float"))return vy(e);const r="EXT_color_buffer_half_float";if(fr(e,r)){const s=e.getExtension(r);return FX(e,s)}return!1}return vy(e)}function vy(n){const e=fy(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),a}function FX(n,e){const t=fy(n,e),r=n.createTexture();n.bindTexture(n.TEXTURE_2D,r),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(r),n.deleteFramebuffer(a),i}function OX(n){return n!==2?!1:Or(n).fenceSync!=null}function Cc(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&A(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const we=Z();we.registerFlag("HAS_WEBGL",()=>we.getNumber("WEBGL_VERSION")>0),we.registerFlag("WEBGL_VERSION",()=>_N(2)?2:_N(1)?1:0),we.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),we.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>we.get("WEBGL_VERSION")===2),we.registerFlag("WEBGL_CPU_FORWARD",()=>!0),we.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),we.registerFlag("WEBGL_PACK",()=>we.getBool("HAS_WEBGL")),we.registerFlag("WEBGL_PACK_NORMALIZATION",()=>we.getBool("WEBGL_PACK")),we.registerFlag("WEBGL_PACK_CLIP",()=>we.getBool("WEBGL_PACK")),we.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>we.getBool("WEBGL_PACK")),we.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>we.getBool("WEBGL_PACK")),we.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>we.getBool("WEBGL_PACK")),we.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>we.getBool("WEBGL_PACK")),we.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>we.getBool("WEBGL_PACK")),we.registerFlag("WEBGL_PACK_REDUCE",()=>we.getBool("WEBGL_PACK")),we.registerFlag("WEBGL_LAZILY_UNPACK",()=>we.getBool("WEBGL_PACK")),we.registerFlag("WEBGL_CONV_IM2COL",()=>we.getBool("WEBGL_PACK")),we.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>we.getBool("WEBGL_PACK")),we.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>EX(we.getNumber("WEBGL_VERSION"))),we.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>RX(we.getNumber("WEBGL_VERSION"))),we.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=we.getNumber("WEBGL_VERSION");return n===0?0:AX(n)}),we.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>we.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Sw()),we.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>$X(we.getNumber("WEBGL_VERSION"))),we.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>we.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:we.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),we.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>DX(we.getNumber("WEBGL_VERSION"))),we.registerFlag("WEBGL_FENCE_API_ENABLED",()=>OX(we.getNumber("WEBGL_VERSION"))),we.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>we.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),we.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)}),we.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Sw()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)}),we.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),we.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),we.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),we.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),we.registerFlag("WEBGL_EXP_CONV",()=>!1),we.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>we.getBool("IS_TEST")),we.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),we.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),we.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),we.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wn(){let n,e,t,r,s,o,a,i,u,c;return Z().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",r="in",s="texture",o="outputColor",a="out vec4 outputColor;",i=Z().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",r="varying",s="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:r,texture2D:s,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aa(n,e,t="index"){const r=Ee(e);return r.map((s,o)=>{const a=`int ${n[o]} = ${t} / ${s}`,i=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${s}`:`index -= ${n[o]} * ${s}`;return`${a}; ${i};`}).join("")}function Ud(n,e,t="index"){const r=Ee(e);return r.map((s,o)=>{const a=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,i=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${a}; ${i};`}).join("")}function _X(n,e){const t=n.length,r=n.map(o=>`${e}[${o}]`),s=new Array(t-1);s[t-2]=r[t-1];for(let o=t-3;o>=0;--o)s[o]=`(${s[o+1]} * ${r[o+1]})`;return s}function MX(n,e,t="index"){const r=n.map((o,a)=>a),s=_X(r,e);return s.map((o,a)=>{const i=`int ${n[a]} = ${t} / ${s[a]}`,u=a===s.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${s[a]}`:`index -= ${n[a]} * ${s[a]}`;return`${i}; ${u};`}).join("")}function by(n){const e=Ee(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function wy(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const MN=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:LN}=$4;function LX(n,e,t){const r=[];if(n.forEach(p=>{const f=ne(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?r.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(r.push(`uniform sampler2D ${p.name};`),r.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:m}=Cy(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:r.push(`uniform int ${p.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${p.name}Shape;`);break}r.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{r.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const s=r.join(`
`),o=n.map(p=>PX(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=wn(),u=VX(i);let c,l,h=GX(i);return e.isPacked?(c=BX(e.logicalShape,a,t.enableShapeUniforms),l=UX(i)):(c=zX(e.logicalShape,a,t.enableShapeUniforms),l=WX(i)),t.packedInputs&&(h+=KX),[h,u,l,s,c,o,t.userCode].join(`
`)}function ci(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return a5(n,e);case 1:return u5(n,e);case 2:return l5(n,e);case 3:return d5(n,e);case 4:return f5(n,e);case 5:return m5(n);case 6:return g5(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function PN(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return o5(n);case 1:return i5(n,e);case 2:return c5(n,e);case 3:return h5(n,e);default:return p5(n,e)}}function PX(n,e,t=!1,r){let s="";t?s+=PN(n,r):s+=ci(n,r);const o=n.shapeInfo.logicalShape,a=e.logicalShape;return o.length<=a.length&&(t?s+=x5(n,e):s+=y5(n,e)),s}function BX(n,e,t){switch(n.length){case 0:return BN();case 1:return XX(n,e,t);case 2:return r5(n,e,t);case 3:return QX(n,e,t);default:return ZX(n,e,t)}}function zX(n,e,t){switch(n.length){case 0:return BN();case 1:return YX(n,e,t);case 2:return s5(n,e,t);case 3:return JX(n,e,t);case 4:return e5(n,e,t);case 5:return t5(n,e);case 6:return n5(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function VX(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function WX(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function UX(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function GX(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${HX}
    ${qX}
    ${jX}
  `}const HX=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,qX=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,jX=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,KX=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function BN(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function XX(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return r[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function YX(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function QX(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[2]/2),o=s*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function JX(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Ud(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const r=aa(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function ZX(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[n.length-1]/2),o=s*Math.ceil(n[n.length-2]/2);let a=o,i="",u="b, r, c";for(let c=2;c<n.length-1;c++)a*=n[n.length-c-1],i=`
      int b${c} = index / ${a};
      index -= b${c} * ${a};
    `+i,u=`b${c}, `+u;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${i}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${n.length}(${u});
    }
  `}function e5(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Ud(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const r=aa(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function t5(n,e){const t=aa(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function n5(n,e){const t=aa(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function r5(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(et(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const s=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function s5(n,e,t){return et(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function ia(n){return`offset${n}`}function o5(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),r=wn();return`
    vec4 ${t}() {
      return ${r.texture2D}(${e}, halfCR);
    }
  `}function a5(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${r}() {return ${t};}`;const[s,o]=n.shapeInfo.texShape;if(s===1&&o===1)return`
      float ${r}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=ia(t);if(e)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[i,u]=n.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function i5(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=n.shapeInfo.texShape,o=wn();if(e)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function u5(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${li(n)}
      }
    `;const s=n.shapeInfo.texShape,o=s[0],a=s[1];if(a===1&&o===1)return`
      float ${r}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=ia(t);return a===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${o}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function c5(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape,a=o[0],i=o[1],u=wn();if(o!=null&&et(t,o))return e?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${u.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${u.texture2D}(${r}, uv);
      }
    `;if(e)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(t[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${c[0]}, ${c[1]}, row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `}function l5(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape;if(o!=null&&et(t,o)){if(e)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const d=o[0],p=o[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:a,keptDims:i}=zs(t),u=a;if(u.length<t.length){const d=hi(n,u),p=["row","col"];return`
      ${ci(d,e)}
      float ${s}(int row, int col) {
        return ${s}(${di(p,i)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${li(n)}
      }
    `;const c=o[0],l=o[1],h=ia(r);return l===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${r}, uv);
    }
  `:c===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:e?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${l}, index);
    return sampleTexture(${r}, uv);
  }
`}function h5(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const d=t.slice(1),p=[1,2],f=hi(n,d),m=["b","row","col"];return`
        ${PN(f,e)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${di(m,p)});
        }
      `}const i=wn();if(e)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `;const u=a[0],c=a[1],l=Math.ceil(t[2]/2),h=l*Math.ceil(t[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${c}, ${h}, ${l}, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `}function d5(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t[1]*t[2],a=t[2],{newShape:i,keptDims:u}=zs(t),c=i;if(c.length<t.length){const m=hi(n,c),g=["row","col","depth"];return`
        ${ci(m,e)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${di(g,u)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${a}, 1)));
        ${li(n)}
      }
    `;const l=n.shapeInfo.texShape,h=l[0],d=l[1],p=n.shapeInfo.flatOffset;if(d===o&&p==null)return e?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(d===a&&p==null)return e?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `;const f=ia(r);return e?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${r}, uv);
      }
  `}function p5(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=wn();if(e)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,a=o.length,i=n.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=u[0],l=u[1],h=Math.ceil(o[a-1]/2);let d=h*Math.ceil(o[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<a-1;m++)p=`int b${m}, `+p,d*=o[a-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${r}(${p}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${c});
      return ${s.texture2D}(${t}, uv);
    }
  `}function f5(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t[3],a=t[2]*o,i=t[1]*a,{newShape:u,keptDims:c}=zs(t);if(u.length<t.length){const y=hi(n,u),b=["row","col","depth","depth2"];return`
      ${ci(y,e)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${di(b,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${o}, 1)));
        ${li(n)}
      }
    `;const l=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===i&&l==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(p===o&&l==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${r}, uv);
      }
    `;const x=ia(r);return e?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${x});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${x});
      return sampleTexture(${r}, uv);
    }
  `}function m5(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=e[4],o=e[3]*s,a=e[2]*o,i=e[1]*a,{newShape:u,keptDims:c}=zs(e);if(u.length<e.length){const m=hi(n,u),g=["row","col","depth","depth2","depth3"];return`
      ${ci(m)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${di(g,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${o}, ${s})) +
          depth3;
        ${li(n)}
      }
    `;const l=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],p=h[1];if(p===i&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===s&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=ia(t);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${o} +
          depth2 * ${s} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function g5(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:s,keptDims:o}=zs(e);if(s.length<e.length){const g=hi(n,s),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${ci(g)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${di(x,o)});
      }
    `}const a=e[5],i=e[4]*a,u=e[3]*i,c=e[2]*u,l=e[1]*c;if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${c}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${li(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,p=d[0],f=d[1];if(f===l&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${u}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===a&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=ia(t);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${c} + depth * ${u} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function li(n){const e=n.name,t=ne(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function x5(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",o=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=LN(n.shapeInfo.logicalShape,e.logicalShape),u=at(a),c=a-o;let l;const h=["x","y","z","w","u","v"];o===0?l="":a<2&&i.length>=1?l="coords = 0;":l=i.map(y=>`coords.${h[y+c]} = 0;`).join(`
`);let d="";a<2&&o>0?d="coords":d=n.shapeInfo.logicalShape.map((y,b)=>`coords.${h[b+c]}`).join(", ");let p="return outputValue;";const m=ne(n.shapeInfo.logicalShape)===1,x=ne(e.logicalShape)===1;if(o===1&&!m&&!x)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!x)a===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(i.length){const y=o-2,b=o-1;i.indexOf(y)>-1&&i.indexOf(b)>-1?p="return vec4(outputValue.x);":i.indexOf(y)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(b)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${r}(${d});
      ${p}
    }
  `}function y5(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",o=e.texShape,a=n.shapeInfo.texShape,i=n.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!n.shapeInfo.isUniform&&i===u&&n.shapeInfo.flatOffset==null&&et(a,o))return`
      float ${s}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const c=at(u),l=LN(n.shapeInfo.logicalShape,e.logicalShape),h=u-i;let d;const p=["x","y","z","w","u","v"];i===0?d="":u<2&&l.length>=1?d="coords = 0;":d=l.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return u<2&&i>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+h]}`).join(", "),`
    float ${s}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${r}(${f});
    }
  `}function at(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Cy(n,e,t){const{newShape:r,keptDims:s}=zs(e),o=e.length,a=n&&o===3&&e[0]===1,i=a?e.slice(1):r,u=!n&&o>1&&!et(e,t)&&r.length<o||a;return{useSqueezeShape:u,uniformShape:u?i:e,keptDims:s}}function hi(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function di(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v5(n,e,t,r){const s=t.map((l,h)=>{const d={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(d.flatOffset=l.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),o=s.map(l=>l.shapeInfo),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=LX(s,a,e),u=dX(n.gl,i),c=n.createProgram(u);return Z().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(c),Object.assign({program:e,fragmentShader:u,source:i,webGLProgram:c,inShapeInfos:o,outShapeInfo:a},zN(n,e,c)))}function zN(n,e,t){const r=[],s=[];let o,a,i,u=null,c=null;c=n.getUniformLocation(t,"NAN",!1),Z().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(t,"INFINITY",!1));const l=!1;for(const h of e.variableNames){const d={name:h,uniform:n.getUniformLocation(t,h,l),offset:n.getUniformLocation(t,`offset${h}`,l)};e.enableShapeUniforms&&(d.shape=n.getUniformLocation(t,`${h}Shape`,l),d.texShape=n.getUniformLocation(t,`${h}TexShape`,l)),r.push(d)}if(e.enableShapeUniforms&&(o=n.getUniformLocation(t,"outShape",l),i=n.getUniformLocation(t,"outShapeStrides",l),a=n.getUniformLocation(t,"outTexShape",l)),e.customUniforms)for(const h of e.customUniforms)s.push(n.getUniformLocation(t,h.name,l));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:c,outShapeLocation:o,outShapeStridesLocation:i,outTexShapeLocation:a}}function VN(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,r)=>{const s=t.logicalShape,o=e[r],a=o.shape;if(!et(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(t.isUniform&&o.isUniform)return;const i=t.texShape,u=o.isUniform?null:o.texData.texShape;if(!et(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function b5(n,e,t,r,s){e.program.enableShapeUniforms||(VN(e.inShapeInfos,t),VN([e.outShapeInfo],[r]));const o=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,a[0],a[1]):n.setOutputMatrixTexture(o.texture,a[0],a[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),Z().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let u=0;u<t.length;++u){const c=t[u],{uniform:l,offset:h,shape:d,texShape:p}=e.variablesLocations[u];if(d){const{uniformShape:f}=Cy(e.program.packedInputs,c.shape,c.texData.texShape);switch(f.length){case 1:n.gl.uniform1iv(d,new Int32Array(f));break;case 2:n.gl.uniform2iv(d,new Int32Array(f));break;case 3:n.gl.uniform3iv(d,new Int32Array(f));break;case 4:n.gl.uniform4iv(d,new Int32Array(f));break}}if(p&&n.gl.uniform2i(p,c.texData.texShape[0],c.texData.texShape[1]),l!=null){if(c.isUniform){if(ne(c.shape)<2)n.gl.uniform1f(l,c.uniformValues[0]);else{let f=c.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),n.gl.uniform1fv(l,f)}continue}c.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,l,u)}}const i=e.outShapeLocation;if(i)switch(r.shape.length){case 1:n.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:n.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:n.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:n.gl.uniform4iv(i,new Int32Array(r.shape));break}if(e.outShapeStridesLocation){const u=Ee(r.shape);switch(r.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s)for(let u=0;u<e.program.customUniforms.length;++u){const c=e.program.customUniforms[u],l=e.customUniformLocations[u],h=s[u];if(c.type==="float")n.gl.uniform1fv(l,h);else if(c.type==="vec2")n.gl.uniform2fv(l,h);else if(c.type==="vec3")n.gl.uniform3fv(l,h);else if(c.type==="vec4")n.gl.uniform4fv(l,h);else if(c.type==="int")n.gl.uniform1iv(l,h);else if(c.type==="ivec2")n.gl.uniform2iv(l,h);else if(c.type==="ivec3")n.gl.uniform3iv(l,h);else if(c.type==="ivec4")n.gl.uniform4iv(l,h);else throw Error(`uniform type ${c.type} is not supported yet.`)}n.executeProgram()}function w5(n,e,t){let r="";e.concat(t).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const u=a.texData.texShape,{useSqueezeShape:c,uniformShape:l,keptDims:h}=Cy(n.packedInputs,a.shape,u);let d="",p="",f="";if(l.length===1&&n.packedInputs){const w=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];d=`${w[0]>1}_${w[1]>1}`}else if(l.length===2&&!n.packedInputs)p=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!n.packedInputs){const w=Ee(l);f=`${w[0]===u[1]}_${w[w.length-1]===u[1]}`}const m=a.shape.length,g=l.length===2&&et(a.shape,u),x=ne(a.shape)===1,y=qa(a.shape,t.shape),b=!n.packedInputs&&m===t.shape.length&&et(u,t.texData.texShape),v=n.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;r+=`${m}_${b}_${c?h:""}_${l.length}_${x}_${y}_${g}_${d}_${p}_${f}_${v}_${i}`}else{const u=a.isUniform?"uniform":a.texData.texShape;r+=`${a.shape}_${u}_${i}`}});const s=n.userCode;let o=n.constructor.name;return o+="_"+r+"_"+s+`${Z().getNumber("WEBGL_VERSION")}`,o}function dn(n){return Z().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C5{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=bc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=wn();this.outputShape=e,this.enableShapeUniforms=dn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ud(["r","c","d"],e):aa(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class I5{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=bc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=wn();this.outputShape=e,this.enableShapeUniforms=dn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ud(["r","c","d"],e):aa(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k5{constructor(e){this.variableNames=["A"],this.outTexUsage=tr.DOWNLOAD;const t=wn();this.outputShape=e,this.userCode=`
      ${MN}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S5{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=tr.DOWNLOAD;const t=wn();this.outputShape=e,this.userCode=`
      ${MN}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N5={R:0,G:1,B:2,A:3};class WN{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=wn();this.outputShape=e,this.enableShapeUniforms=dn(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let a="";for(let i=0;i<r.length;i++){const u=r[i];a+=`
          if(offset == ${i}) {
            result = values[${N5[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?wy():by(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${s.texture2D}(A, uv);
          ${a}
        }
        ${s.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T5{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=wn();this.outputShape=e,this.enableShapeUniforms=dn(this.outputShape.length);let s="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){const u=a*2+i;s+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?wy():by(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${r.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E5(n){const e=wn(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return hX(n,t)}function R5(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return gX(n,e)}function A5(n){const e=new Uint16Array([0,1,2,2,1,3]);return xX(n,e)}function Ic(n,e,t,r,s,o){vX(e,t);const a=yX(n),i=n.TEXTURE_2D;return xe(n,()=>n.bindTexture(i,a)),xe(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),xe(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),xe(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),xe(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),Z().getNumber("WEBGL_VERSION")===1?xe(n,()=>n.texImage2D(i,0,r,e,t,0,s,o,null)):xe(n,()=>n.texStorage2D(i,1,r,e,t)),xe(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function UN(n){return n.internalFormatFloat}function $5(n,e,t,r){const[s,o]=wc(e,t);return Ic(n,s,o,UN(r),r.textureFormatFloat,n.FLOAT)}function GN(n){return n.internalFormatHalfFloat}function D5(n,e,t,r){const[s,o]=wc(e,t);return Ic(n,s,o,GN(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function HN(n){return n.downloadTextureFormat}function F5(n,e,t,r){const[s,o]=wc(e,t);return Ic(n,s,o,HN(r),n.RGBA,n.UNSIGNED_BYTE)}function qN(n){return n.internalFormatPackedFloat}function O5(n,e,t,r){const[s,o]=ai(e,t);return Ic(n,s,o,qN(r),n.RGBA,n.FLOAT)}function jN(n){return n.internalFormatPackedHalfFloat}function _5(n,e,t,r){const[s,o]=ai(e,t);return Ic(n,s,o,jN(r),n.RGBA,r.textureTypeHalfFloat)}function M5(n,e,t){return xe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),FN(n,e,"clipSpacePos",t,3,20,0)&&FN(n,e,"uv",t,2,20,12)}function L5(n,e,t,r,s,o){xe(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,i,u;s instanceof Uint8Array?(a=new Uint8Array(t*r*4),i=n.UNSIGNED_BYTE,u=n.RGBA):(a=new Float32Array(t*r*4),i=n.FLOAT,u=o.internalFormatPackedFloat),a.set(s),Z().getNumber("WEBGL_VERSION")===2?xe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,r,n.RGBA,i,a)):xe(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,t,r,0,n.RGBA,i,a)),xe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function P5(n,e,t){xe(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?Z().getNumber("WEBGL_VERSION")===2?xe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):xe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):Z().getNumber("WEBGL_VERSION")===2?xe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):xe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),xe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function B5(n,e,t,r){const s=n.createBuffer();xe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,s));const i=4*4*e*t;return xe(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),xe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),xe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),s}function z5(n,e,t){const r=n,s=new Float32Array(t);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function V5(n,e,t,r){const[s,o]=wc(e,t),a=4,i=new Uint8Array(sX(e*t,a));return xe(n,()=>n.readPixels(0,0,s,o,r.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function W5(n,e,t,r,s,o,a,i){const u=n,c=new Float32Array(oX(o,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function U5(n,e,t){const r=new Float32Array(e*t*4);return xe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,r)),r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iy{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=Z().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,tX(t,e)):this.gl=Or(t),e=this.gl,Z().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>xe(o,()=>o.createVertexArray()),this.bindVertexArray=a=>xe(o,()=>o.bindVertexArray(a)),this.deleteVertexArray=a=>xe(o,()=>o.deleteVertexArray(a)),this.getVertexArray=()=>xe(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>xe(e,()=>o.createVertexArrayOES()),this.bindVertexArray=a=>xe(e,()=>o.bindVertexArrayOES(a)),this.deleteVertexArray=a=>xe(e,()=>o.deleteVertexArrayOES(a)),this.getVertexArray=()=>xe(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),Z().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Pd(this.gl,o),fr(this.gl,a))this.textureHalfFloatExtension=Pd(this.gl,a);else if(Z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),fr(this.gl,s))this.colorBufferHalfFloatExtension=Pd(this.gl,s);else if(Z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",fr(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(fr(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=R5(this.gl),this.indexBuffer=A5(this.gl),this.framebuffer=bX(this.gl),this.textureConfig=fy(this.gl,this.textureHalfFloatExtension)}get debug(){return Z().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;xe(e,()=>e.finish()),xe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),xe(e,()=>e.deleteFramebuffer(this.framebuffer)),xe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),xe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),xe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),$5(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),D5(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),F5(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),P5(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,s){this.throwIfDisposed(),L5(this.gl,e,t,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),_5(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),O5(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(ON(this.gl,this.framebuffer),this.outputTexture=null),xe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>V5(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,s,o,a){return W5(this.gl,e,t,r,s,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return z5(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);const s=B5(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if(Z().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,o=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{const a=s.clientWaitSync(o,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=o}else Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>U5(this.gl,t,r))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=E5(t));const r=fX(t);xe(t,()=>t.attachShader(r,this.vertexShader)),xe(t,()=>t.attachShader(r,e)),mX(t,r);const s=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&my(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;xe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),M5(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(xe(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&my(this.gl,this.program),xe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return this.throwIfDisposed(),r?CX(this.gl,e,t):IX(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),xe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),kX(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();const[s,o]=ai(t,r);this.setOutputMatrixTextureDriver(e,s,o)}setOutputMatrixWriteRegion(e,t,r,s){this.setOutputMatrixWriteRegionDriver(r,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&my(this.gl,this.program),Bd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}xe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),xe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Pd(this.gl,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await R1(()=>this.disposed||this.isQueryAvailable(e,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=G5(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:r}=this.itemsToPoll[t];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in Z().platform&&(r=Z().platform.setTimeoutCustom.bind(Z().platform)),R1(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),gy(this.gl,e,this.framebuffer),this.debug&&Bd(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(gy(this.gl,this.outputTexture,this.framebuffer),this.debug&&Bd(this.gl)):ON(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();const s=this.gl;gy(s,e,this.framebuffer),this.debug&&Bd(s),this.outputTexture=e,xe(s,()=>s.viewport(0,0,t,r)),xe(s,()=>s.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,s){this.throwIfDisposed(),xe(this.gl,()=>this.gl.scissor(e,t,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function G5(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:H5,bincountImpl:KN,bincountReduceImpl:q5,bitwiseAndImpl:j5,castImpl:K5,ceilImpl:X5,concatImpl:Y5,equalImpl:Q5,expImpl:J5,expm1Impl:Z5,floorImpl:e8,gatherNdImpl:t8,gatherV2Impl:n8,greaterImpl:r8,greaterEqualImpl:s8,lessImpl:o8,lessEqualImpl:a8,linSpaceImpl:i8,logImpl:u8,maxImpl:c8,maximumImpl:l8,minimumImpl:h8,multiplyImpl:d8,negImpl:p8,notEqualImpl:f8,prodImpl:m8,raggedGatherImpl:g8,raggedRangeImpl:x8,raggedTensorToTensorImpl:y8,rangeImpl:v8,rsqrtImpl:b8,scatterImpl:w8,sigmoidImpl:C8,simpleAbsImpl:XN,sliceImpl:I8,sparseFillEmptyRowsImpl:k8,sparseReshapeImpl:S8,sparseSegmentReductionImpl:YN,sqrtImpl:N8,staticRegexReplaceImpl:T8,stridedSliceImpl:E8,stringNGramsImpl:R8,stringSplitImpl:A8,stringToHashBucketFastImpl:$8,subImpl:D8,tileImpl:F8,topKImpl:O8,transposeImpl:ky,uniqueImpl:_8}=zG;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function Cn(n,e){return e===1?[n]:QN(n,e)}function M8(n,e){if(n===1)return"rc";let t="";for(let r=0;r<n;r++)t+=e[r],r<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L8{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=dn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=Cn("rc",this.rank),r=at(this.rank),s=this.getOutOfBoundsCondition(t),o=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let o=`${r===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)o=`${e[e.length-1-a]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=dn(this.outputShape.length);let r="";for(let s=0;s<4;s++){let o="thisRC = rc;";s%2===1&&(o+="thisRC.z += 1;"),s>1&&(o+="thisRC.y += 1;"),r+=`
        ${o}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${P8(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?wy():by(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}function P8(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?MX(["r","c","d"],"inputShape"):aa(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B8{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){const s=eT(t,r),o=tT(e,s,r);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=ZN(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const u=this.freeTextures[o].pop();return this.usedTextures[o].push(u),u}let i;return s===tn.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===tn.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===tn.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===tn.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===tn.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,r,s){if(this.freeTextures==null)return;const o=eT(r,s),a=tT(t,o,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=ZN(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=Z().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[a],l=c&&c.indexOf(e);if(l==null||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function z8(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function ZN(n,e,t,r,s){const o=V8(e,r);let a;if(s){const[u,c]=ai(n[0],n[1]);a=u*c}else{const[u,c]=wc(n[0],n[1]);a=u*c}const i=z8(t,o);return a*i}function V8(n,e){switch(n){case tn.PACKED_2X2_FLOAT32:return qN(e);case tn.PACKED_2X2_FLOAT16:return jN(e);case tn.UNPACKED_FLOAT32:return UN(e);case tn.UNPACKED_FLOAT16:return GN(e);case tn.PACKED_4X1_UNSIGNED_BYTE:return HN(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function W8(n){return Z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?tn.PACKED_2X2_FLOAT32:tn.UNPACKED_FLOAT32:n?tn.PACKED_2X2_FLOAT16:tn.UNPACKED_FLOAT16}function eT(n,e){if(n===tr.UPLOAD)return tn.PACKED_2X2_FLOAT32;if(n===tr.RENDER||n==null)return W8(e);if(n===tr.DOWNLOAD||n===tr.PIXELS)return tn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function tT(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ss{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=dn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const mr="if (isnan(x)) return x;",U8="return x;",nT="return abs(x);",G8="return (x >= 0.0) ? x : (exp(x) - 1.0);",H8=mr+`
  return (x < 0.0) ? 0.0 : x;
`,q8=mr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,io="return x;",j8="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K8="return x;",X8=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Y8=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Q8=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,J8="return 1.0 / (1.0 + exp(-1.0 * x));";class uo{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=dn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z8{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=dn(this.outputShape.length);const t=e.length,r=Cn("rc",t),s=at(t),o=M8(t,r),a=r.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eY=EC,tY=1e-7,nY=1e-4,Gd={};function rY(n){return n in Gd||(Gd[n]={}),Gd[n]}const sY=Z().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),oY=600;function aY(){return Z().global.screen==null?1024:Z().global.screen.height*Z().global.screen.width*window.devicePixelRatio*oY/1024/1024}class Hd extends Kf{nextDataId(){return Hd.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Z().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Iy)t=e;else{const r=Or(Z().getNumber("WEBGL_VERSION"),e);t=new Iy(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=Or(Z().getNumber("WEBGL_VERSION"));t=new Iy(r),this.binaryCache=rY(Z().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new B8(this.gpgpu),this.numMBBeforeWarning=aY(),this.texData=new T1(this,Ur())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,r,s,o,a){const i=this.makeTensorInfo(t,r),u=this.texData.get(i.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[s,o]},u.texShape=[s,o];const c=zd(t),l=new WN(c,!1,a),h=this.runWebGLProgram(l,[i],r,[[s,o]]);return h.shape=t,u.texture=null,this.disposeIntermediateTensorInfo(i),h.dataId}write(e,t,r){if((Z().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Z().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:r,values:e,usage:tr.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,r,s,o){if(Z().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:s,values:t,usage:tr.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:r,dtype:s,complexTensorInfos:o,slice:a,shape:i,isPacked:u}=t;if(a!=null){let d;u?d=new uo(i,io):d=new ss(i,io);const p=this.runWebGLProgram(d,[{dataId:e,shape:i,dtype:s}],s),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(r!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return r;const c=this.activeTimers!=null;let l;c&&(l=Nn());let h;if(s==="complex64"){const d=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);h=Is(d,p)}else h=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=Nn()-l),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const t=this.texData.get(e),{values:r,shape:s,slice:o,dtype:a,complexTensorInfos:i,isPacked:u}=t;if(o!=null){let f;u?f=new uo(s,io):f=new ss(s,io);const m=this.runWebGLProgram(f,[{dataId:e,shape:s,dtype:a}],a),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(r!=null)return this.convertAndCacheOnCPU(e);if(Z().getBool("DEBUG")&&!Z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&Z().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,l;if(a!=="complex64"&&Z().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const f=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(f.texture.texture,...Ld(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(a==="complex64"){const f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),m=f[0],g=f[1];h=Is(m,g)}else if(c==null)h=this.getValuesFromTexture(e);else{const f=ne(s);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,f)}if(l!=null&&this.disposeIntermediateTensorInfo(l),c!=null){const f=this.gpgpu.gl;xe(f,()=>f.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(e,h),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ur().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const r=this.texData.get(e),{values:s,shape:o,slice:a,dtype:i,isPacked:u,texture:c}=r;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let p;u?p=new uo(o,io):p=new ss(o,io);const f=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:i}],i),m=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),m}if(c==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),h=Ur().makeTensorFromTensorInfo(l),d=this.texData.get(l.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>Gs(s));return We(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return We(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const r=e[t];if(!cX(r))throw Z().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:r,isPacked:s}=this.texData.get(e),o=ne(t);if(Z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),p=this.texData.get(d.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Ld(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(d),f}const a=Z().getBool("WEBGL_PACK")&&s===!0,i=a?zd(t):t,u=a?new S5(i):new k5(i),c=this.runWebGLProgram(u,[{shape:i,dtype:r,dataId:e}],"float32"),l=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const o=_o(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=_o(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(o);i.kernelMs=QO(u),i.getExtraProfileInfo=()=>u.map((c,l)=>({name:a[l],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Nn(),endMs:null}}endTimer(e){return Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Nn(),e)}async getQueryTime(e){if(Z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:r,texShape:s,usage:o,isPacked:a,slice:i}=this.texData.get(e),u=i&&i.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,r),this.textureManager.releaseTexture(t,s,o,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=sY){return Z().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&ne(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Yn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return eY(e.shape,t)}packedUnaryOp(e,t,r){const s=new uo(e.shape,t),o=this.compileAndRun(s,[e],r);return Ur().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const s=XN(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(Z().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,nT,e.dtype);const t=new ss(e.shape,nT),r=this.compileAndRun(t,[e]);return Ur().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let s;if(t==="string"&&r!=null&&r.length>0&&Vi(r[0])){const o=r.map(a=>Us(a));s=this.write(o,e,t)}else s=this.write(r,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,r){return Ur().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){const t=new Z8(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new L8(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const r=[ii(e.shape),...ui(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},o=[ii(t),...ui(t)],a=new JN(o,r),i=!0,u=[r],c=this.runWebGLProgram(a,[s],e.dtype,u,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e,t){const r=this.texData.get(e),{isPacked:s,shape:o,dtype:a}=r;if(t!=null){const d=ne(o),p=t[0]*t[1]*4;A(d<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=zd(o);let u;s?u=new I5(i):u=new C5(i);const c=!0,l=[t??Ld(i)],h=this.runWebGLProgram(u,[{shape:i,dtype:a,dataId:e}],a,l,c,t);return{dtype:a,shape:o,dataId:h.dataId}}runWebGLProgram(e,t,r,s,o=!1,a){const i=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(i.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===bc.DENSE){const x=a??Ld(e.outputShape);u.texShape=x.map(y=>y*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),ne(i.shape)===0)return u.values=an(i.dtype,0),i;const c=[],l=t.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(x.dataId);if(y.texture==null){if(!e.packedInputs&&ne(x.shape)<=Z().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!y.isPacked!=!!e.packedInputs)x=y.isPacked?this.unpackTensor(x):this.packTensor(x),c.push(x),y=this.texData.get(x.dataId);else if(y.isPacked&&!Wd(y.shape,x.shape)){const b=x,v=x.shape;x.shape=y.shape,x=this.packedReshape(x,v),c.push(x),y=this.texData.get(x.dataId),b.shape=v}return{shape:x.shape,texData:y,isUniform:!1}});this.uploadToGPU(i.dataId);const h={shape:i.shape,texData:u,isUniform:!1},d=w5(e,l,h),p=this.getAndSaveBinary(d,()=>v5(this.gpgpu,e,l,h)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),Z().get("ENGINE_COMPILE_ONLY")||b5(this.gpgpu,p,l,h,s),c.forEach(x=>this.disposeIntermediateTensorInfo(x)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=Z().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const x=Nn();x-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!Z().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&o===!1){const x=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),x}return i}compileAndRun(e,t,r,s,o=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,s,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Z().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Q(()=>{if(!Z().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Z().getBool("DEBUG");Z().set("DEBUG",!1);const t=this.abs(nt(1e-8)).dataSync()[0];if(Z().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?tY:nY}uploadToGPU(e){const t=this.texData.get(e),{shape:r,dtype:s,values:o,texture:a,usage:i,isPacked:u}=t;if(a!=null)return;const c=this.activeTimers!=null;let l;c&&(l=Nn());let h=t.texShape;if(h==null&&(h=TX(r,u),t.texShape=h),o!=null){const d=zd(r);let p,f=h[1],m=h[0];const g=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(u||!g)&&([f,m]=ai(h[0],h[1])),u?p=new T5(d,g):p=new WN(d,g);const x=g?[m,f]:h,y=this.makeTensorInfo(x,s),b=this.texData.get(y.dataId);g?b.usage=tr.PIXELS:b.usage=tr.UPLOAD,b.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),f,m,o);const v=[[m,f]],C=this.runWebGLProgram(p,[y],s,v,!0),T=this.texData.get(C.dataId);t.texShape=T.texShape,t.isPacked=T.isPacked,t.usage=T.usage,Z().get("ENGINE_COMPILE_ONLY")?this.disposeData(C.dataId):(t.texture=T.texture,t.values=null,this.texData.delete(C.dataId)),this.disposeIntermediateTensorInfo(y),c&&(this.uploadWaitMs+=Nn()-l)}else{const d=this.acquireTexture(h,i,s,u);t.texture=d}}convertAndCacheOnCPU(e,t){const r=this.texData.get(e),{dtype:s}=r;return t!=null&&(r.values=iY(t,s)),r.values}acquireTexture(e,t,r,s){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*El(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const r=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(o){throw o}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await XC(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(DN(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:r,infLoc:s,nanLoc:o,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:u}=zN(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=r,e.infLoc=s,e.nanLoc=o,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=u}}createTensorFromGPUData(e,t,r){e.channels=e.channels||"RGBA";const{texture:s,height:o,width:a,channels:i}=e,u=Ur().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=u.writeTexture(s,t,r,o,a,i);return Ur().makeTensorFromDataId(c,t,r,u)}}Hd.nextDataId=0;function iY(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let r=0;r<t.length;++r)t[r]=Math.round(n[r]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Nw()&&Dw("webgl",()=>new Hd,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sy=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class ua{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=Pe(t,r),this.enableShapeUniforms=dn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ca=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class pi{constructor(e,t,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Pe(t,r);const o=this.outputShape.length;this.enableShapeUniforms=dn(o);let a="";if(s)if(o===0||ne(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${at(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=Cn("coords",o);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Un(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const uY={kernelName:uu,backendName:"webgl",kernelFunc:Un};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function co(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,o=t.makeTensorInfo(r.shape,"complex64"),a=t.texData.get(o.dataId),i=Un({inputs:{x:r},backend:t}),u=Un({inputs:{x:s},backend:t});return a.complexTensorInfos={real:i,imag:u},o}const cY={kernelName:dm,backendName:"webgl",kernelFunc:co};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rT="return (a < 0.) ? b * a : a;",sT=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function lY(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:o}=r,a=t.makeTensorInfo([],"float32",Ws(o,"float32")),i=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new pi(sT,s.shape,a.shape):new ua(rT,s.shape,a.shape),u=t.runWebGLProgram(i,[s,a],"float32");return t.disposeIntermediateTensorInfo(a),u}const hY={kernelName:Xl,backendName:"webgl",kernelFunc:lY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oT="return (a < 0.) ? b * a : a;",aT=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function dY(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e,o=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new pi(aT,r.shape,s.shape):new ua(oT,r.shape,s.shape);return t.runWebGLProgram(o,[r,s],"float32")}const pY={kernelName:fh,backendName:"webgl",kernelFunc:dY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fi="if (isnan(x)) return x;";function Qe({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:r}){return({inputs:s,backend:o})=>{const{x:a}=s,i=o,u=r||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){const h=i.texData.get(a.dataId),d=t(h.values,u);return i.makeTensorInfo(a.shape,u,d)}const c=Z().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let l;return c?l=new uo(a.shape,e):l=new ss(a.shape,n),i.runWebGLProgram(l,[a],u)}}function nn({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}){return({inputs:a,backend:i})=>{const{a:u,b:c}=a,l=i;if(r&&u.dtype==="complex64"){const f=l.texData.get(u.dataId),m=l.texData.get(c.dataId),[g,x]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(b=>{const[v,w]=b,C={dataId:v.dataId,dtype:v.dtype,shape:u.shape},T={dataId:w.dataId,dtype:w.dtype,shape:c.shape},S=new ua(n,u.shape,c.shape);return l.runWebGLProgram(S,[C,T],Bn(v.dtype,w.dtype))}),y=co({inputs:{real:g,imag:x},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(x),y}const h=o||Bn(u.dtype,c.dtype);if((u.dtype==="string"||c.dtype==="string"||l.shouldExecuteOnCPU([u,c]))&&s!=null){const f=l.texData.get(u.dataId).values,m=l.texData.get(c.dataId).values,g=u.dtype==="string"?ks(f):f,x=u.dtype==="string"?ks(m):m,[y,b]=s(u.shape,c.shape,g,x,h),v=l.makeTensorInfo(b,h),w=l.texData.get(v.dataId);return w.values=y,v}const d=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return d?p=new pi(e,u.shape,c.shape,t):p=new ua(n,u.shape,c.shape),l.runWebGLProgram(p,[u,c],h)}}function kc(n,e=!1){if(n==="linear")return e?K8:U8;if(n==="relu")return e?Y8:H8;if(n==="elu")return e?X8:G8;if(n==="relu6")return e?Q8:q8;if(n==="prelu")return e?aT:oT;if(n==="leakyrelu")return e?sT:rT;if(n==="sigmoid")return e?J8:j8;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iT{constructor(e,t,r,s=!1,o=!1,a=!1,i=null,u=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=dn(this.outputShape.length);const l=s?e[1]:e[2],h=Math.ceil(l/2),d=s?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",x="";i&&(u?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:c?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,x="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(v=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${b};
        int batchB = ${v};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uT={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class cT{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Pe(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lT="return a * b;";function Ny(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,o=Bn(r.dtype,s.dtype);if(r.dtype==="complex64"){const i=t.texData.get(r.dataId),u=t.texData.get(s.dataId),c=new cT(uT.REAL,r.shape,s.shape),l=new cT(uT.IMAG,r.shape,s.shape),h=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:r.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:s.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:s.shape}],d=t.runWebGLProgram(c,h,"float32"),p=t.runWebGLProgram(l,h,"float32"),f=co({inputs:{real:d,imag:p},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([r,s])){const i=t.texData.get(r.dataId),u=t.texData.get(s.dataId),[c,l]=d8(r.shape,s.shape,i.values,u.values,o),h=t.makeTensorInfo(l,o),d=t.texData.get(h.dataId);return d.values=c,h}let a;return Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new pi(lT,r.shape,s.shape):a=new ua(lT,r.shape,s.shape),t.runWebGLProgram(a,[r,s],o)}const fY={kernelName:xu,backendName:"webgl",kernelFunc:Ny};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mY(n,e,t){const r=[ii(n.shape),...ui(n.shape)],s={dtype:n.dtype,shape:r,dataId:n.dataId},o=[ii(e),...ui(e)],a=new JN(o,r),i=!0,u=[r],c=t.runWebGLProgram(a,[s],n.dtype,u,i);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{shape:o}=r,a=t,i=ne(s.shape),u=A1(o,i),c=ne(u);A(i===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const l=a.texData.get(s.dataId);return l.isPacked&&!Wd(s.shape,u)&&!(l.texture!==null&&Wd(l.shape,u))?mY(s,u,a):(a.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype})}const gY={kernelName:gh,backendName:"webgl",kernelFunc:fe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hT{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];const i=Math.floor(r/4)*4,u=r%4;let c="sumValue += dot(values, ones);";if(t!=null){const h=1/t;c=`sumValue += dot(values * ${Fa(h)?h.toPrecision(2):h}, ones);`}let l="";o%r>0&&(l=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xY{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];let i="0.0",u="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",u="min"):t==="max"&&(i="-1.0 / 1e-20",u="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");const l=Math.floor(r/4)*4,h=r%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(i="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(i="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${l};
        if (${h===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yY(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],r=rd(t);e.push({inSize:t,windowSize:r,outSize:Math.ceil(t/r)})}return e}function la(n,e,t,r){const s=yY(n.shape);let o=n;for(let a=0;a<s.length;a++){const{inSize:i,windowSize:u,outSize:c}=s[a];let l,h;t==="mean"?l=a===0?new hT({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c},i):new hT({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c}):l=new xY({windowSize:u,inSize:i,batchSize:n.shape[0],outSize:c},t),h=o,o=r.runWebGLProgram(l,[o],e),h.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(h)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vY{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[t[a]];this.outputShape=r,this.rank=r.length;const s=at(this.rank),o=bY(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function bY(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<n.length;s++)r[n[s]]=t[s];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wY{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(e.length);for(let l=0;l<r.length;l++)r[l]=e[t[l]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=at(this.rank),o=QN("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=o[l];const i=`vec2(${a.slice(-2).join()})`,u=`++${o[this.rank-1]} < ${r[this.rank-1]}`,c=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${u}) {
        result[1] = ${c};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${c};
        if(${u}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qd(n,e,t){const r=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wY(n.shape,e):new vY(n.shape,e);return t.runWebGLProgram(r,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CY(n,e,t,r){const s=e,o=n.shape.length,a=Ve(s,n.shape);let i=a;const u=gt(i,o),c=u!=null;let l=n;c&&(l=qd(n,u,r),i=Nt(i.length,o)),en("sum",i,o);const[h,d]=Ht(l.shape,i);let p=h;t&&(p=Dt(h,a));const f=ne(d),g=ne(n.shape)/f,x=fe({inputs:{x:l},attrs:{shape:[g,f]},backend:r}),y=ng(n.dtype),b=la(x,y,"sum",r),v=fe({inputs:{x:b},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(b),c&&r.disposeIntermediateTensorInfo(l),v}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jd(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;return CY(s,o,a,t)}const IY={kernelName:Ch,backendName:"webgl",kernelFunc:jd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function In(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{perm:o}=r,a=t,i=s.shape.length,u=new Array(i);for(let l=0;l<u.length;l++)u[l]=s.shape[o[l]];let c;if(a.shouldExecuteOnCPU([s])){const h=a.texData.get(s.dataId).values,d=ky(h,s.shape,s.dtype,o,u);c=a.makeTensorInfo(u,s.dtype);const p=a.texData.get(c.dataId);p.values=d}else c=qd(s,o,a);return c}const kY={kernelName:Pa,backendName:"webgl",kernelFunc:In};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dT=1e3;function Kd({a:n,b:e,transposeA:t,transposeB:r,backend:s,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){const c=n.shape.length,l=e.shape.length,h=t?n.shape[c-2]:n.shape[c-1],d=r?e.shape[l-1]:e.shape[l-2],p=t?n.shape[c-1]:n.shape[c-2],f=r?e.shape[l-2]:e.shape[l-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),x=ne(m),y=ne(g),v=Pe(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);A(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${r} must match.`);const w=t?[x,h,p]:[x,p,h],C=r?[y,f,d]:[y,d,f],T=fe({inputs:{x:n},backend:s,attrs:{shape:w}}),S=fe({inputs:{x:e},backend:s,attrs:{shape:C}}),k=[T,S],N=Math.max(x,y),I=t?T.shape[1]:T.shape[2],E=o!=null,F=a!=null,O=u==="leakyrelu",D=u!=null?kc(u,!0):null,M=E||F||O||D!=null;let P;if((p===1||f===1)&&I>dT&&M===!1){let z=T,W=S;t&&(z=In({inputs:{x:T},backend:s,attrs:{perm:[0,2,1]}}),k.push(z)),r&&(W=In({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),k.push(W));const j=f!==1,Y=f===1;let J=z;j&&(J=fe({inputs:{x:z},backend:s,attrs:{shape:[N,I,1]}}),k.push(J));const ae=f===1?2:1;let oe=W;Y&&(oe=fe({inputs:{x:W},backend:s,attrs:{shape:[N,1,I]}}),k.push(oe));const ue=Ny({inputs:{a:J,b:oe},backend:s});P=jd({inputs:{x:ue},backend:s,attrs:{axis:ae,keepDims:!0}}),k.push(ue)}else{const z=Bn(n.dtype,e.dtype),W=new iT(w,C,[N,p,f],t,r,E,D,F,O),j=[T,S];if(o!=null&&j.push(o),F&&j.push(a),O){const Y=s.makeTensorInfo([],"float32",Ws(i,"float32"));j.push(Y),k.push(Y)}P=s.runWebGLProgram(W,j,z)}const L=fe({inputs:{x:P},backend:s,attrs:{shape:v}});k.push(P);for(const z of k)s.disposeIntermediateTensorInfo(z);return L}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SY(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=r;return Kd({a:s,b:o,transposeA:u,transposeB:c,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:h,activation:l})}const NY={kernelName:Rh,backendName:"webgl",kernelFunc:SY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pT="return abs(x);";function TY(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const o=t.texData.get(r.dataId),a=XN(o.values);return t.makeTensorInfo(r.shape,r.dtype,a)}let s;return Z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new uo(r.shape,pT):s=new ss(r.shape,pT),t.runWebGLProgram(s,[r],r.dtype)}const EY={kernelName:Rl,backendName:"webgl",kernelFunc:TY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RY=mr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,AY=Qe({opSnippet:RY}),$Y={kernelName:Wi,backendName:"webgl",kernelFunc:AY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DY=mr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,FY=Qe({opSnippet:DY}),OY={kernelName:Ui,backendName:"webgl",kernelFunc:FY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fT="return a + b;",_Y=nn({opSnippet:fT,packedOpSnippet:fT,supportsComplex:!0,cpuKernelImpl:H5}),MY={kernelName:La,backendName:"webgl",kernelFunc:_Y};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LY{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`float v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PY{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`vec4 v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xd(n){const{inputs:e,backend:t}=n,r=e;if(r.length===1)return Un({inputs:{x:r[0]},backend:t});if(r.length>Z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(r.length/2),c=Xd({inputs:r.slice(0,u),backend:t}),l=Xd({inputs:r.slice(u),backend:t});return Xd({inputs:[c,l],backend:t})}const s=r.map(u=>u.dtype).reduce((u,c)=>Bn(u,c)),o=r.map(u=>u.shape),i=Z().getBool("WEBGL_PACK")?new PY(r[0].shape,o):new LY(r[0].shape,o);return t.runWebGLProgram(i,r,s)}const BY={kernelName:om,backendName:"webgl",kernelFunc:Xd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zY(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=Ve(o,s.shape);let c=u;const l=gt(c,i);let h=s;l!=null&&(h=In({inputs:{x:s},backend:t,attrs:{perm:l}}),c=Nt(c.length,i)),en("all",c,i);const[d,p]=Ht(h.shape,c),f=ne(p),m=fe({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=la(m,m.dtype,"all",t);let x;if(a){const y=Dt(d,u);x=fe({inputs:{x:g},backend:t,attrs:{shape:y}})}else x=fe({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(h),x}const VY={kernelName:am,backendName:"webgl",kernelFunc:zY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WY(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=Ve(o,s.shape);let c=u;const l=gt(c,i);let h=s;l!=null&&(h=In({inputs:{x:s},backend:t,attrs:{perm:l}}),c=Nt(c.length,i)),en("any",c,i);const[d,p]=Ht(h.shape,c),f=ne(p),m=fe({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=la(m,m.dtype,"any",t);let x;if(a){const y=Dt(d,u);x=fe({inputs:{x:g},backend:t,attrs:{shape:y}})}else x=fe({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(h),x}const UY={kernelName:im,backendName:"webgl",kernelFunc:WY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GY{constructor(e,t,r){this.variableNames=["A"];const{windowSize:s,batchSize:o,outSize:a}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const i=t==="max"?">":"<",u=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HY{constructor(e,t,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,A(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],a=Math.ceil(o/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,c=at(u),l=Cn("coords",u);let h,d;if(a===1){d=u+1;const S=at(d);h=`
        ${S} sourceLocR = ${S}(${l.join()}, 0);
        ++${l[u-1]};
        ${S} sourceLocG = ${S}(${l.join()}, 0);
        ++${l[u-2]};
        ${S} sourceLocA = ${S}(${l.join()}, 0);
        --${l[u-1]};
        ${S} sourceLocB = ${S}(${l.join()}, 0);
        --${l[u-2]};`}else d=u,h=`
        ${c} sourceLocR = coords;
        ++${l[u-1]};
        ${c} sourceLocG = coords;
        ++${l[u-2]};
        ${c} sourceLocA = coords;
        --${l[u-1]};
        ${c} sourceLocB = coords;
        --${l[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],m=p.map(S=>"int "+S),g=Cn("sourceLocR",d-1).concat("inIdx.r"),x=Cn("sourceLocG",d-1).concat("inIdx.g"),y=Cn("sourceLocB",d-1).concat("inIdx.b"),b=Cn("sourceLocA",d-1).concat("inIdx.a"),v=r==="max"?"greaterThan":"lessThan",w=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()})));`,C=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,T=s?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${T}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${l[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${l[u-2]} < ${i[u-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${C};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${C};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mT(n,e,t,r=null){let s=e.shape[0],o=e.shape[1];r!=null&&(s=r.shape[0],o=r.shape[1]);const a=rd(o),i={windowSize:a,inSize:o,batchSize:s,outSize:Math.ceil(o/a)},u=new GY(i,t,r==null),c=[e];r!=null&&c.push(r);const l=n.runWebGLProgram(u,c,"int32");if(l.shape[1]===1)return l;const h=mT(n,e,t,l);return n.disposeIntermediateTensorInfo(l),h}function gT(n,e,t,r=null){const s=r!=null?r.shape:e.shape,o=s[s.length-1],a=rd(o),i=new HY(s,a,t,r==null),u=r==null?[e]:[e,r],c=n.runWebGLProgram(i,u,"int32");if(c.shape.length===e.shape.length){const l=gT(n,e,t,c);return n.disposeIntermediateTensorInfo(c),l}return c}function xT(n,e,t,r){const s=[t];if(en("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!Z().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],a=n.texData.get(e.dataId),i=a!==null&&a.isPacked;let u=e;i&&(u=n.unpackTensor(e),o.push(u));const[c,l]=Ht(u.shape,s),h=ne(l),d=fe({inputs:{x:u},backend:n,attrs:{shape:[-1,h]}});o.push(d);const p=mT(n,d,r);o.push(p);const f=fe({inputs:{x:p},backend:n,attrs:{shape:c}});return o.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return gT(n,e,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qY(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;let a=Ve(o,s.shape);const i=gt(a,s.shape.length);let u=s;const c=[];i!=null&&(u=In({inputs:{x:s},backend:t,attrs:{perm:i}}),c.push(u),a=Nt(a.length,u.shape.length)),en("argMax",[a[0]],u.shape.length);const l=xT(t,u,a[0],"max");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),l}const jY={kernelName:Al,backendName:"webgl",kernelFunc:qY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KY(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;let a=Ve(o,s.shape);const i=gt(a,s.shape.length);let u=s;const c=[];i!=null&&(u=In({inputs:{x:s},backend:t,attrs:{perm:i}}),c.push(u),a=Nt(a.length,u.shape.length)),en("argMin",[a[0]],u.shape.length);const l=xT(t,u,a[0],"min");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),l}const XY={kernelName:$l,backendName:"webgl",kernelFunc:KY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YY=mr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,QY=Qe({opSnippet:YY}),JY={kernelName:Gi,backendName:"webgl",kernelFunc:QY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZY=mr+"return log(x + sqrt(x * x + 1.0));",e7=Qe({opSnippet:ZY}),t7={kernelName:Hi,backendName:"webgl",kernelFunc:e7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n7=mr+`
  return atan(x);
`,r7=Qe({opSnippet:n7}),s7={kernelName:qi,backendName:"webgl",kernelFunc:r7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o7=Sy+`
  return atan(a, b);
`,a7=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ca+`
  return result;
`,i7=nn({opSnippet:o7,packedOpSnippet:a7}),u7={kernelName:Ki,backendName:"webgl",kernelFunc:i7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c7=mr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,l7=Qe({opSnippet:c7}),h7={kernelName:ji,backendName:"webgl",kernelFunc:l7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sc{constructor(e,t,r,s=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,x=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(m||(y="-1.0 / 1e-20"),r){const S=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${S} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?o?g:x:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const b="max";let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / max(count, 1.0)");const w=Math.floor(a/4)*4,C=a%4,T=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${T}
          }

          int xC = xCCorner + ${w};
          if (${C===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${C===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${C===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${T}
          }
        }
        setOutput(${v});
      }
    `}}class Ty{constructor(e,t,r,s=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,u=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.front,x=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b=t==="avg";let v="0.0";if(b||(v="-1.0 / 1e-20"),r){const N=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${c});
        const ivec3 pads = ivec3(${g}, ${x}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${N} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let C=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(C="avgValue / max(count, 1.0)");const T=Math.floor(a/4)*4,S=a%4,k=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${c});
      const ivec3 pads = ivec3(${g}, ${x}, ${y});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${T}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${k}
            }

            int xC = xCCorner + ${T};
            if (${S===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${k}
            } else if (${S===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${k}
            } else if (${S===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${k}
            }
          }
        }
        setOutput(${C});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d7(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Cc(s,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;A(cn(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=ar(s.shape,o,a,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&et(l.inShape,l.outShape))return Un({inputs:{x:s},backend:t});const h=new Sc(l,"avg",!1);return t.runWebGLProgram(h,[s],"float32")}const p7={kernelName:Dl,backendName:"webgl",kernelFunc:d7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:c}=r,l=[1,1,1],h=ys(s.shape,o,a,l,i,u,c),d=new Ty(h,"avg",!1);return t.runWebGLProgram(d,[s],"float32")}const m7={kernelName:Fl,backendName:"webgl",kernelFunc:f7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g7{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=u-1-e.padInfo.top,h=c-1-e.padInfo.left,d=1/(t*r);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class x7{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=h-1-e.padInfo.front,m=d-1-e.padInfo.top,g=p-1-e.padInfo.left,x=1/(t*r*s);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y7(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,h=[1,1,1],d=ys(a.shape,i,u,h,c,l),p=new x7(d);return t.runWebGLProgram(p,[s],a.dtype)}const v7={kernelName:cm,backendName:"webgl",kernelFunc:y7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o;Cc([s,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:c}=r,l=ar(a.shape,i,u,1,c),h=new g7(l);return t.runWebGLProgram(h,[s],a.dtype)}const w7={kernelName:um,backendName:"webgl",kernelFunc:b7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C7(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o}=e,{transposeA:a,transposeB:i}=r;return Kd({a:s,b:o,transposeA:a,transposeB:i,backend:t})}const I7={kernelName:Ol,backendName:"webgl",kernelFunc:C7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k7{constructor(e,t,r,s,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Pe(e,t),Pe(e,r);let i="0.0";s!=null&&(Pe(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";o!=null&&(Pe(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S7{constructor(e,t,r,s,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Pe(e,t),Pe(e,r);let i="vec4(0.0)";s!=null&&(Pe(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";o!=null&&(Pe(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N7={kernelName:ql,backendName:"webgl",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,mean:s,variance:o,offset:a,scale:i}=n;A(s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(a==null||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(i==null||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);const c=[r,s,o];let l=null;a!=null&&(l=a.shape,c.push(a));let h=null;i!=null&&(h=i.shape,c.push(i));const d=Z().getBool("WEBGL_PACK_NORMALIZATION")?new S7(r.shape,s.shape,o.shape,l,h,u):new k7(r.shape,s.shape,o.shape,l,h,u);return e.runWebGLProgram(d,c,c[0].dtype)}};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T7{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=at(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=E7(this.rank);let s;const o=e.map((a,i)=>`sourceLoc.${Ey[i]} = start[${i}] + coords.${Ey[i]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${r}));
      }
    `}}const Ey=["x","y","z","w","u","v"];function E7(n){if(n===1)return"sourceLoc";if(n<=6)return Ey.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R7{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=at(this.rank),r=Cn("coords",this.rank),s=Cn("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${o})`,i=`
      result.x = ${a};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,h)=>`start[${h}]`).join()});`:e.map((l,h)=>`${s[h]} = ${r[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A7(n,e,t,r){const s=r.texData.get(n.dataId),o=r.makeTensorInfo(t,n.dtype),a=r.texData.get(o.dataId);Object.assign(a,s),a.refCount=1,a.shape=t,a.dtype=n.dtype;let i=Yg(e,Ee(n.shape));s.slice&&(i+=s.slice.flatOffset),a.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||n.dataId};const u=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,u+1),o}function mi(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,size:a}=r,[i,u]=nd(s,o,a);if(jg(s,i,u),ne(u)===0)return t.makeTensorInfo(u,s.dtype,[]);if(t.shouldExecuteOnCPU([s])||s.dtype==="string"){const h=t.texData.get(s.dataId),d=I8(h.values,i,u,s.shape,s.dtype);return t.makeTensorInfo(u,s.dtype,d)}const{isPacked:c}=t.texData.get(s.dataId),l=Xg(s.shape,i,u);if(c||!l){const h=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new R7(u):new T7(u),d=[i];return t.runWebGLProgram(h,[s],s.dtype,d)}return t.uploadToGPU(s.dataId),A7(s,i,u,t)}const $7={kernelName:wh,backendName:"webgl",kernelFunc:mi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D7={kernelName:_l,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,crops:a}=r;A(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((y,b)=>y*b),u=Ju(s.shape,o,i),c=Zu(u.length,o.length),l=ec(s.shape,o,i),h=tx(a,o.length),d=nx(l,a,o.length),p=[],f=fe({inputs:{x:s},backend:t,attrs:{shape:u}}),m=In({inputs:{x:f},backend:t,attrs:{perm:c}}),g=fe({inputs:{x:m},backend:t,attrs:{shape:l}}),x=mi({inputs:{x:g},backend:t,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(y=>t.disposeIntermediateTensorInfo(y)),x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F7(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a}=r,i=t.readSync(s.dataId),u=t.readSync(o.dataId),c=KN(i,u,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,c)}const O7={kernelName:lm,backendName:"webgl",kernelFunc:F7};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _7=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,M7=`
  return float(int(a.r) & int(b.r));
`;function L7(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,o=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=Z().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([r,s])||a===1){const u=t.texData.get(r.dataId).values,c=t.texData.get(s.dataId).values,[l,h]=j5(r.shape,s.shape,u,c,r.dtype),d=t.makeTensorInfo(h,r.dtype),p=t.texData.get(d.dataId);return p.values=l,d}let i;return o?i=new pi(_7,r.shape,s.shape,!1):i=new ua(M7,r.shape,s.shape),t.runWebGLProgram(i,[r,s],r.dtype)}const P7={kernelName:hm,backendName:"webgl",kernelFunc:L7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B7(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e,o=t.readSync(r.dataId),a=t.readSync(s.dataId),i=Pe(Array.from(o),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const z7={kernelName:L1,backendName:"webgl",kernelFunc:B7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yT=nn({opSnippet:"return float(a != b);",cpuKernelImpl:f8,dtype:"bool"}),V7={kernelName:ch,backendName:"webgl",kernelFunc:yT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nc(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return Un({inputs:{x:s.complexTensorInfos.real},backend:t})}const W7={kernelName:Pm,backendName:"webgl",kernelFunc:Nc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U7="return float(int(x));";function G7(n,e){const t=new ss(n.shape,U7),r=e.runWebGLProgram(t,[n],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ry(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return Un({inputs:{x:s},backend:t});const a=qt(s.shape),i=Ry({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),u=co({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),u}if(s.dtype==="complex64"){const a=Nc({inputs:{input:s},backend:t}),i=Ry({inputs:{x:a},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(a),i}if(!$1(s.dtype,o)){const a=Un({inputs:{x:s},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(t.shouldExecuteOnCPU([s])){const a=t.texData.get(s.dataId).values,[i,u,c]=K5(a,s.shape,s.dtype,o);return t.makeTensorInfo(i,u,c)}if(o==="int32")return G7(s,t);if(o==="bool"){const a=t.makeTensorInfo([],"bool",an("bool",1)),u=yT({inputs:{a:s,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}const H7={kernelName:Xi,backendName:"webgl",kernelFunc:Ry};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vT="return ceil(x);",q7=Qe({opSnippet:vT,packedOpSnippet:vT,cpuKernelImpl:X5}),j7={kernelName:Yi,backendName:"webgl",kernelFunc:q7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K7{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X7{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y7(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{clipValueMin:o,clipValueMax:a}=r;let i;Z().getBool("WEBGL_PACK_CLIP")?i=new X7(s.shape):i=new K7(s.shape);const u=[[o],[a]];return t.runWebGLProgram(i,[s],s.dtype,u)}const Q7={kernelName:Qi,backendName:"webgl",kernelFunc:Y7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J7{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bT(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function Z7(n){const{inputs:e,backend:t}=n,{x:r}=e,s=t.texData.get(r.dataId),o=new J7(r.shape),a=[bT(r,s.complexTensorInfos.real),bT(r,s.complexTensorInfos.imag)];return t.runWebGLProgram(o,a,a[0].dtype)}const e9={kernelName:Ml,backendName:"webgl",kernelFunc:Z7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t9{constructor(e){this.outputShape=[],this.outputShape=Xr(e,1),this.variableNames=e.map((a,i)=>`T${i}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const i=t[a-1];r.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const s=t.length,o=t[t.length-1];r.push(`else setOutput(getT${s}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n9{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Xr(e,t);const r=this.outputShape,s=r.length,o=at(s),a=Cn("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((m,g)=>`T${g}`);const u=new Array(e.length-1);u[0]=e[0][t];for(let m=1;m<u.length;m++)u[m]=u[m-1]+e[m][t];const c=i[t],l=i.slice(-2),h=i.join();let d=`if (${c} < ${u[0]}) {
        return getChannel(
            getT0(${h}), vec2(${l.join()}));
        }`;for(let m=1;m<u.length;m++){const g=u[m-1];d+=`
        if (${c} < ${u[m]}  && ${c} >= ${u[m-1]}) {
          return getChannel(
            getT${m}(${Yd(i,c,g)}),
            vec2(${Yd(l,c,g)}));
        }`}const p=u.length,f=u[u.length-1];d+=`
        return getChannel(
          getT${p}(${Yd(i,c,f)}),
          vec2(${Yd(l,c,f)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${r[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${r[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${r[s-2]} &&
            ${a[s-1]} < ${r[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function Yd(n,e,t){const r=n.indexOf(e);return n.map((o,a)=>a===r?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qd(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return Un({inputs:{x:s.complexTensorInfos.imag},backend:t})}const r9={kernelName:Am,backendName:"webgl",kernelFunc:Qd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tc(n,e,t){const r=n[0].dtype;if(r==="complex64"){const p=n.map(y=>Nc({inputs:{input:y},backend:t})),f=n.map(y=>Qd({inputs:{input:y},backend:t})),m=Tc(p,e,t),g=Tc(f,e,t),x=co({inputs:{real:m,imag:g},backend:t});return p.forEach(y=>t.disposeIntermediateTensorInfo(y)),f.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),x}let s=t.shouldExecuteOnCPU(n);if(r==="string"&&(s=!0),s){const p=n.map(v=>{const C=[-1,ne(v.shape.slice(e))];return fe({inputs:{x:v},backend:t,attrs:{shape:C}})}),f=p.map(v=>({vals:t.readSync(v.dataId),shape:v.shape})),m=Xr(p.map(v=>v.shape),1),g=p[0].shape[0]===1,x=Y5(f,m,r,g),y=Xr(n.map(v=>v.shape),e),b=t.makeTensorInfo(y,r,x);return p.forEach(v=>t.disposeIntermediateTensorInfo(v)),b}const o=n.filter(p=>ne(p.shape)>0),a=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const p=a?new ss(n[0].shape,io):new uo(n[0].shape,io);return t.runWebGLProgram(p,n,r)}const i=Z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>i){const p=[];for(let m=0;m<o.length;m+=i){const g=o.slice(m,m+i);p.push(Tc(g,e,t))}const f=Tc(p,e,t);for(const m of p)t.disposeIntermediateTensorInfo(m);return f}if(a){const p=new n9(o.map(f=>f.shape),e);return t.runWebGLProgram(p,o,r)}const{tensors2D:u,outShape:c}=s9(o,e,t),l=new t9(u.map(p=>p.shape)),h=t.runWebGLProgram(l,u,r);u.forEach(p=>t.disposeIntermediateTensorInfo(p));const d=fe({inputs:{x:h},attrs:{shape:c},backend:t});return t.disposeIntermediateTensorInfo(h),d}function s9(n,e,t){const r=Xr(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>fe({inputs:{x:o},attrs:{shape:[-1,ne(o.shape.slice(e))]},backend:t})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wT(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,o=Ve(s,e[0].shape)[0],a=e.map(c=>c.shape);Jg(a,o);const i=Xr(e.map(c=>c.shape),o);if(ne(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(c=>ne(c.shape)>0);return u.length===1?Un({inputs:{x:u[0]},backend:t}):Tc(u,o,t)}const o9={kernelName:Ll,backendName:"webgl",kernelFunc:wT};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CT{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,g=e.dataFormat==="channelsLast",x=g?1:2,y=g?2:3,b=g?3:1;let v="",w="";r&&(s?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:v=`
          float activation(float x) {
            ${r}
          }
        `,w="result = activation(result);");const C=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${u}, ${c});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${C}
        ${w}
        setOutput(result);
      }
    `}}class a9{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,r=e.padInfo.top,s=e.padInfo.left,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${r}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IT{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=dn(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,h=l;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)d+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<l;g++)d+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(h+1)/2;g++){const x=g*2;if(d+=`
           xC = xCCorner + ${x*u};
           `,i===1){if(x<l&&(a%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,u===1&&x>0?d+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<l)){const y=a%2===0?Xf(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,u>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:d+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):y===1?d+=`
                     xC${x+1} = xTexelC${x};
                     `:d+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<l&&(a%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<l&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<l&&(d+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<l&&(d+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<l&&(d+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let p="",f="";r&&(s?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:o?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:p=`vec4 activation(vec4 x) {
           ${r}
         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i9{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=dn(this.outputShape.length);const{dataFormat:r}=t,s=wn(),o=r==="channelsLast",a=o?1:2,i=o?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let l=0;l<=1;l++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${l};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jd(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function kT({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const u=n.shape,c=r.texData.get(n.dataId),l=t.inChannels,h=u[0]*u[1]*u[2],d=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,m=!1;let g;const x=[];if(o!=null){const v=Jd(o.shape,p);v!=null&&(o=fe({inputs:{x:o},backend:r,attrs:{shape:v}}),x.push(o))}if(s!=null){const v=Jd(s.shape,p);v!=null&&(s=fe({inputs:{x:s},backend:r,attrs:{shape:v}}),x.push(s))}if(!((h===1||d===1)&&l>dT)&&c.isPacked&&p&&c.texture!=null&&u[2]%2!==0&&et(c.shape.slice(-3),u.slice(-3))){const v=u[0]*u[1]*(u[2]+1),w={dataId:n.dataId,shape:[1,v,t.inChannels],dtype:n.dtype},C=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,A(Wd(c.shape,w.shape),()=>`packed reshape ${c.shape} to ${w.shape} isn't free`);const T=fe({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}});x.push(T);const S=Kd({a:w,b:T,backend:r,transposeA:f,transposeB:m,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),k=r.texData.get(S.dataId);A(k.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=C,k.shape=t.outShape,g=Un({inputs:{x:S},backend:r}),g.shape=t.outShape,x.push(S)}else{const v=t.outHeight*t.outWidth,w=fe({inputs:{x:n},backend:r,attrs:{shape:p?[t.batchSize,v,t.inChannels]:[t.batchSize,t.inChannels,v]}}),C=fe({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}}),T=Kd({a:p?w:C,b:p?C:w,transposeA:!p,transposeB:m,backend:r,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a});g=fe({inputs:{x:T},backend:r,attrs:{shape:t.outShape}}),x.push(w),x.push(C),x.push(T)}for(const v of x)r.disposeIntermediateTensorInfo(v);return g}function ST({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:h,outHeight:d,dataFormat:p}=t,f=p==="channelsLast",m=u*c*l,g=d*h,x=[t.batchSize,m,g],y=!0,b=!1,v=[];if(o!=null){const L=Jd(o.shape,f);L!=null&&(o=fe({inputs:{x:o},backend:r,attrs:{shape:L}}),v.push(o))}if(s!=null){const L=Jd(s.shape,f);L!=null&&(s=fe({inputs:{x:s},backend:r,attrs:{shape:L}}),v.push(s))}const w=fe({inputs:{x:e},backend:r,attrs:{shape:[1,m,ne(e.shape)/m]}});v.push(w);const C=new i9(x,t),T=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],S=r.runWebGLProgram(C,[n],"float32",T),k=fe({inputs:{x:S},backend:r,attrs:{shape:x}});v.push(S),v.push(k);const N=s!=null,I=o!=null,E=i==="leakyrelu",F=i?kc(i,!0):null,O=new iT(f?k.shape:w.shape,f?w.shape:k.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],y,b,N,F,I,E),D=f?[k,w]:[w,k];if(s&&D.push(s),I&&D.push(o),E){const L=r.makeTensorInfo([],"float32",Ws(a,"float32"));D.push(L),v.push(L)}const M=r.runWebGLProgram(O,D,"float32"),P=fe({inputs:{x:M},backend:r,attrs:{shape:t.outShape}});v.push(M);for(const L of v)r.disposeIntermediateTensorInfo(L);return P}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u9(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dataFormat:u,dilations:c,dimRoundingMode:l}=r,h=vs(u),d=Zt(s.shape,o.shape,a,c,i,l,!1,h);let p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=kT({x:s,filter:o,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&Z().getBool("WEBGL_EXP_CONV")){const m=new IT(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=t.runWebGLProgram(m,[s,o],"float32",g)}else if(Z().getBool("WEBGL_CONV_IM2COL"))p=ST({x:s,filter:o,convInfo:d,backend:t});else{const m=new CT(d);p=t.runWebGLProgram(m,[s,o],"float32")}const f=fe({inputs:{x:p},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(p),f}const c9={kernelName:Pl,backendName:"webgl",kernelFunc:u9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l9{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class h9{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,u=r-1-e.padInfo.left,c=a?1:2,l=a?2:3,h=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class d9{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class p9{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=t-1-e.padInfo.front,c=r-1-e.padInfo.top,l=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${c}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f9(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:c,filterShape:l}=r,h=vs(u),d=Zt(s.shape,l,a,1,i,c,!1,h),p=new l9(d);return t.runWebGLProgram(p,[s,o],"float32")}const m9={kernelName:pm,backendName:"webgl",kernelFunc:f9};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g9{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=dn(this.outputShape.length);const t=e.filterHeight,r=e.filterWidth,s=t-1-e.padInfo.top,o=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x9(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{inputShape:a,strides:i,pad:u,dataFormat:c,dimRoundingMode:l}=r,h=vs(c),d=Zt(a,o.shape,i,1,u,l,!1,h);if(Z().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const p=[[d.strideHeight,d.strideWidth]],f=new g9(d);return t.runWebGLProgram(f,[s,o],"float32",p)}else{const p=new h9(d);return t.runWebGLProgram(p,[s,o],"float32")}}const y9={kernelName:Bl,backendName:"webgl",kernelFunc:x9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v9(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,c=qs(s.shape,o.shape,a,u,i),l=new a9(c);return t.runWebGLProgram(l,[s,o],"float32")}const b9={kernelName:zl,backendName:"webgl",kernelFunc:v9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w9(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:i,filterShape:u}=r,c=qs(s.shape,u,a,1,i),l=new d9(c);return t.runWebGLProgram(l,[s,o],"float32")}const C9={kernelName:fm,backendName:"webgl",kernelFunc:w9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I9(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{pad:a,strides:i,inputShape:u}=r,c=qs(u,o.shape,i,1,a),l=new p9(c);return t.runWebGLProgram(l,[s,o],"float32")}const k9={kernelName:mm,backendName:"webgl",kernelFunc:I9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S9=fi+`
  return cos(x);
`,N9=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${ca}
  return result;
`,T9=Qe({opSnippet:S9,packedOpSnippet:N9}),E9={kernelName:Ji,backendName:"webgl",kernelFunc:T9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R9=Qe({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`}),A9={kernelName:Zi,backendName:"webgl",kernelFunc:R9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $9{constructor(e,t,r,s,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,u,c]=e,[l]=t,[h,d]=r;this.outputShape=[l,h,d,c];const p=s==="bilinear"?1:0,[f,m]=[`${i-1}.0`,`${u-1}.0`],[g,x,y]=h>1?[`${(i-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[b,v,w]=d>1?[`${(u-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${v};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D9={kernelName:xm,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:o,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:c}=r,l=new $9(s.shape,o.shape,i,u,c);return t.runWebGLProgram(l,[s,o,a],"float32")}};var Ec;(function(n){n.Prod="*",n.Sum="+"})(Ec||(Ec={}));class NT{constructor(e,t,r,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=this.op===Ec.Prod?"1.0":"0.0",i=r?a:`getX(${TT(o,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let c="",l="";r?(c=s?`end != ${u-1}`:"end != 0",l=s?"end + 1":"end - 1"):(c=s?`end + pow2 < ${u}`:"end >= pow2",l=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${at(o)} coords = getOutputCoords();
        int end = ${ET(o,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${l};
          ${ET(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${TT(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function TT(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function ET(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RT(n,e,t,r,s,o){const a=e.shape.length,i=gt([r],a);let u=e;i!=null&&(u=In({inputs:{x:e},backend:t,attrs:{perm:i}}));const c=Nt(1,a)[0];if(c!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const l=u.shape[c];let h=Un({inputs:{x:u},backend:t});for(let d=0;d<=Math.ceil(Math.log2(l))-1;d++){const p=new NT(n,u.shape,!1,o),f=[[d]],m=h;h=t.runWebGLProgram(p,[h],h.dtype,f),t.disposeIntermediateTensorInfo(m)}if(s){const d=new NT(n,u.shape,s,o),p=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(p)}if(i!=null){const d=js(i),p=In({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(u),p}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F9(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return RT(Ec.Prod,s,t,o,a,i)}const O9={kernelName:gm,backendName:"webgl",kernelFunc:F9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _9(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return RT(Ec.Sum,s,t,o,a,i)}const M9={kernelName:Vl,backendName:"webgl",kernelFunc:_9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L9(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a,binaryOutput:i}=r;if(s.shape.length===1){const u=t.readSync(s.dataId),c=t.readSync(o.dataId),l=KN(u,c,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,l)}else if(s.shape.length===2){const u=t.bufferSync(s),c=t.bufferSync(o),l=q5(u,c,a,i);return t.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const P9={kernelName:ym,backendName:"webgl",kernelFunc:L9};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B9{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z9(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:o,dataFormat:a}=r,i=s.shape[0],u=a==="NHWC"?s.shape[1]:s.shape[2],c=a==="NHWC"?s.shape[2]:s.shape[3],l=a==="NHWC"?s.shape[3]:s.shape[1],h=u*o,d=c*o,p=l/(o*o),f=a==="NHWC"?[i,h,d,p]:[i,p,h,d],m=new B9(f,o,a);return t.runWebGLProgram(m,[s],s.dtype)}const V9={kernelName:vm,backendName:"webgl",kernelFunc:z9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AT{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=dn(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,u=e.outChannels/e.inChannels;let c="",l="";r&&(s?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:c=`
          float activation(float x) {
            ${r}
          }
        `,l="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $T{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=dn(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,h=e.filterWidth,d=h;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<h;x++)p+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;p+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let x=0;x<h;x++)p+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(d+1)/2;x++){const y=x*2;if(p+=`
          xC = xCCorner + ${y*c};
          `,u===1){if(y<h&&(i%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,c===1&&y>0?p+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<h)){const b=i%2===0?Xf(c):c;c%2===0&&i%2===1||c%2!==0&&i%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${b};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,c>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:p+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):b===1?p+=`
                    xC${y+1} = xTexelC${y};
                    `:p+=`
                    xCOffset = xC + ${b};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<h&&(i%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<h&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<h&&(p+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<h&&(p+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<h&&(p+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";r&&(s?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:f=`vec4 activation(vec4 x) {
          ${r}
        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W9(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:c}=r;let l=u;l==null&&(l=[1,1]),A(cn(a,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const h=Zt(s.shape,o.shape,a,l,i,c,!0);let d;Z().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new $T(h):d=new AT(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[s,o],"float32",p)}const U9={kernelName:Wl,backendName:"webgl",kernelFunc:W9};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G9{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class H9{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=t-1-e.padInfo.top,i=r-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q9(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,filterShape:l}=r,h=Zt(s.shape,l,a,i,u,c,!0),d=new G9(h);return t.runWebGLProgram(d,[s,o],"float32")}const j9={kernelName:bm,backendName:"webgl",kernelFunc:q9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K9(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:c,inputShape:l}=r,h=Zt(l,o.shape,a,i,u,c,!0),d=new H9(h);return t.runWebGLProgram(d,[s,o],"float32")}const X9={kernelName:wm,backendName:"webgl",kernelFunc:K9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y9{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q9(n){const{inputs:e,backend:t}=n,{x:r}=e,s=[...r.shape,...r.shape],o=ne(r.shape),a=fe({inputs:{x:r},backend:t,attrs:{shape:[o]}}),i=new Y9(o),u=t.runWebGLProgram(i,[a],a.dtype),c=fe({inputs:{x:u},backend:t,attrs:{shape:s}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),c}const J9={kernelName:P1,backendName:"webgl",kernelFunc:Q9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z9{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:r,padInfo:s,strideHeight:o,strideWidth:a,filterHeight:i,filterWidth:u,dilationHeight:c,dilationWidth:l}=e,{top:h,left:d}=s;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eQ(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,c=Vu(s.shape,o.shape,a,i,"NHWC",u);let l;const h=new Z9(c);l=t.runWebGLProgram(h,[s,o],"float32");const d=fe({inputs:{x:l},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(l),d}const tQ={kernelName:Ul,backendName:"webgl",kernelFunc:eQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nQ(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,o=e,{allDims:a,summedDims:i,idDims:u}=hx(s,o.length);px(a.length,u,o);const{path:c,steps:l}=fx(i,u),h=l.length;let d=null,p=a.length;const f=[];for(let m=0;m<h;++m){for(const g of l[m]){const{permutationIndices:x,expandDims:y}=dx(p,u[g]);let b;mx(x)?b=o[g]:(b=In({inputs:{x:o[g]},backend:t,attrs:{perm:x}}),f.push(b));const v=b.shape.slice();for(let w=0;w<y.length;++w)v.splice(y[w],0,1);et(b.shape,v)||(b=fe({inputs:{x:b},backend:t,attrs:{shape:v}}),f.push(b)),d===null?d=b:(d=Ny({inputs:{a:b,b:d},backend:t}),f.push(d))}m<h-1&&(c[m]>=0&&(d=jd({inputs:{x:d},backend:t,attrs:{axis:c[m]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const m of f)m!==d&&t.disposeIntermediateTensorInfo(m);return d}const rQ={kernelName:km,backendName:"webgl",kernelFunc:nQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sQ=Qe({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),oQ={kernelName:tu,backendName:"webgl",kernelFunc:sQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aQ="return (b >= 0.0) ? a : a * (b + 1.0);",iQ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,uQ={kernelName:Sm,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t}=n,{dy:r,y:s}=e,o=Z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new pi(iQ,r.shape,s.shape):new ua(aQ,r.shape,s.shape);return t.runWebGLProgram(o,[r,s],r.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cQ=nn({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:Q5}),lQ={kernelName:Gl,backendName:"webgl",kernelFunc:cQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hQ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${rx};
  float a1 = ${sx};
  float a2 = ${ox};
  float a3 = ${ax};
  float a4 = ${ix};
  float a5 = ${ux};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,dQ=Qe({opSnippet:hQ}),pQ={kernelName:nu,backendName:"webgl",kernelFunc:dQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fQ=fi+`
  return exp(x);
`,DT=Qe({opSnippet:fQ,packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:J5,dtype:"float32"}),mQ={kernelName:ru,backendName:"webgl",kernelFunc:DT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ay(n){const{inputs:e,attrs:t,backend:r}=n,{dim:s}=t,{input:o}=e,a=o.shape.length,i=o.shape.slice();let u=s;return s<0&&(A(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),fe({inputs:{x:o},backend:r,attrs:{shape:i}})}const gQ={kernelName:Hl,backendName:"webgl",kernelFunc:Ay};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FT="return exp(x) - 1.0;",xQ=Qe({opSnippet:FT,packedOpSnippet:FT,cpuKernelImpl:Z5}),yQ={kernelName:su,backendName:"webgl",kernelFunc:xQ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OT{constructor(e,t,r){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const o=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=r?`${s}.0`:"1.0";let i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _T(n,e,t){const r=t.texData.get(n.dataId),s=ne(n.shape),o=n.shape[n.shape.length-1],a=s/o,i=fe({inputs:{x:n},backend:t,attrs:{shape:[a,o]}}),u=i.shape,c=new OT("real",u,e),l=new OT("imag",u,e),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],d=t.runWebGLProgram(c,h,"float32"),p=t.runWebGLProgram(l,h,"float32"),f=co({inputs:{real:d,imag:p},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p);const m=fe({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vQ(n){const{inputs:e,backend:t}=n,{input:r}=e;return _T(r,!1,t)}const bQ={kernelName:Nm,backendName:"webgl",kernelFunc:vQ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wQ{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rc(n){const{backend:e,attrs:t}=n,{shape:r,value:s}=t;let{dtype:o}=t;if(o=o||_a(s),o==="string"){const a=kt(o,ne(r));return a.fill(s),e.makeTensorInfo(r,o,a)}else{const a=new wQ(r,s),i=[[s]];return e.runWebGLProgram(a,[],o,i)}}const CQ={kernelName:Tm,backendName:"webgl",kernelFunc:Rc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IQ{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kQ={kernelName:Em,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,r=e,s=new IQ(t.shape);return r.runWebGLProgram(s,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MT="return floor(x);",SQ=Qe({opSnippet:MT,packedOpSnippet:MT,cpuKernelImpl:e8}),NQ={kernelName:ou,backendName:"webgl",kernelFunc:SQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TQ=nn({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"}),EQ={kernelName:au,backendName:"webgl",kernelFunc:TQ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RQ{constructor(e){this.variableNames=["A"];const t=wn(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AQ{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=wn(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Q={kernelName:d_,backendName:"webgl",kernelFunc:DQ};let gi,$y=Z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function DQ(n){const{inputs:e,backend:t,attrs:r}=n;let{pixels:s}=e;const{numChannels:o}=r,a=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,[u,c]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],l=[c,u],h=[c,u,o];if(i||a){const m=Z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(gi==null||m!==$y)&&($y=m,gi=document.createElement("canvas").getContext("2d",{willReadFrequently:$y})),gi.canvas.width=u,gi.canvas.height=c,gi.drawImage(s,0,0,u,c),s=gi.canvas}const d=t.makeTensorInfo(l,"int32");t.texData.get(d.dataId).usage=tr.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),s);const p=Z().getBool("WEBGL_PACK")?new AQ(h):new RQ(h),f=t.runWebGLProgram(p,[d],"int32");return t.disposeData(d.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FQ(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,m=vs(l),g=Zt(s.shape,o.shape,u,h,c,d,!1,m);let x;const y=[],b=a!=null,v=i!=null,w=p==="leakyrelu",C=()=>{const S=[s,o],k=(N,I)=>{if(I==="NCHW"&&N.shape.length===1&&N.shape[0]!==1){const E=fe({inputs:{x:N},backend:t,attrs:{shape:[N.shape[0],1,1]}});return y.push(E),E}return N};if(b&&S.push(k(a,l)),v&&S.push(k(i,l)),w){const N=t.makeTensorInfo([],"float32",Ws(f,"float32"));S.push(N),y.push(N)}return S};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))x=kT({x:s,filter:o,convInfo:g,backend:t,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&Z().getBool("WEBGL_EXP_CONV")){const S=p?kc(p,!0):null,k=new IT(g,b,S,v,w),N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],I=C();x=t.runWebGLProgram(k,I,"float32",N)}else if(Z().getBool("WEBGL_CONV_IM2COL"))x=ST({x:s,filter:o,convInfo:g,backend:t,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const S=p?kc(p,!1):null,k=new CT(g,b,S,v,w),N=C();x=t.runWebGLProgram(k,N,"float32")}const T=fe({inputs:{x},backend:t,attrs:{shape:g.outShape}});return y.push(x),y.forEach(S=>t.disposeIntermediateTensorInfo(S)),T}const OQ={kernelName:Ah,backendName:"webgl",kernelFunc:FQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Q(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:c,dilations:l,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let m=l;m==null&&(m=[1,1]),A(cn(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);const g=Zt(s.shape,o.shape,u,m,c,h,!0),x=Z().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,y=d?kc(d,x):null,b=[s,o],v=a!=null,w=i!=null,C=d==="leakyrelu";if(v&&b.push(a),w&&b.push(i),C){const N=t.makeTensorInfo([],"float32",Ws(p,"float32"));b.push(N),f.push(N)}let T;x?T=new $T(g,v,y,w,C):T=new AT(g,v,y,w,C);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],k=t.runWebGLProgram(T,b,"float32",S);return f.forEach(N=>t.disposeIntermediateTensorInfo(N)),k}const MQ={kernelName:rw,backendName:"webgl",kernelFunc:_Q};class LQ{constructor(e,t,r,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;const o=at(r.length);let a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PQ(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,o=s.shape,a=o[o.length-1],i=ne(r.shape),[u,c,l,h]=Hg(r,s),d=fe({inputs:{x:s},backend:t,attrs:{shape:[c,a]}}),p=fe({inputs:{x:r},backend:t,attrs:{shape:[ne(r.shape)/l,l]}});if(t.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const x=t.readSync(s.dataId),y=t.bufferSync(r),b=t8(x,y,r.dtype,c,a,l,h,r.shape,i);return t.makeTensorInfo(u,r.dtype,b.values)}const f=new LQ(a,h,[c,l],r.shape),m=t.runWebGLProgram(f,[p,d],p.dtype),g=fe({inputs:{x:m},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}const BQ={kernelName:B1,backendName:"webgl",kernelFunc:PQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zQ{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const r=at(this.rank),s=VQ(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}}function VQ(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<n.length;s++)s===2?r.push("index"):r.push(`${t[s]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LT(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:o}=e,{axis:a,batchDims:i}=r,u=Ve(a,s.shape)[0];if(Z().get("DEBUG")){const y=t.readSync(o.dataId),b=s.shape[u];for(let v=0;v<y.length;++v){const w=y[v];A(w<=b-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${b-1}]`)}}const c=yx(s,o,u,i),l=ne(o.shape),h=[],d=fe({inputs:{x:s},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=fe({inputs:{x:o},backend:t,attrs:{shape:[c.batchSize,l/c.batchSize]}});h.push(d),h.push(p);const f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const y=t.bufferSync(p),b=t.bufferSync(d),v=n8(b,y,f);return h.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(c.outputShape,v.dtype,v.values)}const m=new zQ(d.shape,f),g=t.runWebGLProgram(m,[d,p],d.dtype);h.push(g);const x=fe({inputs:{x:g},backend:t,attrs:{shape:c.outputShape}});return h.forEach(y=>t.disposeIntermediateTensorInfo(y)),x}const WQ={kernelName:jl,backendName:"webgl",kernelFunc:LT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UQ=nn({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:r8,dtype:"bool"}),GQ={kernelName:Kl,backendName:"webgl",kernelFunc:UQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HQ=nn({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:s8}),qQ={kernelName:iu,backendName:"webgl",kernelFunc:HQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jQ(n){const{inputs:e,backend:t}=n,{input:r}=e;return _T(r,!0,t)}const KQ={kernelName:Rm,backendName:"webgl",kernelFunc:jQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XQ=Qe({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),YQ={kernelName:cu,backendName:"webgl",kernelFunc:XQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QQ=Qe({opSnippet:"return float(isinf(x));",dtype:"bool"}),JQ={kernelName:lu,backendName:"webgl",kernelFunc:QQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZQ=Qe({opSnippet:"return float(isnan(x));",dtype:"bool"}),eJ={kernelName:hu,backendName:"webgl",kernelFunc:ZQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tJ=nn({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:o8,dtype:"bool"}),nJ={kernelName:Yl,backendName:"webgl",kernelFunc:tJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rJ=nn({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:a8,dtype:"bool"}),sJ={kernelName:Ql,backendName:"webgl",kernelFunc:rJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oJ(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:o}=t,a=i8(r,s,o);return e.makeTensorInfo([a.length],"float32",a)}const aJ={kernelName:z1,backendName:"webgl",kernelFunc:oJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iJ=fi+`
  return x < 0.0 ? 0./0. : log(x);
`,uJ=Qe({opSnippet:iJ,packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:u8}),cJ={kernelName:du,backendName:"webgl",kernelFunc:uJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lJ=fi+`
  return log(1.0 + x);
`,hJ=Qe({opSnippet:lJ}),dJ={kernelName:pu,backendName:"webgl",kernelFunc:hJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pJ=nn({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),fJ={kernelName:Jl,backendName:"webgl",kernelFunc:pJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mJ=Qe({opSnippet:"return float(!(x >= 1.0));"}),gJ={kernelName:Zl,backendName:"webgl",kernelFunc:mJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xJ=nn({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"}),yJ={kernelName:eh,backendName:"webgl",kernelFunc:xJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vJ{constructor(e,t,r,s,o){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;this.outputShape=e;let u;const c=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bJ{constructor(e,t,r,s,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;this.outputShape=e;let u;const c=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wJ={kernelName:th,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:o,bias:a,alpha:i,beta:u}=r,c=Z().getBool("WEBGL_PACK_NORMALIZATION")?new bJ(s.shape,o,a,i,u):new vJ(s.shape,o,a,i,u);return t.runWebGLProgram(c,[s],s.dtype)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CJ{constructor(e,t,r,s,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=s,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IJ={kernelName:$m,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s,y:o,dy:a}=e,{depthRadius:i,bias:u,alpha:c,beta:l}=r,h=new CJ(s.shape,i,u,c,l);return t.runWebGLProgram(h,[s,o,a],s.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kJ(n,e,t,r){const s=ne(e),a=ne(n.shape)/s,i=fe({inputs:{x:n},attrs:{shape:[a,s]},backend:r}),u=la(i,n.dtype,"max",r),c=fe({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PT(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:o,keepDims:a}=r,i=s.shape.length,u=Ve(o,s.shape);let c=u;const l=gt(c,i),h=l!=null,d=t.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const b=t.texData.get(p.dataId).values,v=new Array(i);for(let T=0;T<v.length;T++)v[T]=s.shape[l[T]];const w=ky(b,s.shape,s.dtype,l,v);p=t.makeTensorInfo(v,s.dtype);const C=t.texData.get(p.dataId);C.values=w}else p=qd(s,l,t);c=Nt(c.length,i)}en("max",c,i);const[f,m]=Ht(p.shape,c);let g=f;a&&(g=Dt(f,u));let x;if(d){const b=t.texData.get(p.dataId).values,v=c8(b,ne(m),g,s.dtype);x=t.makeTensorInfo(g,s.dtype);const w=t.texData.get(x.dataId);w.values=v}else x=kJ(p,m,g,t);return h&&t.disposeIntermediateTensorInfo(p),x}const SJ={kernelName:nh,backendName:"webgl",kernelFunc:PT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NJ=Sy+`
  return max(a, b);
`,TJ=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ca+`
  return result;
`,EJ=nn({opSnippet:NJ,packedOpSnippet:TJ,cpuKernelImpl:l8}),RJ={kernelName:fu,backendName:"webgl",kernelFunc:EJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AJ(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Cc(s,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,c=1;A(cn(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=ar(s.shape,o,a,c,i,u);if(l.filterWidth===1&&l.filterHeight===1&&et(l.inShape,l.outShape))return Un({inputs:{x:s},backend:t});const h=new Sc(l,"max",!1);return t.runWebGLProgram(h,[s],s.dtype)}const $J={kernelName:rh,backendName:"webgl",kernelFunc:AJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DJ(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:i,dataFormat:u,dimRoundingMode:c}=r,l=[1,1,1],h=ys(s.shape,o,a,l,i,c,u),d=new Ty(h,"max",!1);return t.runWebGLProgram(d,[s],s.dtype)}const FJ={kernelName:sh,backendName:"webgl",kernelFunc:DJ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OJ{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=o-1-e.padInfo.top,u=a-1-e.padInfo.left,c=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class _J{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,h=u-1-e.padInfo.front,d=c-1-e.padInfo.top,p=l-1-e.padInfo.left,f=u*c*l-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MJ(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:c,dimRoundingMode:l}=r,h=[1,1,1],d=ys(a.shape,i,u,h,c,l),p=new Ty(d,"max",!0),f=t.runWebGLProgram(p,[a],a.dtype),m=new _J(d),g=t.runWebGLProgram(m,[s,f],a.dtype);return t.disposeIntermediateTensorInfo(f),g}const LJ={kernelName:Fm,backendName:"webgl",kernelFunc:MJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PJ(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o,output:a}=e,i=o;Cc([o,a],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=r,d=ar(i.shape,u,c,1,l,h),p=!0,f=new Sc(d,"max",p),m=t.runWebGLProgram(f,[i],i.dtype),g=new OJ(d),x=t.runWebGLProgram(g,[s,m],i.dtype);return t.disposeIntermediateTensorInfo(m),x}const BJ={kernelName:Dm,backendName:"webgl",kernelFunc:PJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zJ(n,e,t,r){let s=new Sc(t,"max",!1);const o=r.runWebGLProgram(s,[n],"float32");s=new Sc(t,"max",!0,!0,e);const a=r.runWebGLProgram(s,[n],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VJ={kernelName:V1,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:s,strides:o,pad:a,includeBatchInIndex:i}=e,u=t;A(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];A(cn(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const l=ar(r.shape,s,o,c,a),[h,d]=zJ(r,i,l,u);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WJ(n,e,t,r){const s=ne(e),a=ne(n.shape)/s,i=fe({inputs:{x:n},attrs:{shape:[a,s]},backend:r}),u=la(i,"float32","mean",r),c=fe({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UJ={kernelName:oh,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{keepDims:s,axis:o}=e,a=t,i=r.shape.length,u=Ve(o,r.shape);let c=u;const l=gt(c,i),h=l!=null,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const v=a.texData.get(f.dataId).values,w=new Array(i);for(let S=0;S<w.length;S++)w[S]=r.shape[l[S]];const C=ky(v,r.shape,r.dtype,l,w);f=a.makeTensorInfo(w,r.dtype);const T=a.texData.get(f.dataId);T.values=C}else f=qd(r,l,a);p.push(f),c=Nt(c.length,i)}en("sum",c,i);const[m,g]=Ht(f.shape,c);let x=m;s&&(x=Dt(m,u));const y=WJ(f,g,x,a);for(const b of p)a.disposeIntermediateTensorInfo(b);return y}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GJ(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=Ve(o,s.shape);let c=u;const l=gt(c,i);let h=s;l!=null&&(h=In({inputs:{x:s},backend:t,attrs:{perm:l}}),c=Nt(c.length,s.shape.length)),en("min",c,i);const[d,p]=Ht(h.shape,c),f=ne(p),m=fe({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),g=la(m,m.dtype,"min",t);let x;if(a){const y=Dt(d,u);x=fe({inputs:{x:g},backend:t,attrs:{shape:y}})}else x=fe({inputs:{x:g},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(h),x}const HJ={kernelName:ah,backendName:"webgl",kernelFunc:GJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qJ=Sy+`
  return min(a, b);
`,jJ=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+ca+`
  return result;
`,KJ=nn({opSnippet:qJ,packedOpSnippet:jJ,cpuKernelImpl:h8}),XJ={kernelName:mu,backendName:"webgl",kernelFunc:KJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YJ{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((l,h)=>l[0]+e[h]+l[1]);const s=e.length,o=at(s),a=t.map(l=>l[0]).join(","),i=t.map((l,h)=>l[0]+e[h]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),c=r==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QJ{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);const s=e.length,o=at(s),a=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),u=Cn("rc",s),c=Cn("source",s),l=`${u[s-1]} < ${this.outputShape[s-1]}`,h=s===1?"source":`vec2(${c.slice(-2).join()})`,d=r==="reflect"?0:1;let p="";if(s===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${u[s-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${u[s-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${u[s-2]} += 1;
        if(${u[s-2]} < ${this.outputShape[s-2]}) {
          ${f}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${u[s-1]} += 1;
          if(${l}) {
            ${f}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JJ={kernelName:ih,backendName:"webgl",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r}=n,{paddings:s,mode:o}=t,a=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QJ(r.shape,s,o):new YJ(r.shape,s,o);return e.runWebGLProgram(a,[r],r.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZJ=`if (b == 0.0) return NAN;
  return mod(a, b);`,eZ=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+ca+`
  return result;
`,tZ=nn({opSnippet:ZJ,packedOpSnippet:eZ}),nZ={kernelName:gu,backendName:"webgl",kernelFunc:tZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rZ{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BT=nn({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),sZ={kernelName:eu,backendName:"webgl",kernelFunc:BT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zT="return a - b;",VT=nn({opSnippet:zT,packedOpSnippet:zT,supportsComplex:!0,cpuKernelImpl:D8}),oZ={kernelName:Du,backendName:"webgl",kernelFunc:VT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WT(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:o}=r,a=Ve([o],s.shape),i=PT({inputs:{x:s},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),u=Dt(i.shape,a),c=fe({inputs:{x:i},backend:t,attrs:{shape:u}}),l=VT({inputs:{a:s,b:c},backend:t}),h=DT({inputs:{x:l},backend:t}),d=jd({inputs:{x:h},backend:t,attrs:{axis:a,keepDims:!1}}),p=fe({inputs:{x:d},backend:t,attrs:{shape:u}}),f=BT({inputs:{a:h,b:p},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),f}const aZ={kernelName:Sh,backendName:"webgl",kernelFunc:WT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iZ(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:o,seed:a,normalized:i}=r,u=i?s:WT({inputs:{logits:s},backend:t,attrs:{dim:s.shape.length-1}}),c=u.shape[0],l=u.shape[1],h=new rZ(c,l,o),d=[[a]],p=t.runWebGLProgram(h,[u],"int32",d);return i||t.disposeIntermediateTensorInfo(u),p}const uZ={kernelName:W1,backendName:"webgl",kernelFunc:iZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cZ=mr+`
  return -x;
`,lZ=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function hZ(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])){const o=t.texData.get(r.dataId),[a,i]=p8(o.values,r.shape,r.dtype);return t.makeTensorInfo(i,r.dtype,a)}let s;return Z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new uo(r.shape,lZ):s=new ss(r.shape,cZ),t.runWebGLProgram(s,[r],r.dtype)}const dZ={kernelName:uh,backendName:"webgl",kernelFunc:hZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pZ=zg;function fZ(n){Yn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=r,c=t.readSync(s.dataId),l=t.readSync(o.dataId),{selectedIndices:h}=pZ(c,l,a,i,u);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const mZ={kernelName:Om,backendName:"webgl",kernelFunc:fZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gZ=Vg;function xZ(n){Yn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:c}=r,l=t.readSync(s.dataId),h=t.readSync(o.dataId),{selectedIndices:d,validOutputs:p}=gZ(l,h,a,i,u,c);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const yZ={kernelName:_m,backendName:"webgl",kernelFunc:xZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vZ=Wg;function bZ(n){Yn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:c}=r,l=t.readSync(s.dataId),h=t.readSync(o.dataId),d=a,p=i,f=u,m=c,{selectedIndices:g,selectedScores:x}=vZ(l,h,d,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const wZ={kernelName:Mm,backendName:"webgl",kernelFunc:bZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CZ{constructor(e,t,r,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IZ={kernelName:hh,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:o,depth:a,onValue:i,offValue:u}=r,c=ne(s.shape),l=new CZ(c,a,i,u),h=fe({inputs:{x:s},backend:t,attrs:{shape:[c]}}),d=t.runWebGLProgram(l,[h],o);t.disposeIntermediateTensorInfo(h);const p=[...s.shape,a],f=fe({inputs:{x:d},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(d),f}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zd(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="complex64"){const s=Nc({inputs:{input:r},backend:t}),o=Zd({inputs:{x:s},backend:t}),a=Qd({inputs:{input:r},backend:t}),i=Zd({inputs:{x:a},backend:t}),u=co({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return Rc({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:t})}const kZ={kernelName:Eh,backendName:"webgl",kernelFunc:Zd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UT(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=Nc({inputs:{input:r},backend:t}),o=UT({inputs:{x:s},backend:t}),a=Qd({inputs:{input:r},backend:t}),i=Zd({inputs:{x:a},backend:t}),u=co({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),u}else return Rc({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:t})}const SZ={kernelName:lh,backendName:"webgl",kernelFunc:UT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NZ(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return Ay({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const o=e[0].shape,a=e[0].dtype;e.forEach(l=>{Yf(o,l.shape,"All tensors passed to stack must have matching shapes"),A(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=e.map(l=>{const h=Ay({inputs:{input:l},backend:t,attrs:{dim:s}});return i.push(h),h}),c=wT({inputs:u,backend:t,attrs:{axis:s}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),c}const TZ={kernelName:dh,backendName:"webgl",kernelFunc:NZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EZ{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,l)=>c[0]+e[l]+c[1]);const s=e.length,o=at(s),a=t.map(c=>c[0]).join(","),i=t.map((c,l)=>c[0]+e[l]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RZ{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const s=e.length,o=at(s),a=t.map(m=>m[0]).join(","),i=t.map((m,g)=>m[0]+e[g]).join(","),u=Cn("rc",s),c=Cn("source",s),l=`${u[s-1]} < ${this.outputShape[s-1]}`,h=s===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${o} rc = outputLoc;`,`${u[s-1]} += 1;
       if(${l}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${u[s-2]} += 1;
       if(${u[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${u[s-1]} += 1;
         if(${l}) {`],p=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=s===1?2:4;m<g;m++)f+=`
        ${d[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${m}] = getChannel(getX(${c.join()}), ${h});
        }
      `;f+=s===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GT=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:o,constantValue:a}=r;if(ne(s.shape)===0){const c=o.map((l,h)=>l[0]+s.shape[h]+l[1]);return Rc({backend:t,attrs:{shape:c,value:a,dtype:s.dtype}})}const i=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new RZ(s.shape,o,a):new EZ(s.shape,o,a),u=[[a]];return t.runWebGLProgram(i,[s],s.dtype,u)},AZ={kernelName:ph,backendName:"webgl",kernelFunc:GT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Z=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,DZ=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+ca+`
  return result;
`,FZ=nn({opSnippet:$Z,packedOpSnippet:DZ}),OZ={kernelName:yu,backendName:"webgl",kernelFunc:FZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Z(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=[],c=Ve(o,s.shape);let l=c;const h=gt(l,i);let d=s;h!=null&&(d=In({inputs:{x:s},backend:t,attrs:{perm:h}}),l=Nt(l.length,i),u.push(d)),en("prod",l,i);let p;if(t.shouldExecuteOnCPU([d])){const f=t.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:x}=m8(d.shape,d.dtype,f,l);p=t.makeTensorInfo(g,x,m)}else{const[f,m]=Ht(d.shape,l),g=ne(m),x=fe({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}}),y=ng(s.dtype),b=la(x,y,"prod",t);p=fe({inputs:{x:b},backend:t,attrs:{shape:f}}),u.push(x),u.push(b)}if(a){u.push(p);const f=Dt(p.shape,c);p=fe({inputs:{x:p},backend:t,attrs:{shape:f}})}return u.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const MZ={kernelName:mh,backendName:"webgl",kernelFunc:_Z};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LZ(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:i}=r,u=s.map(x=>t.readSync(x.dataId)),c=s.map(x=>x.shape),l=t.readSync(o.dataId),h=t.readSync(a.dataId),[d,p,f]=g8(u,c,l,o.shape,o.dtype,h,a.shape,i),m=d.map(x=>t.makeTensorInfo([x.length],"int32",x)),g=t.makeTensorInfo(f,o.dtype,p);return m.concat([g])}const PZ={kernelName:U1,backendName:"webgl",kernelFunc:LZ};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BZ(n){const{inputs:e,backend:t}=n,{starts:r,limits:s,deltas:o}=e,a=t.readSync(r.dataId),i=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,l]=x8(a,r.shape,r.dtype,i,s.shape,u,o.shape),h=t.makeTensorInfo([c.length],"int32",c),d=t.makeTensorInfo([l.length],r.dtype,l);return[h,d]}const zZ={kernelName:G1,backendName:"webgl",kernelFunc:BZ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VZ(n){const{inputs:e,backend:t,attrs:r}=n,{shape:s,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:u}=r,c=t.readSync(s.dataId),l=t.readSync(o.dataId),h=t.readSync(a.dataId),d=i.map(g=>t.readSync(g.dataId)),p=i.map(g=>g.shape),[f,m]=y8(c,s.shape,l,o.shape,o.dtype,h,a.shape,d,p,u);return t.makeTensorInfo(f,o.dtype,m)}const WZ={kernelName:H1,backendName:"webgl",kernelFunc:VZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HT=n=>{const{backend:e,attrs:t}=n,{start:r,stop:s,step:o,dtype:a}=t,i=v8(r,s,o,a);return e.makeTensorInfo([i.length],a,i)},UZ={kernelName:Lm,backendName:"webgl",kernelFunc:HT};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GZ=Qe({opSnippet:"return 1.0 / x;"}),HZ={kernelName:vu,backendName:"webgl",kernelFunc:GZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qZ=mr+`
  return (x < 0.0) ? 0.0 : x;
`,jZ=Qe({opSnippet:qZ,packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),KZ={kernelName:bu,backendName:"webgl",kernelFunc:jZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XZ=mr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,YZ=Qe({opSnippet:XZ,packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),QZ={kernelName:wu,backendName:"webgl",kernelFunc:YZ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JZ{constructor(e,t,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r];let d;o?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/h[0]},
          ${l[1]/h[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZZ{constructor(e,t,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r];let d;o?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/h[0]},
          ${l[1]/h[1]},
          ${l[1]/h[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eee(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,c]=i,l=Z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ZZ(s.shape,u,c,o,a):new JZ(s.shape,u,c,o,a);return t.runWebGLProgram(l,[s],"float32")}const tee={kernelName:yh,backendName:"webgl",kernelFunc:eee};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nee{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,o]=t,[,a,i]=e,u=[r&&a>1?s-1:s,r&&i>1?o-1:o],c=[r&&a>1?a-1:a,r&&i>1?i-1:i],l=u[0]/c[0],h=u[1]/c[1],d=1/l,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ree(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r,i=new nee(o.shape,s.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const see={kernelName:zm,backendName:"webgl",kernelFunc:ree};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oee{constructor(e,t,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r],d=s?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/h[0]},
          ${l[1]/h[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aee{constructor(e,t,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,c]=e;this.outputShape=[a,t,r,c];const l=[s&&t>1?i-1:i,s&&r>1?u-1:u],h=[s&&t>1?t-1:t,s&&r>1?r-1:r],d=s?"0.5":"0.0";let p;o?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/h[0]},
          ${l[1]/h[1]},
          ${l[1]/h[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iee(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,c]=i,l=Z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new aee(s.shape,u,c,o,a):new oee(s.shape,u,c,o,a);return t.runWebGLProgram(l,[s],s.dtype)}const uee={kernelName:xh,backendName:"webgl",kernelFunc:iee};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cee{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,o]=t,[,a,i]=e,u=[r&&a>1?s-1:s,r&&i>1?o-1:o],c=[r&&a>1?a-1:a,r&&i>1?i-1:i],l=u[0]/c[0],h=u[1]/c[1],d=1/l,p=1/h,f=Math.ceil(d)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lee(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r,i=new cee(o.shape,s.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const hee={kernelName:Bm,backendName:"webgl",kernelFunc:lee};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dee{constructor(e,t){this.variableNames=["x"];const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const s=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,o=e.map((i,u)=>s(u)).join(","),a=at(r);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pee{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const s=Cn("rc",r),o=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,a=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,i=at(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(s.slice())};
          if(${o}){
            result.g = ${c(s.slice())};
          }
          if(${a}) {
            result.b = ${l(s.slice())};
            if(${o}) {
              result.a = ${h(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return d(f)}function c(f){return f[r-1]="("+f[r-1]+" + 1)",d(f)}function l(f){return f[r-2]="("+f[r-2]+" + 1)",d(f)}function h(f){return f[r-1]="("+f[r-1]+" + 1)",f[r-2]="("+f[r-2]+" + 1)",d(f)}function d(f){const m=e.map((y,b)=>p(b,f)),g=m.join(","),x=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${x}))`}function p(f,m){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fee(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:o}=r,a=s.shape.length,i=Ve(o,s.shape);if(a===0)return Un({inputs:{x:s},backend:t});const u=Z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pee(s.shape,i):new dee(s.shape,i);return t.runWebGLProgram(u,[s],s.dtype)}const mee={kernelName:vh,backendName:"webgl",kernelFunc:fee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gee{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=e[1],s=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xee={kernelName:jm,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:o,center:a}=e,i=t,u=new gee(r.shape,o),[c,l]=ex(a,r.shape[1],r.shape[2]),h=[[c,l,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(u,[r],r.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yee=Qe({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),vee={kernelName:Cu,backendName:"webgl",kernelFunc:yee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bee=Qe({opSnippet:"return inversesqrt(x);",cpuKernelImpl:b8}),wee={kernelName:Iu,backendName:"webgl",kernelFunc:bee};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dy{constructor(e,t,r,s,o,a,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const c=at(o.length),l=at(a.length);let h="";r===1?h="i":r===2&&(h="i, j");const d=`getIndices(${h})`;let p="";s===1?p="i":s===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";u&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,x=t>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${x};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${g}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cee{constructor(e,t,r,s,o,a,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const c=at(o.length),l=at(a.length);let h="";r===1?h="i":r===2&&(h="i, j");const d=`getIndices(${h})`;let p="";s===1?p="i":s===2&&(p="i, coords[1]");const f=`getUpdates(${p})`;let m="";u&&(m="coords[0], coords[1]");const g=`getDefaultValue(${m})`,x=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${l} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${x};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${g}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iee(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:o}=e,{shape:a}=r,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=jo(o,s,a),d=[h/c,c];if(h===0)return t.makeTensorInfo(a,s.dtype);const p=fe({inputs:{x:s},backend:t,attrs:{shape:[u,i]}}),f=fe({inputs:{x:o},backend:t,attrs:{shape:[u,c]}}),m=t.makeTensorInfo([],"float32",new Float32Array([0]));let g;Z().getBool("WEBGL_PACK")?g=new Cee(u,i,p.shape.length,f.shape.length,l,d):g=new Dy(u,i,p.shape.length,f.shape.length,l,d);const x=t.runWebGLProgram(g,[f,p,m],f.dtype),y=fe({inputs:{x},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(m),y}const kee={kernelName:q1,backendName:"webgl",kernelFunc:Iee};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class See{constructor(e,t,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];const o="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=Z().getNumber("WEBGL_VERSION")===2?o:a,u=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nee(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:o}=e,{side:a}=r,i=new See(s.shape[0],s.shape[1],o.shape[1],a),u=[[s.shape[1]]];return t.runWebGLProgram(i,[s,o],"int32",u)}const Tee={kernelName:K1,backendName:"webgl",kernelFunc:Nee};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Eee{constructor(e,t,r){this.variableNames=["c","a","b"],this.outputShape=t;let s,o;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)o="resRC",s="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],c=[];for(let l=0;l<t.length;l++)c.push(`${i[l]}`),l<e&&u.push(`${i[l]}`);s=u.join(),o=c.join()}const a=at(r);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ree(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:o}=e,a=new Eee(r.shape.length,s.shape,s.shape.length);return t.runWebGLProgram(a,[r,s,o],Bn(s.dtype,o.dtype))}const Aee={kernelName:bh,backendName:"webgl",kernelFunc:Ree};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ee=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${sd};
  float scale = ${od};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Dee=Qe({opSnippet:$ee}),Fee={kernelName:ku,backendName:"webgl",kernelFunc:Dee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oee=fi+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,_ee=Qe({opSnippet:Oee,packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:C8}),Mee={kernelName:Eu,backendName:"webgl",kernelFunc:_ee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lee=Qe({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),Pee={kernelName:Tu,backendName:"webgl",kernelFunc:Lee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bee=fi+`
  return sin(x);
`,zee=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${ca}
  return result;
`,Vee=Qe({opSnippet:Bee,packedOpSnippet:zee}),Wee={kernelName:Su,backendName:"webgl",kernelFunc:Vee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uee=Qe({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),Gee={kernelName:Nu,backendName:"webgl",kernelFunc:Uee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hee=Qe({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),qee={kernelName:Ru,backendName:"webgl",kernelFunc:Hee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jee={kernelName:Ih,backendName:"webgl",kernelFunc:n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,paddings:a}=r;A(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((x,y)=>x*y),u=[[0,0]];u.push(...a);for(let x=1+o.length;x<s.shape.length;++x)u.push([0,0]);const c=[],l=GT({inputs:{x:s},backend:t,attrs:{paddings:u,constantValue:0}}),h=Ju(l.shape,o,i,!1),d=Zu(h.length,o.length,!1),p=ec(l.shape,o,i,!1),f=fe({inputs:{x:l},backend:t,attrs:{shape:h}}),m=In({inputs:{x:f},backend:t,attrs:{perm:d}}),g=fe({inputs:{x:m},backend:t,attrs:{shape:p}});return c.push(l),c.push(f),c.push(m),c.forEach(x=>t.disposeIntermediateTensorInfo(x)),g}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kee(n){const{inputs:e,backend:t}=n,{indices:r,values:s,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=t.readSync(r.dataId),u=t.readSync(s.dataId),c=t.readSync(o.dataId),l=t.readSync(a.dataId)[0],[h,d,p,f,m]=k8(i,r.shape,r.dtype,u,s.dtype,c,l);return[t.makeTensorInfo(d,r.dtype,h),t.makeTensorInfo([d[0]],s.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}const Xee={kernelName:X1,backendName:"webgl",kernelFunc:Kee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yee(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:s,newShape:o}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(t.readSync(s.dataId)),i=t.readSync(r.dataId),u=Array.from(t.readSync(o.dataId)),[c,l,h]=S8(i,r.shape,r.dtype,a,u);return[t.makeTensorInfo(l,r.dtype,c),t.makeTensorInfo([h.length],o.dtype,new Int32Array(h))]}const Qee={kernelName:Y1,backendName:"webgl",kernelFunc:Yee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jee(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const a=t.readSync(r.dataId),i=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,l]=YN(a,r.shape,r.dtype,i,u,!0);return t.makeTensorInfo(l,r.dtype,c)}const Zee={kernelName:Q1,backendName:"webgl",kernelFunc:Jee};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ete(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const a=t.readSync(r.dataId),i=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,l]=YN(a,r.shape,r.dtype,i,u);return t.makeTensorInfo(l,r.dtype,c)}const tte={kernelName:J1,backendName:"webgl",kernelFunc:ete};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nte(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:o,defaultValue:a}=e,{outputShape:i}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:d}=jo(o,s,i),p=!1;if(o.dtype==="string"){const x=t.bufferSync(s),y=t.bufferSync(o),b=Gs(t.readSync(a.dataId)[0]),v=w8(x,y,i,d,l,c,u,h,b,p);return t.makeTensorInfo(i,v.dtype,v.values)}const f=new Dy(c,u,s.shape.length,o.shape.length,h,[d,1],p),m=t.runWebGLProgram(f,[o,s,a],o.dtype),g=fe({inputs:{x:m},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(m),g}const rte={kernelName:Z1,backendName:"webgl",kernelFunc:nte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ste(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:o,axis:a}=r,i=Ve(a,s.shape)[0],u=gx(s,o,i),c=s.shape.length,l=new Array(c).fill(0),h=s.shape.slice();return u.map(d=>{const p=[...h];p[i]=d;const f=mi({inputs:{x:s},backend:t,attrs:{begin:l,size:p}});return l[i]+=d,f})}const ote={kernelName:kh,backendName:"webgl",kernelFunc:ste};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qT="return sqrt(x);",ate=Qe({opSnippet:qT,packedOpSnippet:qT,cpuKernelImpl:N8}),ite={kernelName:Au,backendName:"webgl",kernelFunc:ate};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ute=Qe({opSnippet:"return x * x;"}),cte={kernelName:Vm,backendName:"webgl",kernelFunc:ute};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jT="return (a - b) * (a - b);",lte=nn({opSnippet:jT,packedOpSnippet:jT}),hte={kernelName:$u,backendName:"webgl",kernelFunc:lte};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dte(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");const o=t.readSync(s.dataId),a=ks(o),i=T8(a,"string",r);return t.makeTensorInfo(s.shape,"string",i)}const pte={kernelName:Wm,backendName:"webgl",kernelFunc:dte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fte({inputs:n,attrs:e,backend:t}){const{x:r}=n,s=mr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new ss(r.shape,s);return t.runWebGLProgram(o,[r],r.dtype)}const mte={kernelName:Mu,backendName:"webgl",kernelFunc:fte};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gte{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;const s=r.length,o=at(r.length),a=at(r.length);let i="";if(s===1)i="coords * strides + begin";else{let u=0;i=r.map((c,l)=>(u++,r.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${u-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xte(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,end:a,strides:i,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:x,begin:y,end:b,strides:v}=Qg(s.shape,o,a,i,u,c,l,h,d);let w;if(m)w=fe({inputs:{x:s},backend:t,attrs:{shape:f}});else if(g||x){A(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const T=Kg(y,b,v),S=mi({inputs:{x:s},backend:t,attrs:{begin:y,size:T}});w=fe({inputs:{x:S},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(S)}else if(t.shouldExecuteOnCPU([s])){const S=t.readSync(s.dataId),k=We(s.shape,s.dtype,S),N=E8(p,k,v,y);w=t.makeTensorInfo(f,s.dtype,N.values)}else{const S=new gte(y,v,p);w=t.runWebGLProgram(S,[s],s.dtype)}const C=fe({inputs:{x:w},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(w),C}const yte={kernelName:Um,backendName:"webgl",kernelFunc:xte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vte(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:h}=e,d=t.readSync(l.dataId),p=t.readSync(h.dataId),[f,m]=R8(d,p,s,o,a,i,u,c);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(h.shape,"int32",m)]}const bte={kernelName:ew,backendName:"webgl",kernelFunc:vte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wte(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:s}=r,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=t.readSync(o.dataId),u=t.readSync(a.dataId)[0],[c,l,h]=A8(i,u,s),d=l.length;return[t.makeTensorInfo([d,2],"int32",c),t.makeTensorInfo([d],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const Cte={kernelName:tw,backendName:"webgl",kernelFunc:wte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ite(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:s}=r,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(o.dataId),i=$8(a,s);return t.makeTensorInfo(o.shape,"int32",i)}const kte={kernelName:nw,backendName:"webgl",kernelFunc:Ite};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ste=Qe({opSnippet:"return tan(x);"}),Nte={kernelName:Fu,backendName:"webgl",kernelFunc:Ste};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tte=Qe({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`}),Ete={kernelName:Ou,backendName:"webgl",kernelFunc:Tte};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rte(n){const{inputs:e,backend:t,attrs:r}=n,{tensor:s,indices:o,updates:a}=e,{sliceRank:i,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=jo(a,o,s.shape),d=[h/c,c];if(h===0)return t.makeTensorInfo(s.shape,o.dtype);const p=fe({inputs:{x:o},backend:t,attrs:{shape:[u,i]}}),f=fe({inputs:{x:a},backend:t,attrs:{shape:[u,c]}}),m=fe({inputs:{x:s},backend:t,attrs:{shape:d}}),g=new Dy(u,i,p.shape.length,f.shape.length,l,d,!1,!0),x=t.runWebGLProgram(g,[f,p,m],m.dtype),y=fe({inputs:{x},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),y}const Ate={kernelName:j1,backendName:"webgl",kernelFunc:Rte};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $te{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[a]*t[a];this.outputShape=r,this.rank=r.length;const s=at(this.rank),o=Dte(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function Dte(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<n.length;s++)r.push(`imod(${t[s]}, ${n[s]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KT(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:o}=r;if(s.dtype==="string"||s.shape.length>5){const u=t.readSync(s.dataId),c=s.dtype==="string"?u.map(d=>Gs(d)):u,l=We(s.shape,s.dtype,c),h=F8(l,o);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const a=new $te(s.shape,o);return t.runWebGLProgram(a,[s],s.dtype)}const Fte={kernelName:_u,backendName:"webgl",kernelFunc:KT};class Ote{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class _te{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ha(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function XT(n){let e=1;for(;e<n;)e*=2;return e}function Mte(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:o,sorted:a}=r,i=Z().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Z().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,l=c[c.length-1];if(t.shouldExecuteOnCPU([s])||l<i||o>u){const N=t.readSync(s.dataId),[I,E]=O8(N,c,s.dtype,o,a);return[t.makeTensorInfo(I.shape,I.dtype,I.values),t.makeTensorInfo(E.shape,E.dtype,E.values)]}if(o===0)return c[c.length-1]=0,[t.makeTensorInfo(c,s.dtype,[]),t.makeTensorInfo(c,"int32",[])];if(l===1)return[s,Rc({attrs:{shape:c,dtype:"int32",value:0},backend:t})];const h=t.texData.get(s.dataId),d=h!==null&&h.isPacked,p=d?t.unpackTensor(s):s,m=ne(c)/l,g=fe({inputs:{x:p},attrs:{shape:[m,l]},backend:t});d&&ha(t,p);const x=XT(o),y=XT(l);let b=null;const v=()=>b===null?[g,g]:[g,b],w=(N,I,E)=>{const F=v(),O=new Ote(E),M=[[l],[b===null?1:0],[Number.NEGATIVE_INFINITY],[N],[I]],P=b;b=t.runWebGLProgram(O,F,"int32",M),ha(t,P)};for(let N=1;N<x;N*=2){const I=N*2;for(let E=N;E>=1;E/=2)w(I,E,[m,y])}for(let N=y;N>x;N/=2){const I=v(),E=new _te([m,N/2]),O=[[l],[b===null?1:0],[x]],D=b;b=t.runWebGLProgram(E,I,"int32",O),ha(t,D);const M=x/2,P=M*2;for(let L=M;L>=1;L/=2)w(P,L,b.shape)}let C=b;b=mi({inputs:{x:b},backend:t,attrs:{begin:0,size:[m,o]}}),ha(t,C);let T=LT({inputs:{x:g,indices:b},backend:t,attrs:{axis:1,batchDims:1}});ha(t,g);const S=c.slice(0,-1);S.push(o),C=b,b=fe({inputs:{x:b},attrs:{shape:S},backend:t}),ha(t,C);const k=T;return T=fe({inputs:{x:T},attrs:{shape:S},backend:t}),ha(t,k),[T,b]}const Lte={kernelName:Gm,backendName:"webgl",kernelFunc:Mte};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pte{constructor(e,t,r,s,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=r==="nearest"?1:2;let u;switch(s){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bte(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:c}=r,[l,h,d,p]=s.shape,[f,m]=c??[h,d],g=[l,f,m,p],x=new Pte(h,d,a,i,u,g);return t.runWebGLProgram(x,[s,o],"float32")}const zte={kernelName:Hm,backendName:"webgl",kernelFunc:Bte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vte(n){const{inputs:e,attrs:t,backend:r}=n,{axis:s}=t,{x:o}=e;Cc(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(o.dataId),{outputValues:i,outputShape:u,indices:c}=_8(a,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([c.length],"int32",c)]}const Wte={kernelName:qm,backendName:"webgl",kernelFunc:Vte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ute(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s,i=a.shape.length,u=s.shape[o],c=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==o&&(c[l++]=a.shape[m]);const h=[],d=new Array(i).fill(0),p=a.shape.slice();p[o]=1;const f=new Array(u);for(let m=0;m<f.length;m++){d[o]=m;const g=mi({inputs:{x:a},backend:t,attrs:{begin:d,size:p}}),x=fe({inputs:{x:g},backend:t,attrs:{shape:c}});f[m]=x,h.push(g)}return h.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const Gte={kernelName:Nh,backendName:"webgl",kernelFunc:Ute};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hte{constructor(e,t){this.variableNames=["x","segmentIds"];const r=e.windowSize,s=e.batchSize,o=e.inSize,a=e.numSegments,i=a*Math.ceil(o/r);this.outputShape=[s,i];const u="0.0",c="sumValue",l=Math.floor(r/4)*4,h=r%4,d=`
        sumValue += dot(values, segFilter);
    `;let p="";o%r>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${l};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qte(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:o}=e,{numSegments:a}=r,i=s.shape.length,u=[];let c=0;const l=gt([c],i);let h=s;l!=null&&(h=In({inputs:{x:s},backend:t,attrs:{perm:l}}),u.push(h),c=Nt(1,i)[0]);const d=bI(h.shape,c,a),p=ne([h.shape[c]]),f=fe({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}});u.push(f);const m=ng(s.dtype),g=(v,w,C,T,S)=>{const k=v.shape[0],N=v.shape[1],I=vI(N,S),E={windowSize:I,inSize:N,batchSize:k,numSegments:S},F=new Hte(E,w),O=t.compileAndRun(F,[v,C],T);if(u.push(O),O.shape[1]===S)return O;const D=HT({backend:t,attrs:{start:0,stop:S,step:1,dtype:"float32"}}),M=KT({inputs:{x:D},backend:t,attrs:{reps:[N/I]}});return u.push(D),u.push(M),g(O,w,M,T,S)},x=g(f,"unsortedSegmentSum",o,m,a),y=fe({inputs:{x},backend:t,attrs:{shape:d}});let b=y;if(l!=null){u.push(y);const v=js(l);b=In({inputs:{x:b},backend:t,attrs:{perm:v}})}return u.forEach(v=>t.disposeIntermediateTensorInfo(v)),b}const jte={kernelName:Th,backendName:"webgl",kernelFunc:qte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kte=[NY,EY,$Y,OY,MY,BY,VY,UY,jY,XY,JY,t7,s7,u7,h7,p7,m7,v7,w7,I7,N7,D7,O7,P7,z7,H7,j7,Q7,cY,e9,o9,c9,m9,y9,b9,C9,k9,E9,A9,D9,O9,M9,P9,V9,U9,j9,X9,J9,tQ,rQ,oQ,uQ,lQ,pQ,mQ,gQ,yQ,bQ,CQ,kQ,NQ,EQ,$Q,OQ,MQ,BQ,WQ,GQ,qQ,uY,KQ,r9,YQ,JQ,eJ,hY,nJ,sJ,aJ,cJ,dJ,fJ,gJ,yJ,wJ,IJ,SJ,RJ,$J,FJ,LJ,BJ,VJ,UJ,HJ,XJ,JJ,nZ,uZ,fY,dZ,mZ,yZ,wZ,V7,IZ,SZ,TZ,AZ,OZ,pY,MZ,PZ,zZ,WZ,UZ,W7,sZ,HZ,KZ,QZ,gY,tee,see,uee,hee,mee,xee,vee,wee,kee,Tee,Aee,Fee,Mee,Pee,Wee,Gee,$7,aZ,qee,jee,Xee,Qee,Zee,tte,rte,ote,ite,cte,hte,pte,mte,yte,bte,Cte,kte,oZ,IY,Nte,Ete,Ate,Fte,Lte,zte,kY,Wte,Gte,jte,kZ];for(const n of Kte)iw(n);const Xte=.9;Yte(null);function Yte(n){return n||(n=qO(Xte,["identity_attack","insult","obscene","severe_toxicity","sexual_explicit","threat","toxicity"])),n}async function Qte(n){let e=0;return xi.some(t=>n.includes(t))&&(e+=5),ho.some(t=>n.includes(t))?e+=5:rE(n)?e+=4:ho.some(t=>iE(n,[t]))&&(e+=3),e>=5,e}function Jte(n=document.body){const e=document.createTreeWalker(n,NodeFilter.SHOW_TEXT,{acceptNode:s=>{const o=s.parentElement;if(!o)return NodeFilter.FILTER_REJECT;const a=getComputedStyle(o);return a.display==="none"||a.visibility==="hidden"||a.opacity==="0"||!s.nodeValue||!s.nodeValue.trim()?NodeFilter.FILTER_REJECT:NodeFilter.FILTER_ACCEPT}}),t=[];let r;for(;r=e.nextNode();)t.push(r);return t}async function Zte(n){for(const e of n){const t=e.nodeValue??"",r=await Qte(t);console.log(`Evaluating text: "${t}" - Score: ${r}`),r>=5&&ene(e,r)}}function ene(n,e){const t=n.parentElement;t&&(e>=5?(t.style.filter="blur(5px)",t.setAttribute("data-hate-filtered","true")):t.innerHTML='<span style="color:red;">[Content Removed: Hate Speech]</span>')}async function YT(){console.log("Starting hate speech detection...");const n=Jte();await Zte(n)}function tne(){new MutationObserver(()=>{YT()}).observe(document.body,{childList:!0,subtree:!0})}YT(),tne(),console.log("Hate Speech Detector Content Script Loaded")})();
